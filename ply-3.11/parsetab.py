
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMILLA COMMA COMPARE CTEC CTEF CTEI CTESTRING DETERMINANTE DIV ELSE END EQUALS FLOAT FOR FROM FUN GT GTE ID IF INT INVERSA LBRACKET LCURLY LPAREN LT LTE MAIN MINUS MUL NE OR PLUS PRINT PROGRAM RBRACKET RCURLY READ RETURN RPAREN SEMICOLON TO TRANSPUESTA VAR VOID WHILE\n        programa :  PROGRAM ID SEMICOLON addP programa1 \n        addP :\n\tprograma1 : vars modules programa2\n\tprograma1 : vars modules\n\t          | programa2\n\t\n\tprograma2 :  main\n\t\n\tmain : MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END\n\t\n    tipo : INT guardaTipoVar\n         | FLOAT guardaTipoVar\n         | CHAR guardaTipoVar \n    guardaTipoVar : \n    vars : var \n         | empty\n    \n    var : VAR var2 \n    \n        var1 : ID \n            | ID COMMA var1 addV\n            | ID arr \n            | ID arr COMMA var1 addV\n            | ID mat COMMA var1 addV\n            | ID mat \n            | ID mat especial \n            | empty \n    addV :\n        var2 : var2 tipo var1 SEMICOLON addV\n             | empty\n    \n    especial : TRANSPUESTA\n             | INVERSA\n             | DETERMINANTE\n    \n    arr : LBRACKET CTEI RBRACKET\n        | LBRACKET exp RBRACKET \n    \n    \n    mat : LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET\n        | LBRACKET exp RBRACKET LBRACKET exp RBRACKET\n        | LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET\n        | LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET\n    \n    modules : function modules\n            | empty\n    \n     save_fun : \n    function : FUN VOID function1 \n             | FUN INT function2 \n             | FUN CHAR function2 \n             | FUN FLOAT function2 \n    \n    function1 : ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY \n    \n    function2 : ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY \n    \n    statement :  statement1 statement\n              | empty\n    \n    statement1 : asignacion SEMICOLON\n               | llamada SEMICOLON\n               | lectura SEMICOLON\n               | escritura SEMICOLON\n               | for\n               | if\n               | while\n    \n    asignacion : ID EQUALS exp\n               | ID arr EQUALS exp\n               | ID mat EQUALS exp\n    \n    param : tipo param1  \n          | empty\n    \n    \n    param1 : ID\n           | ID COMMA param1\n           | empty \n    \n    llamada : ID LPAREN exp RPAREN\n    \n    if : IF LPAREN exp RPAREN LCURLY statement RCURLY\n       | IF LPAREN exp RPAREN LCURLY statement RCURLY else\n    \n    else : ELSE LCURLY statement RCURLY\n         | empty\n    \n    for : FOR LPAREN for1 RPAREN LCURLY statement RCURLY\n    \n    for1 : FROM asignacion TO exp\n    \n    while : WHILE LPAREN exp RPAREN LCURLY statement RCURLY\n    \n    escritura : PRINT LPAREN escritura1 RPAREN\n    \n    escritura1 : escritura2 COMMA escritura2\n               | escritura2\n    \n    escritura2 : CTESTRING  \n               | CTEI\n               | CTEF \n               | exp\n    \n    lectura : READ LPAREN var1 RPAREN\n    \n    exp : nexp  \n        | nexp OR saveOperator nexp \n    genera_quad_asignacion : genera_quad_or : genera_quad_and : \n    nexp : compexp\n         | compexp AND saveOperator compexp \n    \n    compexp : sumexp \n            | compexp1 sumexp\n    \n    compexp1 : sumexp GT saveOperator sumexp \n             | sumexp LT saveOperator sumexp \n             | sumexp GTE saveOperator sumexp \n             | sumexp LTE saveOperator sumexp \n             | sumexp NE saveOperator sumexp \n             | sumexp COMPARE saveOperator sumexp\n    \n    sumexp : mulexp  \n           | mulexp PLUS saveOperator mulexp\n           | mulexp MINUS saveOperator mulexp\n    genera_sum_quad : \n    mulexp : pexp  \n           | pexp MUL saveOperator pexp\n           | pexp DIV saveOperator pexp\n    \n    pexp : var1 saveId  \n         | CTEI saveCTE\n         | CTEF saveCTE\n         | CTEC saveCTE\n         | CTESTRING saveCTE  \n         | llamada\n         | LPAREN exp RPAREN\n    \n    empty :\n    saveId : saveCTE : saveOperator : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,4,5,6,7,8,9,10,11,12,14,15,16,18,19,21,22,34,36,38,39,52,61,183,227,238,],[0,-2,-106,-1,-106,-5,-12,-13,-6,-106,-4,-106,-36,-14,-25,-3,-35,-38,-39,-40,-41,-23,-24,-7,-42,-43,]),'ID':([2,9,10,12,18,19,23,24,25,26,27,28,29,30,32,41,42,43,44,45,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,74,75,76,77,78,79,80,81,82,83,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,113,115,121,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,152,153,154,155,156,159,160,162,163,172,173,174,175,176,177,178,179,180,181,182,185,186,195,198,199,200,201,202,203,208,214,215,217,218,219,220,228,229,230,231,233,235,237,240,],[3,-12,-13,-106,-14,-25,35,37,37,37,41,-11,-11,-11,48,-15,-22,-8,-9,-10,-23,41,-17,-20,83,-106,48,-24,-23,41,41,-21,-26,-27,-28,83,-92,-96,-107,-108,-108,-108,-104,83,-15,124,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,83,124,-50,-51,-52,-18,-19,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-105,-46,-47,-48,-49,83,41,83,83,83,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,83,83,211,-106,-106,-31,-34,-32,-33,83,124,124,124,83,124,124,83,-66,-62,-68,-63,-65,124,-64,]),'SEMICOLON':([3,27,28,29,30,40,41,42,43,44,45,53,54,55,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,117,118,119,120,130,131,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,156,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,200,201,202,203,204,205,206,207,228,232,],[4,-106,-11,-11,-11,52,-15,-22,-8,-9,-10,-106,-17,-20,-23,-106,-106,-21,-26,-27,-28,-77,-82,-84,-106,-92,-96,-107,-108,-108,-108,-104,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-85,-108,-109,-109,-109,-109,-99,-101,-102,-103,152,153,154,155,164,165,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-78,-83,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,-53,-106,-106,-31,-34,-32,-33,-54,-55,-76,-69,-106,236,]),'VAR':([4,5,57,198,199,],[-2,12,12,12,12,]),'MAIN':([4,5,7,9,10,12,14,15,16,18,19,22,34,36,38,39,52,61,227,238,],[-2,13,-106,-12,-13,-106,13,-106,-36,-14,-25,-35,-38,-39,-40,-41,-23,-24,-42,-43,]),'FUN':([4,5,7,9,10,12,15,18,19,34,36,38,39,52,61,227,238,],[-2,-106,17,-12,-13,-106,17,-14,-25,-38,-39,-40,-41,-23,-24,-42,-43,]),'READ':([9,10,12,18,19,52,57,61,84,115,121,122,123,152,153,154,155,198,199,214,215,217,219,220,229,230,231,233,235,237,240,],[-12,-13,-106,-14,-25,-23,-106,-24,125,125,-50,-51,-52,-46,-47,-48,-49,-106,-106,125,125,125,125,125,-66,-62,-68,-63,-65,125,-64,]),'PRINT':([9,10,12,18,19,52,57,61,84,115,121,122,123,152,153,154,155,198,199,214,215,217,219,220,229,230,231,233,235,237,240,],[-12,-13,-106,-14,-25,-23,-106,-24,126,126,-50,-51,-52,-46,-47,-48,-49,-106,-106,126,126,126,126,126,-66,-62,-68,-63,-65,126,-64,]),'FOR':([9,10,12,18,19,52,57,61,84,115,121,122,123,152,153,154,155,198,199,214,215,217,219,220,229,230,231,233,235,237,240,],[-12,-13,-106,-14,-25,-23,-106,-24,127,127,-50,-51,-52,-46,-47,-48,-49,-106,-106,127,127,127,127,127,-66,-62,-68,-63,-65,127,-64,]),'IF':([9,10,12,18,19,52,57,61,84,115,121,122,123,152,153,154,155,198,199,214,215,217,219,220,229,230,231,233,235,237,240,],[-12,-13,-106,-14,-25,-23,-106,-24,128,128,-50,-51,-52,-46,-47,-48,-49,-106,-106,128,128,128,128,128,-66,-62,-68,-63,-65,128,-64,]),'WHILE':([9,10,12,18,19,52,57,61,84,115,121,122,123,152,153,154,155,198,199,214,215,217,219,220,229,230,231,233,235,237,240,],[-12,-13,-106,-14,-25,-23,-106,-24,129,129,-50,-51,-52,-46,-47,-48,-49,-106,-106,129,129,129,129,129,-66,-62,-68,-63,-65,129,-64,]),'RCURLY':([9,10,12,18,19,52,57,61,84,114,115,116,121,122,123,151,152,153,154,155,198,214,217,219,220,221,223,225,226,229,230,231,233,235,236,237,239,240,],[-12,-13,-106,-14,-25,-23,-106,-24,-106,150,-106,-45,-50,-51,-52,-44,-46,-47,-48,-49,-106,-106,-106,-106,-106,227,229,230,231,-66,-62,-68,-63,-65,238,-106,240,-64,]),'RETURN':([9,10,12,18,19,52,61,115,116,121,122,123,151,152,153,154,155,199,215,222,229,230,231,233,235,240,],[-12,-13,-106,-14,-25,-23,-24,-106,-45,-50,-51,-52,-44,-46,-47,-48,-49,-106,-106,228,-66,-62,-68,-63,-65,-64,]),'INT':([12,17,18,19,20,52,59,60,61,],[-106,24,28,-25,28,-23,28,28,-24,]),'FLOAT':([12,17,18,19,20,52,59,60,61,],[-106,26,29,-25,29,-23,29,29,-24,]),'CHAR':([12,17,18,19,20,52,59,60,61,],[-106,25,30,-25,30,-23,30,30,-24,]),'LPAREN':([13,35,37,41,42,50,51,53,54,55,56,62,63,64,65,66,67,68,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,113,124,125,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,156,160,162,163,172,173,174,175,176,177,178,179,180,181,182,185,186,200,201,202,203,208,218,228,],[20,-37,-37,-15,-22,59,60,-106,-17,-20,82,-23,-106,-106,-21,-26,-27,-28,82,-92,-96,-107,-108,-108,-108,-104,82,113,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,82,113,159,160,161,162,163,-18,-19,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-105,82,82,82,82,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,82,82,-31,-34,-32,-33,82,82,82,]),'VOID':([17,],[23,]),'RPAREN':([20,28,29,30,31,32,33,41,42,43,44,45,47,48,49,53,54,55,58,59,60,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,159,160,162,163,170,171,172,173,174,175,176,177,178,179,180,181,182,187,188,189,190,191,192,193,194,196,197,200,201,202,203,208,216,218,224,],[-106,-11,-11,-11,46,-106,-57,-15,-22,-8,-9,-10,-56,-58,-60,-106,-17,-20,-106,-106,-106,-23,-106,-106,-21,-26,-27,-28,-77,-82,-84,-106,-92,-96,-107,-108,-108,-108,-104,-106,-15,-59,130,131,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-85,-108,-109,-109,-109,-109,-99,-101,-102,-103,148,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-105,182,-106,-106,-106,-106,-78,-83,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,206,207,-71,-72,-73,-74,-75,209,212,213,-31,-34,-32,-33,-106,-70,-106,-67,]),'MUL':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,156,160,162,163,166,169,172,173,174,175,176,177,178,179,180,181,182,185,186,190,191,192,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,-108,-106,-92,106,-107,-108,-108,-108,-104,-106,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-106,-106,-106,-108,-108,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,-106,-106,-108,-108,-108,-31,-34,-32,-33,-106,-106,-106,]),'DIV':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,156,160,162,163,166,169,172,173,174,175,176,177,178,179,180,181,182,185,186,190,191,192,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,-108,-106,-92,107,-107,-108,-108,-108,-104,-106,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-106,-106,-106,-108,-108,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,-106,-106,-108,-108,-108,-31,-34,-32,-33,-106,-106,-106,]),'PLUS':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,156,160,162,163,166,169,172,173,174,175,176,177,178,179,180,181,182,185,186,190,191,192,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,-108,-106,104,-96,-107,-108,-108,-108,-104,-106,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-106,-106,-106,-108,-108,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,-106,-106,-108,-108,-108,-31,-34,-32,-33,-106,-106,-106,]),'MINUS':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,156,160,162,163,166,169,172,173,174,175,176,177,178,179,180,181,182,185,186,190,191,192,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,-108,-106,105,-96,-107,-108,-108,-108,-104,-106,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-106,-106,-106,-108,-108,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,-106,-106,-108,-108,-108,-31,-34,-32,-33,-106,-106,-106,]),'GT':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,73,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,144,145,146,147,148,156,160,162,163,166,169,178,179,180,181,182,185,186,190,191,192,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,-108,96,-92,-96,-107,-108,-108,-108,-104,-106,-15,-16,-23,-23,-29,-100,-30,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-106,-106,-106,-108,-108,-93,-94,-97,-98,-61,-106,-106,-108,-108,-108,-31,-34,-32,-33,-106,-106,-106,]),'LT':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,73,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,144,145,146,147,148,156,160,162,163,166,169,178,179,180,181,182,185,186,190,191,192,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,-108,97,-92,-96,-107,-108,-108,-108,-104,-106,-15,-16,-23,-23,-29,-100,-30,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-106,-106,-106,-108,-108,-93,-94,-97,-98,-61,-106,-106,-108,-108,-108,-31,-34,-32,-33,-106,-106,-106,]),'GTE':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,73,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,144,145,146,147,148,156,160,162,163,166,169,178,179,180,181,182,185,186,190,191,192,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,-108,98,-92,-96,-107,-108,-108,-108,-104,-106,-15,-16,-23,-23,-29,-100,-30,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-106,-106,-106,-108,-108,-93,-94,-97,-98,-61,-106,-106,-108,-108,-108,-31,-34,-32,-33,-106,-106,-106,]),'LTE':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,73,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,144,145,146,147,148,156,160,162,163,166,169,178,179,180,181,182,185,186,190,191,192,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,-108,99,-92,-96,-107,-108,-108,-108,-104,-106,-15,-16,-23,-23,-29,-100,-30,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-106,-106,-106,-108,-108,-93,-94,-97,-98,-61,-106,-106,-108,-108,-108,-31,-34,-32,-33,-106,-106,-106,]),'NE':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,73,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,144,145,146,147,148,156,160,162,163,166,169,178,179,180,181,182,185,186,190,191,192,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,-108,100,-92,-96,-107,-108,-108,-108,-104,-106,-15,-16,-23,-23,-29,-100,-30,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-106,-106,-106,-108,-108,-93,-94,-97,-98,-61,-106,-106,-108,-108,-108,-31,-34,-32,-33,-106,-106,-106,]),'COMPARE':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,73,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,144,145,146,147,148,156,160,162,163,166,169,178,179,180,181,182,185,186,190,191,192,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,-108,101,-92,-96,-107,-108,-108,-108,-104,-106,-15,-16,-23,-23,-29,-100,-30,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-106,-106,-106,-108,-108,-93,-94,-97,-98,-61,-106,-106,-108,-108,-108,-31,-34,-32,-33,-106,-106,-106,]),'AND':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,156,160,162,163,166,169,172,173,174,175,176,177,178,179,180,181,182,185,186,190,191,192,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,-108,95,-84,-106,-92,-96,-107,-108,-108,-108,-104,-106,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-85,-108,-109,-109,-109,-109,-99,-101,-102,-103,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-106,-106,-106,-108,-108,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,-106,-106,-108,-108,-108,-31,-34,-32,-33,-106,-106,-106,]),'OR':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,156,160,162,163,166,169,171,172,173,174,175,176,177,178,179,180,181,182,185,186,190,191,192,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,-108,94,-82,-84,-106,-92,-96,-107,-108,-108,-108,-104,-106,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-85,-108,-109,-109,-109,-109,-99,-101,-102,-103,-106,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-106,-106,-106,-108,-108,-83,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,-106,-106,-108,-108,-108,-31,-34,-32,-33,-106,-106,-106,]),'RBRACKET':([41,42,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,200,201,202,203,],[-15,-22,-106,-17,-20,-106,-23,-106,-106,-21,-26,-27,-28,91,93,-77,-82,-84,-106,-92,-96,-107,-108,-108,-108,-104,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-85,-108,-109,-109,-109,-109,-99,-101,-102,-103,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-105,200,201,202,203,-78,-83,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,-31,-34,-32,-33,]),'TO':([41,42,53,54,55,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,156,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,200,201,202,203,204,205,210,],[-15,-22,-106,-17,-20,-23,-106,-106,-21,-26,-27,-28,-77,-82,-84,-106,-92,-96,-107,-108,-108,-108,-104,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-85,-108,-109,-109,-109,-109,-99,-101,-102,-103,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-78,-83,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,-53,-106,-106,-31,-34,-32,-33,-54,-55,218,]),'COMMA':([41,42,48,53,54,55,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,160,170,171,172,173,174,175,176,177,178,179,180,181,182,189,190,191,192,193,200,201,202,203,],[53,-22,58,-106,63,64,-23,-106,-106,-21,-26,-27,-28,-77,-82,-84,-106,-92,-96,-107,-108,-108,-108,-104,53,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-85,-108,-109,-109,-109,-109,-99,-101,-102,-103,-18,-19,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-105,-106,-78,-83,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,208,-72,-73,-74,-75,-31,-34,-32,-33,]),'CTEI':([41,42,53,54,55,56,62,63,64,65,66,67,68,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,156,160,162,163,172,173,174,175,176,177,178,179,180,181,182,185,186,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,69,-23,-106,-106,-21,-26,-27,-28,103,-92,-96,-107,-108,-108,-108,-104,103,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,103,-18,-19,166,169,103,103,103,103,103,103,103,103,103,103,103,103,-105,103,191,103,103,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,103,103,-31,-34,-32,-33,191,103,103,]),'CTEF':([41,42,53,54,55,56,62,63,64,65,66,67,68,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,156,160,162,163,172,173,174,175,176,177,178,179,180,181,182,185,186,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,78,-23,-106,-106,-21,-26,-27,-28,78,-92,-96,-107,-108,-108,-108,-104,78,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,78,-18,-19,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-105,78,192,78,78,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,78,78,-31,-34,-32,-33,192,78,78,]),'CTEC':([41,42,53,54,55,56,62,63,64,65,66,67,68,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,156,160,162,163,172,173,174,175,176,177,178,179,180,181,182,185,186,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,79,-23,-106,-106,-21,-26,-27,-28,79,-92,-96,-107,-108,-108,-108,-104,79,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,79,-18,-19,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-105,79,79,79,79,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,79,79,-31,-34,-32,-33,79,79,79,]),'CTESTRING':([41,42,53,54,55,56,62,63,64,65,66,67,68,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,113,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,156,160,162,163,172,173,174,175,176,177,178,179,180,181,182,185,186,200,201,202,203,208,218,228,],[-15,-22,-106,-17,-20,80,-23,-106,-106,-21,-26,-27,-28,80,-92,-96,-107,-108,-108,-108,-104,80,-15,-16,-23,-23,-29,-100,-30,-109,-109,-109,-109,-109,-109,-109,-109,-108,-109,-109,-109,-109,-99,-101,-102,-103,80,-18,-19,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-105,80,190,80,80,-86,-87,-88,-89,-90,-91,-93,-94,-97,-98,-61,80,80,-31,-34,-32,-33,190,80,80,]),'LBRACKET':([41,83,91,93,124,211,],[56,56,134,135,56,56,]),'LCURLY':([46,164,165,209,212,213,234,],[57,198,199,217,219,220,237,]),'TRANSPUESTA':([55,200,201,202,203,],[66,-31,-34,-32,-33,]),'INVERSA':([55,200,201,202,203,],[67,-31,-34,-32,-33,]),'DETERMINANTE':([55,200,201,202,203,],[68,-31,-34,-32,-33,]),'EQUALS':([91,93,124,157,158,200,201,202,203,211,],[-29,-30,156,185,186,-31,-34,-32,-33,156,]),'END':([150,],[183,]),'FROM':([161,],[195,]),'ELSE':([230,],[234,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'addP':([4,],[5,]),'programa1':([5,],[6,]),'vars':([5,57,198,199,],[7,84,214,215,]),'programa2':([5,14,],[8,21,]),'var':([5,57,198,199,],[9,9,9,9,]),'empty':([5,7,12,15,20,27,32,53,56,57,58,59,60,63,64,74,82,84,113,115,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,159,160,162,163,185,186,198,199,208,214,215,217,218,219,220,228,230,237,],[10,16,19,16,33,42,49,42,42,10,49,33,33,42,42,42,42,116,42,116,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,10,10,42,116,116,116,42,116,116,42,235,116,]),'main':([5,14,],[11,11,]),'modules':([7,15,],[14,22,]),'function':([7,15,],[15,15,]),'var2':([12,],[18,]),'tipo':([18,20,59,60,],[27,32,32,32,]),'param':([20,59,60,],[31,86,87,]),'function1':([23,],[34,]),'function2':([24,25,26,],[36,38,39,]),'var1':([27,53,56,63,64,74,82,113,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,159,160,162,163,185,186,208,218,228,],[40,62,77,89,90,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,187,77,77,77,77,77,77,77,77,]),'guardaTipoVar':([28,29,30,],[43,44,45,]),'param1':([32,58,],[47,85,]),'save_fun':([35,37,],[50,51,]),'arr':([41,83,124,211,],[54,54,157,157,]),'mat':([41,83,124,211,],[55,55,158,158,]),'addV':([52,62,89,90,],[61,88,132,133,]),'especial':([55,],[65,]),'exp':([56,82,113,134,135,156,160,162,163,185,186,208,218,228,],[70,112,149,167,168,184,193,196,197,204,205,193,224,232,]),'nexp':([56,82,113,134,135,136,156,160,162,163,185,186,208,218,228,],[71,71,71,71,71,170,71,71,71,71,71,71,71,71,71,]),'compexp':([56,82,113,134,135,136,137,156,160,162,163,185,186,208,218,228,],[72,72,72,72,72,72,171,72,72,72,72,72,72,72,72,72,]),'sumexp':([56,74,82,113,134,135,136,137,138,139,140,141,142,143,156,160,162,163,185,186,208,218,228,],[73,102,73,73,73,73,73,73,172,173,174,175,176,177,73,73,73,73,73,73,73,73,73,]),'compexp1':([56,82,113,134,135,136,137,156,160,162,163,185,186,208,218,228,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'mulexp':([56,74,82,113,134,135,136,137,138,139,140,141,142,143,144,145,156,160,162,163,185,186,208,218,228,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,178,179,75,75,75,75,75,75,75,75,75,]),'pexp':([56,74,82,113,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,160,162,163,185,186,208,218,228,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,180,181,76,76,76,76,76,76,76,76,76,]),'llamada':([56,74,82,84,113,115,134,135,136,137,138,139,140,141,142,143,144,145,146,147,156,160,162,163,185,186,208,214,215,217,218,219,220,228,237,],[81,81,81,118,81,118,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,118,118,118,81,118,118,81,118,]),'saveCTE':([69,78,79,80,103,166,169,190,191,192,],[92,109,110,111,92,92,92,111,92,109,]),'saveId':([77,],[108,]),'statement':([84,115,214,215,217,219,220,237,],[114,151,221,222,223,225,226,239,]),'statement1':([84,115,214,215,217,219,220,237,],[115,115,115,115,115,115,115,115,]),'asignacion':([84,115,195,214,215,217,219,220,237,],[117,117,210,117,117,117,117,117,117,]),'lectura':([84,115,214,215,217,219,220,237,],[119,119,119,119,119,119,119,119,]),'escritura':([84,115,214,215,217,219,220,237,],[120,120,120,120,120,120,120,120,]),'for':([84,115,214,215,217,219,220,237,],[121,121,121,121,121,121,121,121,]),'if':([84,115,214,215,217,219,220,237,],[122,122,122,122,122,122,122,122,]),'while':([84,115,214,215,217,219,220,237,],[123,123,123,123,123,123,123,123,]),'saveOperator':([94,95,96,97,98,99,100,101,104,105,106,107,],[136,137,138,139,140,141,142,143,144,145,146,147,]),'escritura1':([160,],[188,]),'escritura2':([160,208,],[189,216,]),'for1':([161,],[194,]),'else':([230,],[233,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMICOLON addP programa1','programa',5,'p_programa','main.py',142),
  ('addP -> <empty>','addP',0,'p_addP','main.py',148),
  ('programa1 -> vars modules programa2','programa1',3,'p_programa1','main.py',166),
  ('programa1 -> vars modules','programa1',2,'p_programa1','main.py',167),
  ('programa1 -> programa2','programa1',1,'p_programa1','main.py',168),
  ('programa2 -> main','programa2',1,'p_programa2','main.py',173),
  ('main -> MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END','main',9,'p_main','main.py',178),
  ('tipo -> INT guardaTipoVar','tipo',2,'p_tipo','main.py',194),
  ('tipo -> FLOAT guardaTipoVar','tipo',2,'p_tipo','main.py',195),
  ('tipo -> CHAR guardaTipoVar','tipo',2,'p_tipo','main.py',196),
  ('guardaTipoVar -> <empty>','guardaTipoVar',0,'p_guardaTipoVar','main.py',201),
  ('vars -> var','vars',1,'p_vars','main.py',208),
  ('vars -> empty','vars',1,'p_vars','main.py',209),
  ('var -> VAR var2','var',2,'p_var','main.py',214),
  ('var1 -> ID','var1',1,'p_var1','main.py',220),
  ('var1 -> ID COMMA var1 addV','var1',4,'p_var1','main.py',221),
  ('var1 -> ID arr','var1',2,'p_var1','main.py',222),
  ('var1 -> ID arr COMMA var1 addV','var1',5,'p_var1','main.py',223),
  ('var1 -> ID mat COMMA var1 addV','var1',5,'p_var1','main.py',224),
  ('var1 -> ID mat','var1',2,'p_var1','main.py',225),
  ('var1 -> ID mat especial','var1',3,'p_var1','main.py',226),
  ('var1 -> empty','var1',1,'p_var1','main.py',227),
  ('addV -> <empty>','addV',0,'p_addV','main.py',236),
  ('var2 -> var2 tipo var1 SEMICOLON addV','var2',5,'p_var2','main.py',255),
  ('var2 -> empty','var2',1,'p_var2','main.py',256),
  ('especial -> TRANSPUESTA','especial',1,'p_especial','main.py',262),
  ('especial -> INVERSA','especial',1,'p_especial','main.py',263),
  ('especial -> DETERMINANTE','especial',1,'p_especial','main.py',264),
  ('arr -> LBRACKET CTEI RBRACKET','arr',3,'p_arr','main.py',269),
  ('arr -> LBRACKET exp RBRACKET','arr',3,'p_arr','main.py',270),
  ('mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET','mat',6,'p_mat','main.py',276),
  ('mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','mat',6,'p_mat','main.py',277),
  ('mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET','mat',6,'p_mat','main.py',278),
  ('mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET','mat',6,'p_mat','main.py',279),
  ('modules -> function modules','modules',2,'p_modules','main.py',285),
  ('modules -> empty','modules',1,'p_modules','main.py',286),
  ('save_fun -> <empty>','save_fun',0,'p_save_fun','main.py',291),
  ('function -> FUN VOID function1','function',3,'p_function','main.py',313),
  ('function -> FUN INT function2','function',3,'p_function','main.py',314),
  ('function -> FUN CHAR function2','function',3,'p_function','main.py',315),
  ('function -> FUN FLOAT function2','function',3,'p_function','main.py',316),
  ('function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY','function1',10,'p_function1','main.py',322),
  ('function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY','function2',13,'p_function2','main.py',327),
  ('statement -> statement1 statement','statement',2,'p_statement','main.py',332),
  ('statement -> empty','statement',1,'p_statement','main.py',333),
  ('statement1 -> asignacion SEMICOLON','statement1',2,'p_statement1','main.py',339),
  ('statement1 -> llamada SEMICOLON','statement1',2,'p_statement1','main.py',340),
  ('statement1 -> lectura SEMICOLON','statement1',2,'p_statement1','main.py',341),
  ('statement1 -> escritura SEMICOLON','statement1',2,'p_statement1','main.py',342),
  ('statement1 -> for','statement1',1,'p_statement1','main.py',343),
  ('statement1 -> if','statement1',1,'p_statement1','main.py',344),
  ('statement1 -> while','statement1',1,'p_statement1','main.py',345),
  ('asignacion -> ID EQUALS exp','asignacion',3,'p_asignacion','main.py',352),
  ('asignacion -> ID arr EQUALS exp','asignacion',4,'p_asignacion','main.py',353),
  ('asignacion -> ID mat EQUALS exp','asignacion',4,'p_asignacion','main.py',354),
  ('param -> tipo param1','param',2,'p_param','main.py',360),
  ('param -> empty','param',1,'p_param','main.py',361),
  ('param1 -> ID','param1',1,'p_param1','main.py',367),
  ('param1 -> ID COMMA param1','param1',3,'p_param1','main.py',368),
  ('param1 -> empty','param1',1,'p_param1','main.py',369),
  ('llamada -> ID LPAREN exp RPAREN','llamada',4,'p_llamada','main.py',376),
  ('if -> IF LPAREN exp RPAREN LCURLY statement RCURLY','if',7,'p_if','main.py',381),
  ('if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else','if',8,'p_if','main.py',382),
  ('else -> ELSE LCURLY statement RCURLY','else',4,'p_else','main.py',387),
  ('else -> empty','else',1,'p_else','main.py',388),
  ('for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY','for',7,'p_for','main.py',392),
  ('for1 -> FROM asignacion TO exp','for1',4,'p_for1','main.py',396),
  ('while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY','while',7,'p_while','main.py',400),
  ('escritura -> PRINT LPAREN escritura1 RPAREN','escritura',4,'p_escritura','main.py',405),
  ('escritura1 -> escritura2 COMMA escritura2','escritura1',3,'p_escritura1','main.py',409),
  ('escritura1 -> escritura2','escritura1',1,'p_escritura1','main.py',410),
  ('escritura2 -> CTESTRING','escritura2',1,'p_escritura2','main.py',414),
  ('escritura2 -> CTEI','escritura2',1,'p_escritura2','main.py',415),
  ('escritura2 -> CTEF','escritura2',1,'p_escritura2','main.py',416),
  ('escritura2 -> exp','escritura2',1,'p_escritura2','main.py',417),
  ('lectura -> READ LPAREN var1 RPAREN','lectura',4,'p_lectura','main.py',422),
  ('exp -> nexp','exp',1,'p_exp','main.py',428),
  ('exp -> nexp OR saveOperator nexp','exp',4,'p_exp','main.py',429),
  ('genera_quad_asignacion -> <empty>','genera_quad_asignacion',0,'p_genera_quad_asignacion','main.py',433),
  ('genera_quad_or -> <empty>','genera_quad_or',0,'p_genera_quad_or','main.py',445),
  ('genera_quad_and -> <empty>','genera_quad_and',0,'p_genera_quad_and','main.py',456),
  ('nexp -> compexp','nexp',1,'p_nexp','main.py',470),
  ('nexp -> compexp AND saveOperator compexp','nexp',4,'p_nexp','main.py',471),
  ('compexp -> sumexp','compexp',1,'p_compexp','main.py',477),
  ('compexp -> compexp1 sumexp','compexp',2,'p_compexp','main.py',478),
  ('compexp1 -> sumexp GT saveOperator sumexp','compexp1',4,'p_compexp1','main.py',484),
  ('compexp1 -> sumexp LT saveOperator sumexp','compexp1',4,'p_compexp1','main.py',485),
  ('compexp1 -> sumexp GTE saveOperator sumexp','compexp1',4,'p_compexp1','main.py',486),
  ('compexp1 -> sumexp LTE saveOperator sumexp','compexp1',4,'p_compexp1','main.py',487),
  ('compexp1 -> sumexp NE saveOperator sumexp','compexp1',4,'p_compexp1','main.py',488),
  ('compexp1 -> sumexp COMPARE saveOperator sumexp','compexp1',4,'p_compexp1','main.py',489),
  ('sumexp -> mulexp','sumexp',1,'p_sumexp','main.py',495),
  ('sumexp -> mulexp PLUS saveOperator mulexp','sumexp',4,'p_sumexp','main.py',496),
  ('sumexp -> mulexp MINUS saveOperator mulexp','sumexp',4,'p_sumexp','main.py',497),
  ('genera_sum_quad -> <empty>','genera_sum_quad',0,'p_genera_quad_sum','main.py',501),
  ('mulexp -> pexp','mulexp',1,'p_mulexp','main.py',508),
  ('mulexp -> pexp MUL saveOperator pexp','mulexp',4,'p_mulexp','main.py',509),
  ('mulexp -> pexp DIV saveOperator pexp','mulexp',4,'p_mulexp','main.py',510),
  ('pexp -> var1 saveId','pexp',2,'p_pexp','main.py',516),
  ('pexp -> CTEI saveCTE','pexp',2,'p_pexp','main.py',517),
  ('pexp -> CTEF saveCTE','pexp',2,'p_pexp','main.py',518),
  ('pexp -> CTEC saveCTE','pexp',2,'p_pexp','main.py',519),
  ('pexp -> CTESTRING saveCTE','pexp',2,'p_pexp','main.py',520),
  ('pexp -> llamada','pexp',1,'p_pexp','main.py',521),
  ('pexp -> LPAREN exp RPAREN','pexp',3,'p_pexp','main.py',522),
  ('empty -> <empty>','empty',0,'p_empty','main.py',528),
  ('saveId -> <empty>','saveId',0,'p_saveId','main.py',534),
  ('saveCTE -> <empty>','saveCTE',0,'p_saveCTE','main.py',547),
  ('saveOperator -> <empty>','saveOperator',0,'p_saveOperator','main.py',573),
]
