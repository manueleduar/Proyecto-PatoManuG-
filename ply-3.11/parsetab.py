
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMMA CTEC CTEF CTEI CTESTRING DETERMINANTE DIV ELSE END EQUALS FLOAT FOR FROM FUN GT GTE ID IF INT INVERSA LBRACKET LCURLY LPAREN LT LTE MAIN MINUS MUL NE OR PLUS PRINT PROGRAM RBRACKET RCURLY READ RETURN RPAREN SEMICOLON TO TRANSPUESTA VAR VOID\n\tprograma : PROGRAM ID SEMICOLON programa1\n\t\n\tprograma1 : vars modules programa2\n\tprograma1 : vars modules\n\t| programa2\n\t\n\tprograma2 : vars MAIN statement END\n\t\n\ttipo : INT \n\t    | FLOAT\n      \t| CHAR\n\t\n\tvars : var\n\t\n\tvar : VAR tipo var1 SEMICOLON\n\t\n\t\tvar1 : ID\n\t\t| ID COMMA var1\n\t\t| ID arr var1\n\t\t| ID mat var1\n\t\t| ID especial\n\t\t| empty\n\t\n\tespecial : TRANSPUESTA\n\t\t\t| INVERSA\n\t\t\t| DETERMINANTE\n\t\n\tarr : LBRACKET CTEI RBRACKET\n\t\t| LBRACKET exp RBRACKET\t\n\t\n\t\n\tmat : LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET\n\t\t| LBRACKET exp RBRACKET LBRACKET exp RBRACKET\n\t\t| LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET\n\t\t| LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET\n\t\n\tmodules : function \n\t    | empty\n    \n\t\n\tfunction : FUN VOID function1 \n            | FUN tipo function2 \n\t\n\tfunction1 : ID LPAREN param RPAREN SEMICOLON LCURLY statement RCURLY\n\t\n\tfunction2 : ID LPAREN param RPAREN SEMICOLON LCURLY statement RETURN exp RCURLY\t \n\t\n\ttipo : ID \n\t\t | ID COMMA\n\t\t | ID SEMICOLON \n\t\n\tstatement :  statement1 statement\n                | empty\n\t\n\tstatement1 : asignacion SEMICOLON\n                | llamada SEMICOLON\n                | lectura SEMICOLON\n                | escritura SEMICOLON\n\t\t\t\t| for\n\t\t\t\t| if\n\t\t\t\t| while\n\t\n\tasignacion : ID EQUALS exp\n                | ID arr EQUALS exp\n\t\t\t\t| ID mat EQUALS exp\n\t\n\tparam : tipo param1 SEMICOLON \n\t\n\t\n\tparam1 : ID\n\t\t\t| ID COMMA param1\n\t\t\t| empty \n\t\n\tllamada : ID LPAREN exp RPAREN\n\t\n\tif : IF LPAREN exp RPAREN LBRACKET statement RBRACKET\n\t\t| IF LPAREN exp RPAREN LBRACKET statement RBRACKET else\n\t\n\telse : ELSE LBRACKET statement LBRACKET\n\t\t| empty\n\t\n\tfor : FOR LPAREN for1 RPAREN LCURLY statement RCURLY\n\t\n\tfor1 : FROM asignacion TO exp\n\t\n\twhile : LPAREN exp RPAREN LCURLY statement RCURLY\n\t\n\tescritura : PRINT LPAREN escritura1 RPAREN\n\t\n\tescritura1 :  escritura2 COMMA escritura2\n\t\t\t| escritura2\n\t\n\tescritura2 : CTESTRING\n\t\t\t| exp\n\t\n\tlectura : READ LPAREN var1 RPAREN\n\t\n\texp : nexp  \n\t\t| OR\n\t\n\tnexp : compexp\n\t\t| AND\n\t\n\tcompexp : sumexp \n\t\t\t| compexp1 sumexp\n\t\n\tcompexp1 : GT\n\t\t\t| LT\n\t\t\t| GTE\n\t\t\t| LTE\n\t\t\t| NE\n\t\n\tsumexp : mulexp  \n\t\t| PLUS\n\t\t| MINUS\n\t\n\tmulexp : pexp  \n\t\t| MUL\n\t\t| DIV\n\t\n\tpexp : var1  \n\t\t| CTEI\n\t\t| CTEF\n\t\t| CTEC\n\t\t| llamada\n\t\t| LPAREN exp  RPAREN\n\t\n\tempty :\n\t'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,6,7,8,10,12,13,21,45,85,87,89,175,180,],[0,-1,-88,-4,-9,-3,-26,-27,-2,-5,-28,-29,-10,-30,-31,]),'ID':([2,9,11,14,15,16,17,18,19,23,29,30,31,33,38,39,43,44,47,48,49,50,51,54,55,56,63,67,68,69,70,71,81,82,84,90,91,92,98,99,112,114,115,122,123,125,128,134,136,137,140,141,142,152,158,160,161,162,163,164,165,166,168,169,171,174,176,179,],[3,19,32,19,41,-6,-7,-8,-32,32,-41,-42,-43,80,86,88,-33,-34,-37,-38,-39,-40,80,80,80,80,80,-71,-72,-73,-74,-75,41,80,80,41,41,41,80,80,131,19,19,-20,-21,32,80,145,80,80,32,80,32,-58,145,-22,-25,-23,-24,-56,-52,32,32,-53,-55,32,80,-54,]),'SEMICOLON':([3,15,16,17,18,19,25,26,27,28,40,41,42,43,44,51,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,90,91,92,93,94,95,96,97,98,99,105,116,117,118,119,120,121,122,123,124,126,127,134,143,144,145,146,147,158,160,161,162,163,167,],[4,-88,-6,-7,-8,44,47,48,49,50,89,-11,-16,-33,-34,-88,-65,-66,-67,-68,-69,-88,-76,-77,-78,-71,-72,-73,-74,-75,-79,-80,-81,-82,-83,-84,-85,-86,-11,-88,-88,-88,-15,-17,-18,-19,-44,-88,-88,-70,-12,-13,-14,-45,-46,-51,-20,-21,-87,-64,-59,-88,156,157,-48,-50,159,-88,-22,-25,-23,-24,-49,]),'VAR':([4,6,8,10,12,13,85,87,89,175,180,],[9,-88,-9,9,-26,-27,-28,-29,-10,-30,-31,]),'MAIN':([6,8,20,89,],[11,-9,11,-10,]),'FUN':([6,8,89,],[14,-9,-10,]),'INT':([9,14,114,115,],[16,16,16,16,]),'FLOAT':([9,14,114,115,],[17,17,17,17,]),'CHAR':([9,14,114,115,],[18,18,18,18,]),'END':([11,22,23,24,29,30,31,46,47,48,49,50,152,164,165,169,171,179,],[-88,45,-88,-36,-41,-42,-43,-35,-37,-38,-39,-40,-58,-56,-52,-53,-55,-54,]),'READ':([11,23,29,30,31,47,48,49,50,125,140,142,152,164,165,166,168,169,171,174,179,],[34,34,-41,-42,-43,-37,-38,-39,-40,34,34,34,-58,-56,-52,34,34,-53,-55,34,-54,]),'PRINT':([11,23,29,30,31,47,48,49,50,125,140,142,152,164,165,166,168,169,171,174,179,],[35,35,-41,-42,-43,-37,-38,-39,-40,35,35,35,-58,-56,-52,35,35,-53,-55,35,-54,]),'FOR':([11,23,29,30,31,47,48,49,50,125,140,142,152,164,165,166,168,169,171,174,179,],[36,36,-41,-42,-43,-37,-38,-39,-40,36,36,36,-58,-56,-52,36,36,-53,-55,36,-54,]),'IF':([11,23,29,30,31,47,48,49,50,125,140,142,152,164,165,166,168,169,171,174,179,],[37,37,-41,-42,-43,-37,-38,-39,-40,37,37,37,-58,-56,-52,37,37,-53,-55,37,-54,]),'LPAREN':([11,23,29,30,31,32,33,34,35,36,37,47,48,49,50,51,54,55,56,63,67,68,69,70,71,80,82,84,86,88,98,99,125,128,136,137,140,141,142,152,164,165,166,168,169,171,174,176,179,],[33,33,-41,-42,-43,54,56,81,82,83,84,-37,-38,-39,-40,56,56,56,56,56,-71,-72,-73,-74,-75,54,56,56,114,115,56,56,33,56,56,56,33,56,33,-58,-56,-52,33,33,-53,-55,33,56,-54,]),'VOID':([14,],[38,]),'COMMA':([19,41,42,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,90,91,92,93,94,95,96,105,108,109,110,116,117,118,121,122,123,124,145,160,161,162,163,],[43,90,-16,-65,-66,-67,-68,-69,-88,-76,-77,-78,-71,-72,-73,-74,-75,-79,-80,-81,-82,-83,-84,-85,-86,90,-88,-88,-88,-88,-15,-17,-18,-19,-70,128,-62,-63,-12,-13,-14,-51,-20,-21,-87,158,-22,-25,-23,-24,]),'RCURLY':([23,24,29,30,31,41,42,46,47,48,49,50,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,90,91,92,93,94,95,96,105,116,117,118,121,122,123,124,125,138,140,152,153,160,161,162,163,164,165,166,169,171,172,176,178,179,],[-88,-36,-41,-42,-43,-11,-16,-35,-37,-38,-39,-40,-65,-66,-67,-68,-69,-88,-76,-77,-78,-71,-72,-73,-74,-75,-79,-80,-81,-82,-83,-84,-85,-86,-11,-88,-88,-88,-15,-17,-18,-19,-70,-12,-13,-14,-51,-20,-21,-87,-88,152,-88,-58,164,-22,-25,-23,-24,-56,-52,-88,-53,-55,175,-88,180,-54,]),'RBRACKET':([23,24,29,30,31,41,42,46,47,48,49,50,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,90,91,92,93,94,95,96,101,102,105,116,117,118,121,122,123,124,136,137,142,148,149,150,151,152,155,160,161,162,163,164,165,169,171,179,],[-88,-36,-41,-42,-43,-11,-16,-35,-37,-38,-39,-40,-88,-65,-66,-67,-68,-69,-88,-76,-77,-78,-71,-72,-73,-74,-75,-79,-80,-81,-82,-83,-84,-85,-86,-11,-88,-88,-88,-15,-17,-18,-19,122,123,-70,-12,-13,-14,-51,-20,-21,-87,-88,-88,-88,160,161,162,163,-58,165,-22,-25,-23,-24,-56,-52,-53,-55,-54,]),'RETURN':([23,24,29,30,31,46,47,48,49,50,152,164,165,168,169,171,173,179,],[-88,-36,-41,-42,-43,-35,-37,-38,-39,-40,-58,-56,-52,-88,-53,-55,176,-54,]),'LBRACKET':([23,24,29,30,31,32,41,46,47,48,49,50,80,122,123,131,132,152,164,165,169,170,171,174,177,179,],[-88,-36,-41,-42,-43,55,55,-35,-37,-38,-39,-40,55,136,137,55,142,-58,-56,-52,-53,174,-55,-88,179,-54,]),'EQUALS':([32,52,53,122,123,131,160,161,162,163,],[51,98,99,-20,-21,51,-22,-25,-23,-24,]),'OR':([33,51,54,55,56,82,84,98,99,128,136,137,141,176,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'AND':([33,51,54,55,56,82,84,98,99,128,136,137,141,176,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'PLUS':([33,51,54,55,56,63,67,68,69,70,71,82,84,98,99,128,136,137,141,176,],[65,65,65,65,65,65,-71,-72,-73,-74,-75,65,65,65,65,65,65,65,65,65,]),'MINUS':([33,51,54,55,56,63,67,68,69,70,71,82,84,98,99,128,136,137,141,176,],[66,66,66,66,66,66,-71,-72,-73,-74,-75,66,66,66,66,66,66,66,66,66,]),'GT':([33,51,54,55,56,82,84,98,99,128,136,137,141,176,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'LT':([33,51,54,55,56,82,84,98,99,128,136,137,141,176,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'GTE':([33,51,54,55,56,82,84,98,99,128,136,137,141,176,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'LTE':([33,51,54,55,56,82,84,98,99,128,136,137,141,176,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'NE':([33,51,54,55,56,82,84,98,99,128,136,137,141,176,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'MUL':([33,51,54,55,56,63,67,68,69,70,71,82,84,98,99,128,136,137,141,176,],[73,73,73,73,73,73,-71,-72,-73,-74,-75,73,73,73,73,73,73,73,73,73,]),'DIV':([33,51,54,55,56,63,67,68,69,70,71,82,84,98,99,128,136,137,141,176,],[74,74,74,74,74,74,-71,-72,-73,-74,-75,74,74,74,74,74,74,74,74,74,]),'CTEI':([33,51,54,55,56,63,67,68,69,70,71,82,84,98,99,128,136,137,141,176,],[76,76,76,101,76,76,-71,-72,-73,-74,-75,76,76,76,76,76,148,151,76,76,]),'CTEF':([33,51,54,55,56,63,67,68,69,70,71,82,84,98,99,128,136,137,141,176,],[77,77,77,77,77,77,-71,-72,-73,-74,-75,77,77,77,77,77,77,77,77,77,]),'CTEC':([33,51,54,55,56,63,67,68,69,70,71,82,84,98,99,128,136,137,141,176,],[78,78,78,78,78,78,-71,-72,-73,-74,-75,78,78,78,78,78,78,78,78,78,]),'RPAREN':([33,41,42,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,90,91,92,93,94,95,96,100,103,105,106,107,108,109,110,111,113,116,117,118,121,122,123,124,128,133,135,139,141,154,157,160,161,162,163,],[-88,-11,-16,-88,-88,104,-65,-66,-67,-68,-69,-88,-76,-77,-78,-71,-72,-73,-74,-75,-79,-80,-81,-82,-83,-84,-85,-86,-11,-88,-88,-88,-88,-88,-88,-15,-17,-18,-19,121,124,-70,126,127,-61,-62,-63,129,132,-12,-13,-14,-51,-20,-21,-87,-88,143,147,-60,-88,-57,-47,-22,-25,-23,-24,]),'TO':([41,42,51,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,90,91,92,93,94,95,96,97,98,99,105,116,117,118,119,120,121,122,123,124,130,160,161,162,163,],[-11,-16,-88,-65,-66,-67,-68,-69,-88,-76,-77,-78,-71,-72,-73,-74,-75,-79,-80,-81,-82,-83,-84,-85,-86,-11,-88,-88,-88,-15,-17,-18,-19,-44,-88,-88,-70,-12,-13,-14,-45,-46,-51,-20,-21,-87,141,-22,-25,-23,-24,]),'TRANSPUESTA':([41,80,],[94,94,]),'INVERSA':([41,80,],[95,95,]),'DETERMINANTE':([41,80,],[96,96,]),'CTESTRING':([82,128,],[109,109,]),'FROM':([83,],[112,]),'LCURLY':([104,129,156,159,],[125,140,166,168,]),'ELSE':([165,],[170,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'programa1':([4,],[5,]),'vars':([4,10,],[6,20,]),'programa2':([4,10,],[7,21,]),'var':([4,10,],[8,8,]),'modules':([6,],[10,]),'function':([6,],[12,]),'empty':([6,11,15,23,33,51,54,55,56,63,81,82,84,90,91,92,98,99,125,128,134,136,137,140,141,142,158,165,166,168,174,176,],[13,24,42,24,42,42,42,42,42,42,42,42,42,42,42,42,42,42,24,42,146,42,42,24,42,24,146,171,24,24,24,42,]),'tipo':([9,14,114,115,],[15,39,134,134,]),'statement':([11,23,125,140,142,166,168,174,],[22,46,138,153,155,172,173,177,]),'statement1':([11,23,125,140,142,166,168,174,],[23,23,23,23,23,23,23,23,]),'asignacion':([11,23,112,125,140,142,166,168,174,],[25,25,130,25,25,25,25,25,25,]),'llamada':([11,23,33,51,54,55,56,63,82,84,98,99,125,128,136,137,140,141,142,166,168,174,176,],[26,26,79,79,79,79,79,79,79,79,79,79,26,79,79,79,26,79,26,26,26,26,79,]),'lectura':([11,23,125,140,142,166,168,174,],[27,27,27,27,27,27,27,27,]),'escritura':([11,23,125,140,142,166,168,174,],[28,28,28,28,28,28,28,28,]),'for':([11,23,125,140,142,166,168,174,],[29,29,29,29,29,29,29,29,]),'if':([11,23,125,140,142,166,168,174,],[30,30,30,30,30,30,30,30,]),'while':([11,23,125,140,142,166,168,174,],[31,31,31,31,31,31,31,31,]),'var1':([15,33,51,54,55,56,63,81,82,84,90,91,92,98,99,128,136,137,141,176,],[40,75,75,75,75,75,75,106,75,75,116,117,118,75,75,75,75,75,75,75,]),'arr':([32,41,80,131,],[52,91,91,52,]),'mat':([32,41,80,131,],[53,92,92,53,]),'exp':([33,51,54,55,56,82,84,98,99,128,136,137,141,176,],[57,97,100,102,103,110,113,119,120,110,149,150,154,178,]),'nexp':([33,51,54,55,56,82,84,98,99,128,136,137,141,176,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'compexp':([33,51,54,55,56,82,84,98,99,128,136,137,141,176,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'sumexp':([33,51,54,55,56,63,82,84,98,99,128,136,137,141,176,],[62,62,62,62,62,105,62,62,62,62,62,62,62,62,62,]),'compexp1':([33,51,54,55,56,82,84,98,99,128,136,137,141,176,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'mulexp':([33,51,54,55,56,63,82,84,98,99,128,136,137,141,176,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'pexp':([33,51,54,55,56,63,82,84,98,99,128,136,137,141,176,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'function1':([38,],[85,]),'function2':([39,],[87,]),'especial':([41,80,],[93,93,]),'escritura1':([82,],[107,]),'escritura2':([82,128,],[108,139,]),'for1':([83,],[111,]),'param':([114,115,],[133,135,]),'param1':([134,158,],[144,167,]),'else':([165,],[169,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMICOLON programa1','programa',4,'p_programa','lex.py',124),
  ('programa1 -> vars modules programa2','programa1',3,'p_programa1','lex.py',130),
  ('programa1 -> vars modules','programa1',2,'p_programa1','lex.py',131),
  ('programa1 -> programa2','programa1',1,'p_programa1','lex.py',132),
  ('programa2 -> vars MAIN statement END','programa2',4,'p_programa2','lex.py',137),
  ('tipo -> INT','tipo',1,'p_tipo','lex.py',142),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lex.py',143),
  ('tipo -> CHAR','tipo',1,'p_tipo','lex.py',144),
  ('vars -> var','vars',1,'p_vars','lex.py',148),
  ('var -> VAR tipo var1 SEMICOLON','var',4,'p_var','lex.py',153),
  ('var1 -> ID','var1',1,'p_var1','lex.py',158),
  ('var1 -> ID COMMA var1','var1',3,'p_var1','lex.py',159),
  ('var1 -> ID arr var1','var1',3,'p_var1','lex.py',160),
  ('var1 -> ID mat var1','var1',3,'p_var1','lex.py',161),
  ('var1 -> ID especial','var1',2,'p_var1','lex.py',162),
  ('var1 -> empty','var1',1,'p_var1','lex.py',163),
  ('especial -> TRANSPUESTA','especial',1,'p_especial','lex.py',167),
  ('especial -> INVERSA','especial',1,'p_especial','lex.py',168),
  ('especial -> DETERMINANTE','especial',1,'p_especial','lex.py',169),
  ('arr -> LBRACKET CTEI RBRACKET','arr',3,'p_arr','lex.py',174),
  ('arr -> LBRACKET exp RBRACKET','arr',3,'p_arr','lex.py',175),
  ('mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET','mat',6,'p_mat','lex.py',181),
  ('mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','mat',6,'p_mat','lex.py',182),
  ('mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET','mat',6,'p_mat','lex.py',183),
  ('mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET','mat',6,'p_mat','lex.py',184),
  ('modules -> function','modules',1,'p_modules','lex.py',191),
  ('modules -> empty','modules',1,'p_modules','lex.py',192),
  ('function -> FUN VOID function1','function',3,'p_function','lex.py',199),
  ('function -> FUN tipo function2','function',3,'p_function','lex.py',200),
  ('function1 -> ID LPAREN param RPAREN SEMICOLON LCURLY statement RCURLY','function1',8,'p_function1','lex.py',204),
  ('function2 -> ID LPAREN param RPAREN SEMICOLON LCURLY statement RETURN exp RCURLY','function2',10,'p_function2','lex.py',208),
  ('tipo -> ID','tipo',1,'p_params','lex.py',212),
  ('tipo -> ID COMMA','tipo',2,'p_params','lex.py',213),
  ('tipo -> ID SEMICOLON','tipo',2,'p_params','lex.py',214),
  ('statement -> statement1 statement','statement',2,'p_statement','lex.py',219),
  ('statement -> empty','statement',1,'p_statement','lex.py',220),
  ('statement1 -> asignacion SEMICOLON','statement1',2,'p_statement1','lex.py',226),
  ('statement1 -> llamada SEMICOLON','statement1',2,'p_statement1','lex.py',227),
  ('statement1 -> lectura SEMICOLON','statement1',2,'p_statement1','lex.py',228),
  ('statement1 -> escritura SEMICOLON','statement1',2,'p_statement1','lex.py',229),
  ('statement1 -> for','statement1',1,'p_statement1','lex.py',230),
  ('statement1 -> if','statement1',1,'p_statement1','lex.py',231),
  ('statement1 -> while','statement1',1,'p_statement1','lex.py',232),
  ('asignacion -> ID EQUALS exp','asignacion',3,'p_asignacion','lex.py',239),
  ('asignacion -> ID arr EQUALS exp','asignacion',4,'p_asignacion','lex.py',240),
  ('asignacion -> ID mat EQUALS exp','asignacion',4,'p_asignacion','lex.py',241),
  ('param -> tipo param1 SEMICOLON','param',3,'p_param','lex.py',246),
  ('param1 -> ID','param1',1,'p_param1','lex.py',252),
  ('param1 -> ID COMMA param1','param1',3,'p_param1','lex.py',253),
  ('param1 -> empty','param1',1,'p_param1','lex.py',254),
  ('llamada -> ID LPAREN exp RPAREN','llamada',4,'p_llamada','lex.py',260),
  ('if -> IF LPAREN exp RPAREN LBRACKET statement RBRACKET','if',7,'p_if','lex.py',265),
  ('if -> IF LPAREN exp RPAREN LBRACKET statement RBRACKET else','if',8,'p_if','lex.py',266),
  ('else -> ELSE LBRACKET statement LBRACKET','else',4,'p_else','lex.py',271),
  ('else -> empty','else',1,'p_else','lex.py',272),
  ('for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY','for',7,'p_for','lex.py',276),
  ('for1 -> FROM asignacion TO exp','for1',4,'p_for1','lex.py',280),
  ('while -> LPAREN exp RPAREN LCURLY statement RCURLY','while',6,'p_while','lex.py',284),
  ('escritura -> PRINT LPAREN escritura1 RPAREN','escritura',4,'p_escritura','lex.py',289),
  ('escritura1 -> escritura2 COMMA escritura2','escritura1',3,'p_escritura1','lex.py',293),
  ('escritura1 -> escritura2','escritura1',1,'p_escritura1','lex.py',294),
  ('escritura2 -> CTESTRING','escritura2',1,'p_escritura2','lex.py',298),
  ('escritura2 -> exp','escritura2',1,'p_escritura2','lex.py',299),
  ('lectura -> READ LPAREN var1 RPAREN','lectura',4,'p_lectura','lex.py',304),
  ('exp -> nexp','exp',1,'p_exp','lex.py',310),
  ('exp -> OR','exp',1,'p_exp','lex.py',311),
  ('nexp -> compexp','nexp',1,'p_nexp','lex.py',315),
  ('nexp -> AND','nexp',1,'p_nexp','lex.py',316),
  ('compexp -> sumexp','compexp',1,'p_compexp','lex.py',320),
  ('compexp -> compexp1 sumexp','compexp',2,'p_compexp','lex.py',321),
  ('compexp1 -> GT','compexp1',1,'p_compexp1','lex.py',325),
  ('compexp1 -> LT','compexp1',1,'p_compexp1','lex.py',326),
  ('compexp1 -> GTE','compexp1',1,'p_compexp1','lex.py',327),
  ('compexp1 -> LTE','compexp1',1,'p_compexp1','lex.py',328),
  ('compexp1 -> NE','compexp1',1,'p_compexp1','lex.py',329),
  ('sumexp -> mulexp','sumexp',1,'p_sumexp','lex.py',333),
  ('sumexp -> PLUS','sumexp',1,'p_sumexp','lex.py',334),
  ('sumexp -> MINUS','sumexp',1,'p_sumexp','lex.py',335),
  ('mulexp -> pexp','mulexp',1,'p_mulexp','lex.py',339),
  ('mulexp -> MUL','mulexp',1,'p_mulexp','lex.py',340),
  ('mulexp -> DIV','mulexp',1,'p_mulexp','lex.py',341),
  ('pexp -> var1','pexp',1,'p_pexp','lex.py',345),
  ('pexp -> CTEI','pexp',1,'p_pexp','lex.py',346),
  ('pexp -> CTEF','pexp',1,'p_pexp','lex.py',347),
  ('pexp -> CTEC','pexp',1,'p_pexp','lex.py',348),
  ('pexp -> llamada','pexp',1,'p_pexp','lex.py',349),
  ('pexp -> LPAREN exp RPAREN','pexp',3,'p_pexp','lex.py',350),
  ('empty -> <empty>','empty',0,'p_empty','lex.py',356),
]
