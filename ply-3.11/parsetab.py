
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMILLA COMMA CTEC CTEF CTEI CTESTRING DETERMINANTE DIV ELSE END EQUALS FLOAT FOR FROM FUN GT GTE ID IF INT INVERSA LBRACKET LCURLY LPAREN LT LTE MAIN MINUS MUL NE OR PLUS PRINT PROGRAM RBRACKET RCURLY READ RETURN RPAREN SEMICOLON TO TRANSPUESTA VAR VOID WHILE\n        programa : addP PROGRAM ID SEMICOLON programa1\n        addP :\n\tprograma1 : vars modules programa2\n\tprograma1 : vars modules\n\t          | programa2\n\t\n\tprograma2 :  main\n\t\n\tmain : MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END\n\t\n    tipo : INT actual_type\n         | FLOAT actual_type\n         | CHAR actual_type\n    actual_type :\n    vars : var \n         | empty\n    \n    var : VAR var2\n    \n        var1 : ID\n            | ID COMMA var1\n            | ID arr \n            | ID arr COMMA var1\n            | ID mat COMMA var1\n            | ID mat\n            | ID mat especial\n            | empty\n    \n        var2 : var2 tipo var1 SEMICOLON\n             | var2 tipo arr SEMICOLON\n             | var2 tipo mat SEMICOLON\n             | empty\n    \n    especial : TRANSPUESTA\n             | INVERSA\n             | DETERMINANTE\n    \n    arr : LBRACKET CTEI RBRACKET\n        | LBRACKET exp RBRACKET \n    \n    \n    mat : LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET\n        | LBRACKET exp RBRACKET LBRACKET exp RBRACKET\n        | LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET\n        | LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET\n    \n    modules : function modules\n            | empty\n    \n    \n    function : FUN VOID function1 \n             | FUN tipo function2 \n    \n    function1 : ID LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY\n    \n    function2 : ID LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY   \n    \n    statement :  statement1 statement\n              | empty\n    \n    statement1 : asignacion SEMICOLON\n                | llamada SEMICOLON\n                | lectura SEMICOLON\n                | escritura SEMICOLON\n                | for\n                | if\n                | while\n    \n    asignacion : ID EQUALS exp\n               | ID arr EQUALS exp\n               | ID mat EQUALS exp\n    \n    param : tipo param1  \n          | empty\n    \n    \n    param1 : ID\n           | ID COMMA param1\n           | empty \n    \n    llamada : ID LPAREN exp RPAREN\n    \n    if : IF LPAREN exp RPAREN LCURLY statement RCURLY\n        | IF LPAREN exp RPAREN LCURLY statement RCURLY else\n    \n    else : ELSE LCURLY statement RCURLY\n        | empty\n    \n    for : FOR LPAREN for1 RPAREN LCURLY statement RCURLY\n    \n    for1 : FROM asignacion TO exp\n    \n    while : WHILE LPAREN exp RPAREN LCURLY statement RCURLY\n    \n    escritura : PRINT LPAREN escritura1 RPAREN\n    \n    escritura1 : escritura2 COMMA escritura2\n               | escritura2\n    \n    escritura2 : CTESTRING  \n               | CTEI\n               | CTEF \n               | exp\n    \n    lectura : READ LPAREN var1 RPAREN\n    \n    exp : nexp  \n        | nexp OR nexp\n    \n    nexp : compexp\n         | compexp AND compexp\n    \n    compexp : sumexp \n            | compexp1 sumexp\n    \n    compexp1 : sumexp GT sumexp\n             | sumexp LT sumexp\n             | sumexp GTE sumexp\n             | sumexp LTE sumexp\n             | sumexp NE sumexp \n    \n    sumexp : mulexp  \n           | mulexp PLUS mulexp\n           | mulexp MINUS mulexp\n    \n    mulexp : pexp  \n           | pexp MUL pexp\n           | pexp DIV pexp\n    \n    pexp : var1  \n         | CTEI\n         | CTEF\n         | CTEC\n         | llamada\n         | LPAREN exp RPAREN\n    \n    empty :\n    '
    
_lr_action_items = {'PROGRAM':([0,2,],[-2,3,]),'$end':([1,5,6,7,8,9,10,11,12,14,15,16,18,19,21,22,32,34,51,52,53,163,197,211,],[0,-98,-1,-98,-5,-12,-13,-6,-98,-4,-98,-37,-14,-26,-3,-36,-38,-39,-23,-24,-25,-7,-40,-41,]),'ID':([3,9,10,12,18,19,23,24,25,26,27,28,30,36,37,38,42,43,44,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,99,103,104,105,106,109,110,111,112,113,114,115,116,117,118,121,127,128,129,142,145,146,147,148,149,152,153,155,156,157,158,159,160,161,162,165,166,175,178,179,184,193,194,195,196,198,204,205,206,208,210,212,214,],[4,-12,-13,-98,-14,-26,33,35,-11,-11,-11,42,47,-8,-9,-10,-15,-22,70,-23,-24,-25,42,-17,-20,70,-86,-89,-92,-94,-95,-96,70,-15,-98,47,-16,42,42,-21,-27,-28,-29,-30,-31,70,70,70,70,70,70,70,-93,70,70,70,70,70,130,-18,-19,70,70,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,130,-48,-49,-50,-59,-44,-45,-46,-47,70,42,70,70,70,-98,-98,-32,-35,-33,-34,70,70,187,130,130,70,130,70,130,130,70,-64,-60,-66,-61,-63,130,-62,]),'SEMICOLON':([4,25,26,27,28,36,37,38,39,40,41,42,43,54,55,56,59,60,61,62,63,64,65,66,67,68,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,123,124,125,126,142,149,159,160,161,162,164,165,166,180,181,182,183,198,203,],[5,-11,-11,-11,-98,-8,-9,-10,51,52,53,-15,-22,-98,-17,-20,-75,-77,-79,-98,-86,-89,-92,-94,-95,-96,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-98,-98,-98,-98,-98,-80,-93,-98,-98,-98,-98,136,137,-18,-19,-76,-78,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,145,146,147,148,-59,-98,-32,-35,-33,-34,-51,-98,-98,-52,-53,-74,-67,-98,207,]),'VAR':([5,71,157,158,],[12,12,12,12,]),'FUN':([5,7,9,10,12,15,18,19,32,34,51,52,53,197,211,],[-98,17,-12,-13,-98,17,-14,-26,-38,-39,-23,-24,-25,-40,-41,]),'MAIN':([5,7,9,10,12,14,15,16,18,19,22,32,34,51,52,53,197,211,],[13,-98,-12,-13,-98,13,-98,-37,-14,-26,-36,-38,-39,-23,-24,-25,-40,-41,]),'READ':([9,10,12,18,19,51,52,53,71,99,121,127,128,129,145,146,147,148,157,158,178,179,193,195,196,204,205,206,208,210,212,214,],[-12,-13,-98,-14,-26,-23,-24,-25,-98,131,131,-48,-49,-50,-44,-45,-46,-47,-98,-98,131,131,131,131,131,-64,-60,-66,-61,-63,131,-62,]),'PRINT':([9,10,12,18,19,51,52,53,71,99,121,127,128,129,145,146,147,148,157,158,178,179,193,195,196,204,205,206,208,210,212,214,],[-12,-13,-98,-14,-26,-23,-24,-25,-98,132,132,-48,-49,-50,-44,-45,-46,-47,-98,-98,132,132,132,132,132,-64,-60,-66,-61,-63,132,-62,]),'FOR':([9,10,12,18,19,51,52,53,71,99,121,127,128,129,145,146,147,148,157,158,178,179,193,195,196,204,205,206,208,210,212,214,],[-12,-13,-98,-14,-26,-23,-24,-25,-98,133,133,-48,-49,-50,-44,-45,-46,-47,-98,-98,133,133,133,133,133,-64,-60,-66,-61,-63,133,-62,]),'IF':([9,10,12,18,19,51,52,53,71,99,121,127,128,129,145,146,147,148,157,158,178,179,193,195,196,204,205,206,208,210,212,214,],[-12,-13,-98,-14,-26,-23,-24,-25,-98,134,134,-48,-49,-50,-44,-45,-46,-47,-98,-98,134,134,134,134,134,-64,-60,-66,-61,-63,134,-62,]),'WHILE':([9,10,12,18,19,51,52,53,71,99,121,127,128,129,145,146,147,148,157,158,178,179,193,195,196,204,205,206,208,210,212,214,],[-12,-13,-98,-14,-26,-23,-24,-25,-98,135,135,-48,-49,-50,-44,-45,-46,-47,-98,-98,135,135,135,135,135,-64,-60,-66,-61,-63,135,-62,]),'RCURLY':([9,10,12,18,19,51,52,53,71,99,120,121,122,127,128,129,144,145,146,147,148,157,178,190,193,195,196,199,201,202,204,205,206,207,208,210,212,213,214,],[-12,-13,-98,-14,-26,-23,-24,-25,-98,-98,143,-98,-43,-48,-49,-50,-42,-44,-45,-46,-47,-98,-98,197,-98,-98,-98,204,205,206,-64,-60,-66,211,-61,-63,-98,214,-62,]),'RETURN':([9,10,12,18,19,51,52,53,121,122,127,128,129,144,145,146,147,148,158,179,191,204,205,206,208,210,214,],[-12,-13,-98,-14,-26,-23,-24,-25,-98,-43,-48,-49,-50,-42,-44,-45,-46,-47,-98,-98,198,-64,-60,-66,-61,-63,-62,]),'INT':([12,17,18,19,20,49,50,51,52,53,],[-98,25,25,-26,25,25,25,-23,-24,-25,]),'FLOAT':([12,17,18,19,20,49,50,51,52,53,],[-98,26,26,-26,26,26,26,-23,-24,-25,]),'CHAR':([12,17,18,19,20,49,50,51,52,53,],[-98,27,27,-26,27,27,27,-23,-24,-25,]),'LPAREN':([13,33,35,42,43,44,54,55,56,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,103,104,105,106,109,110,111,112,113,114,115,116,117,118,130,131,132,133,134,135,142,149,153,155,156,159,160,161,162,165,166,184,194,198,],[20,49,50,-15,-22,69,-98,-17,-20,69,-86,-89,-92,-94,-95,-96,69,98,-16,-98,-98,-21,-27,-28,-29,-30,-31,69,69,69,69,69,69,69,-93,69,69,69,69,69,-18,-19,69,69,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,98,152,153,154,155,156,-59,69,69,69,69,-32,-35,-33,-34,69,69,69,69,69,]),'VOID':([17,],[23,]),'RPAREN':([20,25,26,27,29,30,31,36,37,38,42,43,46,47,48,49,50,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,142,152,153,155,156,159,160,161,162,167,168,169,170,171,172,173,174,176,177,184,192,194,200,],[-98,-11,-11,-11,45,-98,-55,-8,-9,-10,-15,-22,-54,-56,-58,-98,-98,-98,-17,-20,-75,-77,-79,-98,-86,-89,-92,-94,-95,-96,-98,-15,-98,101,102,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-98,-98,-98,-98,-98,-80,-93,-98,-98,-98,-98,118,-98,-57,-18,-19,-76,-78,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,142,-59,-98,-98,-98,-98,-32,-35,-33,-34,182,183,-69,-70,-71,-72,-73,185,188,189,-98,-68,-98,-65,]),'LBRACKET':([25,26,27,28,36,37,38,42,70,82,83,130,187,],[-11,-11,-11,44,-8,-9,-10,44,44,105,106,44,44,]),'MUL':([42,43,44,54,55,56,57,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,103,104,105,106,109,110,111,112,113,114,115,116,117,118,138,141,142,149,153,155,156,159,160,161,162,165,166,171,172,184,194,198,],[-15,-22,-98,-98,-17,-20,-93,-98,-86,95,-92,-94,-95,-96,-98,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-98,-98,-98,-98,-98,-93,-98,-98,-98,-98,-98,-18,-19,-98,-98,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,-93,-93,-59,-98,-98,-98,-98,-32,-35,-33,-34,-98,-98,-93,-94,-98,-98,-98,]),'DIV':([42,43,44,54,55,56,57,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,103,104,105,106,109,110,111,112,113,114,115,116,117,118,138,141,142,149,153,155,156,159,160,161,162,165,166,171,172,184,194,198,],[-15,-22,-98,-98,-17,-20,-93,-98,-86,96,-92,-94,-95,-96,-98,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-98,-98,-98,-98,-98,-93,-98,-98,-98,-98,-98,-18,-19,-98,-98,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,-93,-93,-59,-98,-98,-98,-98,-32,-35,-33,-34,-98,-98,-93,-94,-98,-98,-98,]),'PLUS':([42,43,44,54,55,56,57,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,103,104,105,106,109,110,111,112,113,114,115,116,117,118,138,141,142,149,153,155,156,159,160,161,162,165,166,171,172,184,194,198,],[-15,-22,-98,-98,-17,-20,-93,-98,93,-89,-92,-94,-95,-96,-98,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-98,-98,-98,-98,-98,-93,-98,-98,-98,-98,-98,-18,-19,-98,-98,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,-93,-93,-59,-98,-98,-98,-98,-32,-35,-33,-34,-98,-98,-93,-94,-98,-98,-98,]),'MINUS':([42,43,44,54,55,56,57,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,103,104,105,106,109,110,111,112,113,114,115,116,117,118,138,141,142,149,153,155,156,159,160,161,162,165,166,171,172,184,194,198,],[-15,-22,-98,-98,-17,-20,-93,-98,94,-89,-92,-94,-95,-96,-98,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-98,-98,-98,-98,-98,-93,-98,-98,-98,-98,-98,-18,-19,-98,-98,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,-93,-93,-59,-98,-98,-98,-98,-32,-35,-33,-34,-98,-98,-93,-94,-98,-98,-98,]),'GT':([42,43,44,54,55,56,57,61,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,98,103,104,105,106,114,115,116,117,118,138,141,142,149,153,155,156,159,160,161,162,165,166,171,172,184,194,198,],[-15,-22,-98,-98,-17,-20,-93,86,-86,-89,-92,-94,-95,-96,-98,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-93,-98,-98,-98,-98,-98,-18,-19,-98,-98,-87,-88,-90,-91,-97,-93,-93,-59,-98,-98,-98,-98,-32,-35,-33,-34,-98,-98,-93,-94,-98,-98,-98,]),'LT':([42,43,44,54,55,56,57,61,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,98,103,104,105,106,114,115,116,117,118,138,141,142,149,153,155,156,159,160,161,162,165,166,171,172,184,194,198,],[-15,-22,-98,-98,-17,-20,-93,87,-86,-89,-92,-94,-95,-96,-98,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-93,-98,-98,-98,-98,-98,-18,-19,-98,-98,-87,-88,-90,-91,-97,-93,-93,-59,-98,-98,-98,-98,-32,-35,-33,-34,-98,-98,-93,-94,-98,-98,-98,]),'GTE':([42,43,44,54,55,56,57,61,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,98,103,104,105,106,114,115,116,117,118,138,141,142,149,153,155,156,159,160,161,162,165,166,171,172,184,194,198,],[-15,-22,-98,-98,-17,-20,-93,88,-86,-89,-92,-94,-95,-96,-98,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-93,-98,-98,-98,-98,-98,-18,-19,-98,-98,-87,-88,-90,-91,-97,-93,-93,-59,-98,-98,-98,-98,-32,-35,-33,-34,-98,-98,-93,-94,-98,-98,-98,]),'LTE':([42,43,44,54,55,56,57,61,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,98,103,104,105,106,114,115,116,117,118,138,141,142,149,153,155,156,159,160,161,162,165,166,171,172,184,194,198,],[-15,-22,-98,-98,-17,-20,-93,89,-86,-89,-92,-94,-95,-96,-98,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-93,-98,-98,-98,-98,-98,-18,-19,-98,-98,-87,-88,-90,-91,-97,-93,-93,-59,-98,-98,-98,-98,-32,-35,-33,-34,-98,-98,-93,-94,-98,-98,-98,]),'NE':([42,43,44,54,55,56,57,61,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,98,103,104,105,106,114,115,116,117,118,138,141,142,149,153,155,156,159,160,161,162,165,166,171,172,184,194,198,],[-15,-22,-98,-98,-17,-20,-93,90,-86,-89,-92,-94,-95,-96,-98,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-93,-98,-98,-98,-98,-98,-18,-19,-98,-98,-87,-88,-90,-91,-97,-93,-93,-59,-98,-98,-98,-98,-32,-35,-33,-34,-98,-98,-93,-94,-98,-98,-98,]),'AND':([42,43,44,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,98,103,104,105,106,109,110,111,112,113,114,115,116,117,118,138,141,142,149,153,155,156,159,160,161,162,165,166,171,172,184,194,198,],[-15,-22,-98,-98,-17,-20,-93,85,-79,-98,-86,-89,-92,-94,-95,-96,-98,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-98,-98,-98,-98,-80,-93,-98,-98,-98,-98,-98,-18,-19,-98,-98,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,-93,-93,-59,-98,-98,-98,-98,-32,-35,-33,-34,-98,-98,-93,-94,-98,-98,-98,]),'OR':([42,43,44,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,98,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,138,141,142,149,153,155,156,159,160,161,162,165,166,171,172,184,194,198,],[-15,-22,-98,-98,-17,-20,-93,84,-77,-79,-98,-86,-89,-92,-94,-95,-96,-98,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-98,-98,-98,-98,-80,-93,-98,-98,-98,-98,-98,-18,-19,-98,-98,-78,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,-93,-93,-59,-98,-98,-98,-98,-32,-35,-33,-34,-98,-98,-93,-94,-98,-98,-98,]),'RBRACKET':([42,43,44,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,138,139,140,141,142,159,160,161,162,],[-15,-22,-98,-98,-17,-20,82,83,-75,-77,-79,-98,-86,-89,-92,-94,-95,-96,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-98,-98,-98,-98,-98,-80,-93,-98,-98,-98,-98,-18,-19,-98,-98,-76,-78,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,159,160,161,162,-59,-32,-35,-33,-34,]),'TO':([42,43,54,55,56,59,60,61,62,63,64,65,66,67,68,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,104,107,108,109,110,111,112,113,114,115,116,117,118,142,149,159,160,161,162,164,165,166,180,181,186,],[-15,-22,-98,-17,-20,-75,-77,-79,-98,-86,-89,-92,-94,-95,-96,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-98,-98,-98,-98,-98,-80,-93,-98,-98,-98,-98,-18,-19,-76,-78,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,-59,-98,-32,-35,-33,-34,-51,-98,-98,-52,-53,194,]),'COMMA':([42,43,47,54,55,56,59,60,61,62,63,64,65,66,67,68,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,104,107,108,109,110,111,112,113,114,115,116,117,118,142,153,159,160,161,162,169,170,171,172,173,],[54,-22,72,-98,76,77,-75,-77,-79,-98,-86,-89,-92,-94,-95,-96,54,-16,-98,-98,-21,-27,-28,-29,-30,-31,-98,-98,-98,-98,-98,-98,-98,-80,-93,-98,-98,-98,-98,-18,-19,-76,-78,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,-59,-98,-32,-35,-33,-34,184,-70,-71,-72,-73,]),'CTEI':([42,43,44,54,55,56,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,103,104,105,106,109,110,111,112,113,114,115,116,117,118,142,149,153,155,156,159,160,161,162,165,166,184,194,198,],[-15,-22,57,-98,-17,-20,92,-86,-89,-92,-94,-95,-96,92,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,92,92,92,92,92,92,92,-93,92,92,92,92,92,-18,-19,138,141,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,-59,92,171,92,92,-32,-35,-33,-34,92,92,171,92,92,]),'CTEF':([42,43,44,54,55,56,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,103,104,105,106,109,110,111,112,113,114,115,116,117,118,142,149,153,155,156,159,160,161,162,165,166,184,194,198,],[-15,-22,66,-98,-17,-20,66,-86,-89,-92,-94,-95,-96,66,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,66,66,66,66,66,66,66,-93,66,66,66,66,66,-18,-19,66,66,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,-59,66,172,66,66,-32,-35,-33,-34,66,66,172,66,66,]),'CTEC':([42,43,44,54,55,56,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,103,104,105,106,109,110,111,112,113,114,115,116,117,118,142,149,153,155,156,159,160,161,162,165,166,184,194,198,],[-15,-22,67,-98,-17,-20,67,-86,-89,-92,-94,-95,-96,67,-15,-16,-98,-98,-21,-27,-28,-29,-30,-31,67,67,67,67,67,67,67,-93,67,67,67,67,67,-18,-19,67,67,-81,-82,-83,-84,-85,-87,-88,-90,-91,-97,-59,67,67,67,67,-32,-35,-33,-34,67,67,67,67,67,]),'LCURLY':([45,136,137,185,188,189,209,],[71,157,158,193,195,196,212,]),'TRANSPUESTA':([56,159,160,161,162,],[79,-32,-35,-33,-34,]),'INVERSA':([56,159,160,161,162,],[80,-32,-35,-33,-34,]),'DETERMINANTE':([56,159,160,161,162,],[81,-32,-35,-33,-34,]),'EQUALS':([82,83,130,150,151,159,160,161,162,187,],[-30,-31,149,165,166,-32,-35,-33,-34,149,]),'END':([143,],[163,]),'CTESTRING':([153,184,],[170,170,]),'FROM':([154,],[175,]),'ELSE':([205,],[209,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'addP':([0,],[2,]),'programa1':([5,],[6,]),'vars':([5,71,157,158,],[7,99,178,179,]),'programa2':([5,14,],[8,21,]),'var':([5,71,157,158,],[9,9,9,9,]),'empty':([5,7,12,15,20,28,30,44,49,50,54,62,69,71,72,76,77,84,85,86,87,88,89,90,93,94,95,96,98,99,105,106,121,149,152,153,155,156,157,158,165,166,178,179,184,193,194,195,196,198,205,212,],[10,16,19,16,31,43,48,43,31,31,43,43,43,10,48,43,43,43,43,43,43,43,43,43,43,43,43,43,43,122,43,43,122,43,43,43,43,43,10,10,43,43,122,122,43,122,43,122,122,43,210,122,]),'main':([5,14,],[11,11,]),'modules':([7,15,],[14,22,]),'function':([7,15,],[15,15,]),'var2':([12,],[18,]),'tipo':([17,18,20,49,50,],[24,28,30,30,30,]),'param':([20,49,50,],[29,73,74,]),'function1':([23,],[32,]),'function2':([24,],[34,]),'actual_type':([25,26,27,],[36,37,38,]),'var1':([28,44,54,62,69,76,77,84,85,86,87,88,89,90,93,94,95,96,98,105,106,149,152,153,155,156,165,166,184,194,198,],[39,65,75,65,65,103,104,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,167,65,65,65,65,65,65,65,65,]),'arr':([28,42,70,130,187,],[40,55,55,150,150,]),'mat':([28,42,70,130,187,],[41,56,56,151,151,]),'param1':([30,72,],[46,100,]),'exp':([44,69,98,105,106,149,153,155,156,165,166,184,194,198,],[58,97,119,139,140,164,173,176,177,180,181,173,200,203,]),'nexp':([44,69,84,98,105,106,149,153,155,156,165,166,184,194,198,],[59,59,107,59,59,59,59,59,59,59,59,59,59,59,59,]),'compexp':([44,69,84,85,98,105,106,149,153,155,156,165,166,184,194,198,],[60,60,60,108,60,60,60,60,60,60,60,60,60,60,60,60,]),'sumexp':([44,62,69,84,85,86,87,88,89,90,98,105,106,149,153,155,156,165,166,184,194,198,],[61,91,61,61,61,109,110,111,112,113,61,61,61,61,61,61,61,61,61,61,61,61,]),'compexp1':([44,69,84,85,98,105,106,149,153,155,156,165,166,184,194,198,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'mulexp':([44,62,69,84,85,86,87,88,89,90,93,94,98,105,106,149,153,155,156,165,166,184,194,198,],[63,63,63,63,63,63,63,63,63,63,114,115,63,63,63,63,63,63,63,63,63,63,63,63,]),'pexp':([44,62,69,84,85,86,87,88,89,90,93,94,95,96,98,105,106,149,153,155,156,165,166,184,194,198,],[64,64,64,64,64,64,64,64,64,64,64,64,116,117,64,64,64,64,64,64,64,64,64,64,64,64,]),'llamada':([44,62,69,84,85,86,87,88,89,90,93,94,95,96,98,99,105,106,121,149,153,155,156,165,166,178,179,184,193,194,195,196,198,212,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,124,68,68,124,68,68,68,68,68,68,124,124,68,124,68,124,124,68,124,]),'especial':([56,],[78,]),'statement':([99,121,178,179,193,195,196,212,],[120,144,190,191,199,201,202,213,]),'statement1':([99,121,178,179,193,195,196,212,],[121,121,121,121,121,121,121,121,]),'asignacion':([99,121,175,178,179,193,195,196,212,],[123,123,186,123,123,123,123,123,123,]),'lectura':([99,121,178,179,193,195,196,212,],[125,125,125,125,125,125,125,125,]),'escritura':([99,121,178,179,193,195,196,212,],[126,126,126,126,126,126,126,126,]),'for':([99,121,178,179,193,195,196,212,],[127,127,127,127,127,127,127,127,]),'if':([99,121,178,179,193,195,196,212,],[128,128,128,128,128,128,128,128,]),'while':([99,121,178,179,193,195,196,212,],[129,129,129,129,129,129,129,129,]),'escritura1':([153,],[168,]),'escritura2':([153,184,],[169,192,]),'for1':([154,],[174,]),'else':([205,],[208,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> addP PROGRAM ID SEMICOLON programa1','programa',5,'p_programa','main.py',130),
  ('addP -> <empty>','addP',0,'p_addP','main.py',135),
  ('programa1 -> vars modules programa2','programa1',3,'p_programa1','main.py',145),
  ('programa1 -> vars modules','programa1',2,'p_programa1','main.py',146),
  ('programa1 -> programa2','programa1',1,'p_programa1','main.py',147),
  ('programa2 -> main','programa2',1,'p_programa2','main.py',152),
  ('main -> MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END','main',9,'p_main','main.py',156),
  ('tipo -> INT actual_type','tipo',2,'p_tipo','main.py',161),
  ('tipo -> FLOAT actual_type','tipo',2,'p_tipo','main.py',162),
  ('tipo -> CHAR actual_type','tipo',2,'p_tipo','main.py',163),
  ('actual_type -> <empty>','actual_type',0,'p_actual_type','main.py',166),
  ('vars -> var','vars',1,'p_vars','main.py',172),
  ('vars -> empty','vars',1,'p_vars','main.py',173),
  ('var -> VAR var2','var',2,'p_var','main.py',178),
  ('var1 -> ID','var1',1,'p_var1','main.py',183),
  ('var1 -> ID COMMA var1','var1',3,'p_var1','main.py',184),
  ('var1 -> ID arr','var1',2,'p_var1','main.py',185),
  ('var1 -> ID arr COMMA var1','var1',4,'p_var1','main.py',186),
  ('var1 -> ID mat COMMA var1','var1',4,'p_var1','main.py',187),
  ('var1 -> ID mat','var1',2,'p_var1','main.py',188),
  ('var1 -> ID mat especial','var1',3,'p_var1','main.py',189),
  ('var1 -> empty','var1',1,'p_var1','main.py',190),
  ('var2 -> var2 tipo var1 SEMICOLON','var2',4,'p_var2','main.py',196),
  ('var2 -> var2 tipo arr SEMICOLON','var2',4,'p_var2','main.py',197),
  ('var2 -> var2 tipo mat SEMICOLON','var2',4,'p_var2','main.py',198),
  ('var2 -> empty','var2',1,'p_var2','main.py',199),
  ('especial -> TRANSPUESTA','especial',1,'p_especial','main.py',206),
  ('especial -> INVERSA','especial',1,'p_especial','main.py',207),
  ('especial -> DETERMINANTE','especial',1,'p_especial','main.py',208),
  ('arr -> LBRACKET CTEI RBRACKET','arr',3,'p_arr','main.py',213),
  ('arr -> LBRACKET exp RBRACKET','arr',3,'p_arr','main.py',214),
  ('mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET','mat',6,'p_mat','main.py',220),
  ('mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','mat',6,'p_mat','main.py',221),
  ('mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET','mat',6,'p_mat','main.py',222),
  ('mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET','mat',6,'p_mat','main.py',223),
  ('modules -> function modules','modules',2,'p_modules','main.py',229),
  ('modules -> empty','modules',1,'p_modules','main.py',230),
  ('function -> FUN VOID function1','function',3,'p_function','main.py',237),
  ('function -> FUN tipo function2','function',3,'p_function','main.py',238),
  ('function1 -> ID LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY','function1',9,'p_function1','main.py',243),
  ('function2 -> ID LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY','function2',12,'p_function2','main.py',249),
  ('statement -> statement1 statement','statement',2,'p_statement','main.py',254),
  ('statement -> empty','statement',1,'p_statement','main.py',255),
  ('statement1 -> asignacion SEMICOLON','statement1',2,'p_statement1','main.py',261),
  ('statement1 -> llamada SEMICOLON','statement1',2,'p_statement1','main.py',262),
  ('statement1 -> lectura SEMICOLON','statement1',2,'p_statement1','main.py',263),
  ('statement1 -> escritura SEMICOLON','statement1',2,'p_statement1','main.py',264),
  ('statement1 -> for','statement1',1,'p_statement1','main.py',265),
  ('statement1 -> if','statement1',1,'p_statement1','main.py',266),
  ('statement1 -> while','statement1',1,'p_statement1','main.py',267),
  ('asignacion -> ID EQUALS exp','asignacion',3,'p_asignacion','main.py',274),
  ('asignacion -> ID arr EQUALS exp','asignacion',4,'p_asignacion','main.py',275),
  ('asignacion -> ID mat EQUALS exp','asignacion',4,'p_asignacion','main.py',276),
  ('param -> tipo param1','param',2,'p_param','main.py',282),
  ('param -> empty','param',1,'p_param','main.py',283),
  ('param1 -> ID','param1',1,'p_param1','main.py',289),
  ('param1 -> ID COMMA param1','param1',3,'p_param1','main.py',290),
  ('param1 -> empty','param1',1,'p_param1','main.py',291),
  ('llamada -> ID LPAREN exp RPAREN','llamada',4,'p_llamada','main.py',298),
  ('if -> IF LPAREN exp RPAREN LCURLY statement RCURLY','if',7,'p_if','main.py',303),
  ('if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else','if',8,'p_if','main.py',304),
  ('else -> ELSE LCURLY statement RCURLY','else',4,'p_else','main.py',309),
  ('else -> empty','else',1,'p_else','main.py',310),
  ('for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY','for',7,'p_for','main.py',314),
  ('for1 -> FROM asignacion TO exp','for1',4,'p_for1','main.py',318),
  ('while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY','while',7,'p_while','main.py',322),
  ('escritura -> PRINT LPAREN escritura1 RPAREN','escritura',4,'p_escritura','main.py',327),
  ('escritura1 -> escritura2 COMMA escritura2','escritura1',3,'p_escritura1','main.py',331),
  ('escritura1 -> escritura2','escritura1',1,'p_escritura1','main.py',332),
  ('escritura2 -> CTESTRING','escritura2',1,'p_escritura2','main.py',336),
  ('escritura2 -> CTEI','escritura2',1,'p_escritura2','main.py',337),
  ('escritura2 -> CTEF','escritura2',1,'p_escritura2','main.py',338),
  ('escritura2 -> exp','escritura2',1,'p_escritura2','main.py',339),
  ('lectura -> READ LPAREN var1 RPAREN','lectura',4,'p_lectura','main.py',344),
  ('exp -> nexp','exp',1,'p_exp','main.py',350),
  ('exp -> nexp OR nexp','exp',3,'p_exp','main.py',351),
  ('nexp -> compexp','nexp',1,'p_nexp','main.py',355),
  ('nexp -> compexp AND compexp','nexp',3,'p_nexp','main.py',356),
  ('compexp -> sumexp','compexp',1,'p_compexp','main.py',366),
  ('compexp -> compexp1 sumexp','compexp',2,'p_compexp','main.py',367),
  ('compexp1 -> sumexp GT sumexp','compexp1',3,'p_compexp1','main.py',378),
  ('compexp1 -> sumexp LT sumexp','compexp1',3,'p_compexp1','main.py',379),
  ('compexp1 -> sumexp GTE sumexp','compexp1',3,'p_compexp1','main.py',380),
  ('compexp1 -> sumexp LTE sumexp','compexp1',3,'p_compexp1','main.py',381),
  ('compexp1 -> sumexp NE sumexp','compexp1',3,'p_compexp1','main.py',382),
  ('sumexp -> mulexp','sumexp',1,'p_sumexp','main.py',399),
  ('sumexp -> mulexp PLUS mulexp','sumexp',3,'p_sumexp','main.py',400),
  ('sumexp -> mulexp MINUS mulexp','sumexp',3,'p_sumexp','main.py',401),
  ('mulexp -> pexp','mulexp',1,'p_mulexp','main.py',413),
  ('mulexp -> pexp MUL pexp','mulexp',3,'p_mulexp','main.py',414),
  ('mulexp -> pexp DIV pexp','mulexp',3,'p_mulexp','main.py',415),
  ('pexp -> var1','pexp',1,'p_pexp','main.py',428),
  ('pexp -> CTEI','pexp',1,'p_pexp','main.py',429),
  ('pexp -> CTEF','pexp',1,'p_pexp','main.py',430),
  ('pexp -> CTEC','pexp',1,'p_pexp','main.py',431),
  ('pexp -> llamada','pexp',1,'p_pexp','main.py',432),
  ('pexp -> LPAREN exp RPAREN','pexp',3,'p_pexp','main.py',433),
  ('empty -> <empty>','empty',0,'p_empty','main.py',439),
]
