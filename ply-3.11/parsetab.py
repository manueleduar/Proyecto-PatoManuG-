
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMILLA COMMA COMPARE CTEC CTEF CTEI CTESTRING DETERMINANTE DIV ELSE END EQUALS FLOAT FOR FROM FUN GT GTE ID IF INT INVERSA LBRACKET LCURLY LPAREN LT LTE MAIN MINUS MUL NE OR PLUS PRINT PROGRAM RBRACKET RCURLY READ RETURN RPAREN SEMICOLON TO TRANSPUESTA VAR VOID WHILE\n        programa : PROGRAM ID SEMICOLON addP programa1 \n        addP :\n\tprograma1 : vars quadMain modules programa2\n\tprograma1 : vars quadMain modules\n\t          | programa2\n\t\n\tprograma2 : main_end main \n\t\n\tmain : MAIN save_fun LPAREN param2 RPAREN LCURLY vars statement RCURLY END\n\tquadMain : main_end : \n    tipo : INT guardaTipoVar\n         | FLOAT guardaTipoVar\n         | CHAR guardaTipoVar \n    guardaTipoVar : \n    vars : var \n         | empty\n    \n    var : VAR var2 \n    \n        var1 : ID\n            | ID COMMA var1 addV\n            | ID arr \n            | ID arr COMMA var1 addV \n            | ID mat COMMA var1 addV\n            | ID mat \n            | ID mat especial \n            | empty \n    addV :\n        var2 : var2 tipo var1 SEMICOLON addV\n             | empty\n    \n    especial : TRANSPUESTA\n             | INVERSA\n             | DETERMINANTE\n    \n    arr : LBRACKET CTEI RBRACKET\n        | LBRACKET exp RBRACKET \n    \n    \n    mat : LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET\n        | LBRACKET exp RBRACKET LBRACKET exp RBRACKET\n        | LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET\n        | LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET\n    \n    modules : function modules\n            | empty\n    \n     save_fun : \n    function : FUN VOID function1 \n             | FUN INT function2  \n             | FUN CHAR function2  \n             | FUN FLOAT function2  \n    \n    function1 : ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars fun_goto  statement RCURLY end_func \n    \n    function2 : ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars fun_goto  statement RETURN operadorReturn exp quad_return SEMICOLON RCURLY end_func \n    fun_goto :end_func : operadorReturn : quad_return : \n    statement :  statement1 statement\n              | empty\n    \n    statement1 : asignacion SEMICOLON\n               | llamada SEMICOLON\n               | lectura SEMICOLON\n               | escritura SEMICOLON\n               | for\n               | if\n               | while\n    \n    asignacion : ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion\n               | ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion\n               | ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion\n    genera_quad_asignacion : addOperadorName : \n        param1 : ID addV\n            | ID COMMA var1 addV \n            | ID arr \n            | ID arr COMMA var1 addV \n            | ID mat COMMA var1 addV \n            | ID mat \n            | ID mat especial \n            | empty \n    addParam : \n        param2 : param2 tipo param1 addV addParam\n             | empty \n    \n    llamada : ID era_call LPAREN aux_exp RPAREN  gosub_quad llena_endproc\n    \n    \n    aux_exp : exp \n            | exp quad_param COMMA  aux_exp  quad_param\n            | empty\n    \n    llena_endproc : \n    era_call : quad_param : gosub_quad : \n    if : IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else end_if   \n    \n    else : ELSE else_quad LCURLY statement RCURLY\n         | empty\n    for_op :for_quad : \n    for : FOR for_op LPAREN for1 RPAREN for_quad LCURLY statement RCURLY for_end\n    \n    for1 : FROM asignacion TO exp\n    loop_end : for_end : while_quad : while_op :\n    while : WHILE while_op LPAREN exp RPAREN while_quad LCURLY statement RCURLY loop_end\n    \n    escritura : PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN \n    \n    escritura1 : escritura2 COMMA escritura2\n               | escritura2\n    \n    escritura2 : COMILLA CTESTRING COMILLA\n               | CTEI saveCTE operatorPrintQuad\n               | CTEF saveCTE operatorPrintQuad\n               | exp \n    \n    lectura : READ operatorRead LPAREN exp operatorReadQuad RPAREN\n    \n    exp : nexp \n        | nexp OR addOperadorName nexp genera_quad_or\n    genera_quad_or : genera_quad_and : compare_quad : if_quad : end_if : else_quad : \n    nexp : compexp \n         | compexp AND addOperadorName compexp genera_quad_and\n    \n    compexp : sumexp\n            | compexp1 sumexp\n    \n    compexp1 : sumexp GT addOperadorName sumexp compare_quad\n             | sumexp LT addOperadorName sumexp compare_quad\n             | sumexp GTE addOperadorName sumexp compare_quad\n             | sumexp LTE addOperadorName sumexp compare_quad\n             | sumexp NE addOperadorName sumexp compare_quad\n             | sumexp COMPARE addOperadorName sumexp compare_quad\n    \n    sumexp : mulexp \n           | mulexp PLUS addOperadorName mulexp genera_sum_quad\n           | mulexp MINUS addOperadorName mulexp genera_sum_quad\n    genera_sum_quad : genera_mul_quad : operadorPrint : operatorPrintQuad : operatorRead : operatorReadQuad : \n    mulexp : pexp \n           | pexp MUL addOperadorName pexp genera_mul_quad\n           | pexp DIV addOperadorName pexp genera_mul_quad\n    \n    pexp : var1 saveId \n         | CTEI saveCTE\n         | CTEF saveCTE\n         | CTEC saveCTE\n         | CTESTRING saveCTE  \n         | llamada\n         | LPAREN exp RPAREN\n    \n    empty :\n    saveId : saveId2 : saveCTE : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,4,5,6,7,8,9,10,12,13,14,16,17,18,19,20,27,28,40,42,44,45,48,57,217,280,288,306,308,],[0,-2,-140,-1,-8,-5,-14,-15,-140,-140,-6,-16,-27,-4,-140,-38,-3,-37,-40,-41,-42,-43,-25,-26,-7,-47,-44,-47,-45,]),'ID':([2,9,10,12,16,17,23,24,25,26,29,30,31,32,35,36,37,38,39,48,49,50,51,52,56,57,58,59,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,114,117,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,147,148,149,158,159,167,168,169,170,171,172,173,174,175,176,184,185,186,187,190,192,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,215,216,218,221,222,225,228,229,230,231,232,233,234,243,246,248,249,251,252,255,277,278,281,284,287,289,291,294,295,297,298,300,301,303,305,309,],[3,-14,-15,-140,-16,-27,35,-13,-13,-13,41,43,43,43,-17,-24,-10,-11,-12,-25,35,-19,-22,79,84,-26,-25,35,35,-23,-28,-29,-30,79,-121,-130,-141,-143,-143,-143,-138,79,-17,-140,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,150,35,-20,-21,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-139,79,150,-56,-57,-58,35,35,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-52,-53,-54,-55,-126,79,-33,-36,-34,-35,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-140,-140,-63,79,79,79,-79,79,-46,-46,79,-63,-63,261,-75,150,150,79,79,79,79,150,-48,150,150,79,-140,-91,-109,-85,-90,-88,-83,-94,150,-84,]),'SEMICOLON':([3,23,24,25,26,34,35,36,37,38,39,49,50,51,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,120,121,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,165,166,167,168,169,170,171,172,173,174,175,176,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,228,232,233,234,246,250,251,252,267,268,269,270,271,281,282,283,289,293,299,],[4,-140,-13,-13,-13,48,-17,-24,-10,-11,-12,-140,-19,-22,-25,-140,-140,-23,-28,-29,-30,-103,-111,-113,-140,-121,-130,-141,-143,-143,-143,-138,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-114,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-139,180,181,184,185,186,187,-105,-106,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-33,-36,-34,-35,-104,-112,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,-79,-140,-63,-63,-75,-62,-140,-140,-59,-62,-62,-102,-95,-48,-60,-61,-140,-49,304,]),'VAR':([4,5,82,215,216,],[-2,12,12,12,12,]),'FUN':([4,5,7,9,10,12,13,16,17,19,40,42,44,45,48,57,280,288,306,308,],[-2,-140,-8,-14,-15,-140,21,-16,-27,21,-40,-41,-42,-43,-25,-26,-47,-44,-47,-45,]),'MAIN':([4,5,7,9,10,11,12,13,16,17,18,19,20,28,40,42,44,45,48,57,280,288,306,308,],[-2,-9,-8,-14,-15,15,-140,-140,-16,-27,-9,-140,-38,-37,-40,-41,-42,-43,-25,-26,-47,-44,-47,-45,]),'READ':([9,10,12,16,17,48,57,82,114,141,147,148,149,184,185,186,187,215,216,230,231,248,249,278,284,287,291,294,295,297,298,300,301,303,305,309,],[-14,-15,-140,-16,-27,-25,-26,-140,151,151,-56,-57,-58,-52,-53,-54,-55,-140,-140,-46,-46,151,151,151,151,151,-140,-91,-109,-85,-90,-88,-83,-94,151,-84,]),'PRINT':([9,10,12,16,17,48,57,82,114,141,147,148,149,184,185,186,187,215,216,230,231,248,249,278,284,287,291,294,295,297,298,300,301,303,305,309,],[-14,-15,-140,-16,-27,-25,-26,-140,152,152,-56,-57,-58,-52,-53,-54,-55,-140,-140,-46,-46,152,152,152,152,152,-140,-91,-109,-85,-90,-88,-83,-94,152,-84,]),'FOR':([9,10,12,16,17,48,57,82,114,141,147,148,149,184,185,186,187,215,216,230,231,248,249,278,284,287,291,294,295,297,298,300,301,303,305,309,],[-14,-15,-140,-16,-27,-25,-26,-140,153,153,-56,-57,-58,-52,-53,-54,-55,-140,-140,-46,-46,153,153,153,153,153,-140,-91,-109,-85,-90,-88,-83,-94,153,-84,]),'IF':([9,10,12,16,17,48,57,82,114,141,147,148,149,184,185,186,187,215,216,230,231,248,249,278,284,287,291,294,295,297,298,300,301,303,305,309,],[-14,-15,-140,-16,-27,-25,-26,-140,154,154,-56,-57,-58,-52,-53,-54,-55,-140,-140,-46,-46,154,154,154,154,154,-140,-91,-109,-85,-90,-88,-83,-94,154,-84,]),'WHILE':([9,10,12,16,17,48,57,82,114,141,147,148,149,184,185,186,187,215,216,230,231,248,249,278,284,287,291,294,295,297,298,300,301,303,305,309,],[-14,-15,-140,-16,-27,-25,-26,-140,155,155,-56,-57,-58,-52,-53,-54,-55,-140,-140,-46,-46,155,155,155,155,155,-140,-91,-109,-85,-90,-88,-83,-94,155,-84,]),'RCURLY':([9,10,12,16,17,48,57,82,114,140,141,142,147,148,149,183,184,185,186,187,215,230,248,265,278,284,286,287,290,291,292,294,295,297,298,300,301,303,304,305,307,309,],[-14,-15,-140,-16,-27,-25,-26,-140,-140,182,-140,-51,-56,-57,-58,-50,-52,-53,-54,-55,-140,-46,-140,280,-140,-140,291,-140,294,-140,298,-91,-109,-85,-90,-88,-83,-94,306,-140,309,-84,]),'RETURN':([9,10,12,16,17,48,57,141,142,147,148,149,183,184,185,186,187,216,231,249,266,291,294,295,297,298,300,301,303,309,],[-14,-15,-140,-16,-27,-25,-26,-140,-51,-56,-57,-58,-50,-52,-53,-54,-55,-140,-46,-140,281,-140,-91,-109,-85,-90,-88,-83,-94,-84,]),'INT':([12,16,17,21,24,25,26,33,35,36,37,38,39,46,47,48,49,50,51,56,57,58,59,60,61,62,63,64,80,81,83,84,85,86,87,88,89,91,112,113,115,116,117,118,119,120,121,156,157,158,159,160,194,195,196,197,198,199,200,226,227,],[-140,24,-27,30,-13,-13,-13,-140,-17,-24,-10,-11,-12,24,-74,-25,-140,-19,-22,-140,-26,-25,-140,-140,-23,-28,-29,-30,-140,-140,-25,-25,-71,-18,-25,-25,-31,-32,24,24,-72,-64,-140,-66,-69,-20,-21,-73,-25,-140,-140,-70,-65,-25,-25,-33,-36,-34,-35,-67,-68,]),'FLOAT':([12,16,17,21,24,25,26,33,35,36,37,38,39,46,47,48,49,50,51,56,57,58,59,60,61,62,63,64,80,81,83,84,85,86,87,88,89,91,112,113,115,116,117,118,119,120,121,156,157,158,159,160,194,195,196,197,198,199,200,226,227,],[-140,25,-27,32,-13,-13,-13,-140,-17,-24,-10,-11,-12,25,-74,-25,-140,-19,-22,-140,-26,-25,-140,-140,-23,-28,-29,-30,-140,-140,-25,-25,-71,-18,-25,-25,-31,-32,25,25,-72,-64,-140,-66,-69,-20,-21,-73,-25,-140,-140,-70,-65,-25,-25,-33,-36,-34,-35,-67,-68,]),'CHAR':([12,16,17,21,24,25,26,33,35,36,37,38,39,46,47,48,49,50,51,56,57,58,59,60,61,62,63,64,80,81,83,84,85,86,87,88,89,91,112,113,115,116,117,118,119,120,121,156,157,158,159,160,194,195,196,197,198,199,200,226,227,],[-140,26,-27,31,-13,-13,-13,-140,-17,-24,-10,-11,-12,26,-74,-25,-140,-19,-22,-140,-26,-25,-140,-140,-23,-28,-29,-30,-140,-140,-25,-25,-71,-18,-25,-25,-31,-32,26,26,-72,-64,-140,-66,-69,-20,-21,-73,-25,-140,-140,-70,-65,-25,-25,-33,-36,-34,-35,-67,-68,]),'LPAREN':([15,22,35,36,41,43,49,50,51,52,53,54,58,59,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,111,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,150,151,152,153,154,155,167,168,169,170,171,172,173,174,175,176,189,190,191,192,193,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,218,221,222,225,228,229,232,233,234,246,251,252,255,277,281,289,],[-39,33,-17,-24,-39,-39,-140,-19,-22,78,80,81,-25,-140,-140,-23,-28,-29,-30,78,-121,-130,-141,-143,-143,-143,-138,78,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,137,-20,-21,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-139,78,-80,-128,190,-86,192,-93,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,221,-126,223,78,225,-33,-36,-34,-35,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,78,78,78,-79,78,78,-63,-63,-75,78,78,78,78,-48,78,]),'VOID':([21,],[29,]),'RPAREN':([24,25,26,33,35,36,37,38,39,46,47,49,50,51,56,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,115,116,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,134,135,136,137,156,157,158,159,160,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,190,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,221,222,224,225,226,227,228,229,235,236,237,239,240,241,242,245,246,247,253,254,255,257,258,264,272,273,274,275,277,285,],[-13,-13,-13,-140,-17,-24,-10,-11,-12,55,-74,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-103,-111,-113,-140,-121,-130,-141,-143,-143,-143,-138,-140,-17,-140,-140,-25,-25,-71,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-114,-143,-63,-63,-63,-63,-133,-135,-136,-137,136,138,139,-72,-64,-140,-66,-69,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-73,-25,-140,-140,-70,-105,-106,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,213,-76,-24,-126,-140,-65,-25,-25,-33,-36,-34,-35,-104,-112,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-140,-140,244,-140,-67,-68,-79,-140,-129,-127,-97,-143,-143,-101,259,263,-75,-81,270,271,-140,-127,-127,-77,-96,-98,-99,-100,-140,-89,]),'MUL':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,161,164,167,168,169,170,171,172,173,174,175,176,179,190,192,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,218,221,222,225,228,229,232,233,234,239,240,246,251,252,255,257,258,277,281,289,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-143,-140,-121,104,-141,-143,-143,-143,-138,-140,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-143,-143,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-24,-126,-140,-33,-36,-34,-35,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,-140,-140,-140,-79,-140,-140,-63,-63,-143,-143,-75,-140,-140,-140,-134,-135,-140,-48,-140,]),'DIV':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,161,164,167,168,169,170,171,172,173,174,175,176,179,190,192,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,218,221,222,225,228,229,232,233,234,239,240,246,251,252,255,257,258,277,281,289,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-143,-140,-121,105,-141,-143,-143,-143,-138,-140,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-143,-143,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-24,-126,-140,-33,-36,-34,-35,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,-140,-140,-140,-79,-140,-140,-63,-63,-143,-143,-75,-140,-140,-140,-134,-135,-140,-48,-140,]),'PLUS':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,161,164,167,168,169,170,171,172,173,174,175,176,179,190,192,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,218,221,222,225,228,229,232,233,234,239,240,246,251,252,255,257,258,277,281,289,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-143,-140,102,-130,-141,-143,-143,-143,-138,-140,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-143,-143,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-24,-126,-140,-33,-36,-34,-35,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,-140,-140,-140,-79,-140,-140,-63,-63,-143,-143,-75,-140,-140,-140,-134,-135,-140,-48,-140,]),'MINUS':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,161,164,167,168,169,170,171,172,173,174,175,176,179,190,192,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,218,221,222,225,228,229,232,233,234,239,240,246,251,252,255,257,258,277,281,289,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-143,-140,103,-130,-141,-143,-143,-143,-138,-140,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-143,-143,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-24,-126,-140,-33,-36,-34,-35,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,-140,-140,-140,-79,-140,-140,-63,-63,-143,-143,-75,-140,-140,-140,-134,-135,-140,-48,-140,]),'GT':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,132,133,134,135,136,137,161,164,173,174,175,176,179,190,192,197,198,199,200,209,210,211,212,213,218,221,222,225,228,229,232,233,234,239,240,246,251,252,255,257,258,277,281,289,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-143,94,-121,-130,-141,-143,-143,-143,-138,-140,-17,-18,-25,-25,-31,-134,-32,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-143,-143,-124,-124,-125,-125,-24,-126,-140,-33,-36,-34,-35,-122,-123,-131,-132,-82,-63,-140,-140,-140,-79,-140,-140,-63,-63,-143,-143,-75,-140,-140,-140,-134,-135,-140,-48,-140,]),'LT':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,132,133,134,135,136,137,161,164,173,174,175,176,179,190,192,197,198,199,200,209,210,211,212,213,218,221,222,225,228,229,232,233,234,239,240,246,251,252,255,257,258,277,281,289,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-143,95,-121,-130,-141,-143,-143,-143,-138,-140,-17,-18,-25,-25,-31,-134,-32,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-143,-143,-124,-124,-125,-125,-24,-126,-140,-33,-36,-34,-35,-122,-123,-131,-132,-82,-63,-140,-140,-140,-79,-140,-140,-63,-63,-143,-143,-75,-140,-140,-140,-134,-135,-140,-48,-140,]),'GTE':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,132,133,134,135,136,137,161,164,173,174,175,176,179,190,192,197,198,199,200,209,210,211,212,213,218,221,222,225,228,229,232,233,234,239,240,246,251,252,255,257,258,277,281,289,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-143,96,-121,-130,-141,-143,-143,-143,-138,-140,-17,-18,-25,-25,-31,-134,-32,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-143,-143,-124,-124,-125,-125,-24,-126,-140,-33,-36,-34,-35,-122,-123,-131,-132,-82,-63,-140,-140,-140,-79,-140,-140,-63,-63,-143,-143,-75,-140,-140,-140,-134,-135,-140,-48,-140,]),'LTE':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,132,133,134,135,136,137,161,164,173,174,175,176,179,190,192,197,198,199,200,209,210,211,212,213,218,221,222,225,228,229,232,233,234,239,240,246,251,252,255,257,258,277,281,289,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-143,97,-121,-130,-141,-143,-143,-143,-138,-140,-17,-18,-25,-25,-31,-134,-32,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-143,-143,-124,-124,-125,-125,-24,-126,-140,-33,-36,-34,-35,-122,-123,-131,-132,-82,-63,-140,-140,-140,-79,-140,-140,-63,-63,-143,-143,-75,-140,-140,-140,-134,-135,-140,-48,-140,]),'NE':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,132,133,134,135,136,137,161,164,173,174,175,176,179,190,192,197,198,199,200,209,210,211,212,213,218,221,222,225,228,229,232,233,234,239,240,246,251,252,255,257,258,277,281,289,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-143,98,-121,-130,-141,-143,-143,-143,-138,-140,-17,-18,-25,-25,-31,-134,-32,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-143,-143,-124,-124,-125,-125,-24,-126,-140,-33,-36,-34,-35,-122,-123,-131,-132,-82,-63,-140,-140,-140,-79,-140,-140,-63,-63,-143,-143,-75,-140,-140,-140,-134,-135,-140,-48,-140,]),'COMPARE':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,132,133,134,135,136,137,161,164,173,174,175,176,179,190,192,197,198,199,200,209,210,211,212,213,218,221,222,225,228,229,232,233,234,239,240,246,251,252,255,257,258,277,281,289,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-143,99,-121,-130,-141,-143,-143,-143,-138,-140,-17,-18,-25,-25,-31,-134,-32,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-143,-143,-124,-124,-125,-125,-24,-126,-140,-33,-36,-34,-35,-122,-123,-131,-132,-82,-63,-140,-140,-140,-79,-140,-140,-63,-63,-143,-143,-75,-140,-140,-140,-134,-135,-140,-48,-140,]),'AND':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,161,164,167,168,169,170,171,172,173,174,175,176,179,190,192,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,218,221,222,225,228,229,232,233,234,239,240,246,251,252,255,257,258,277,281,289,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-143,93,-113,-140,-121,-130,-141,-143,-143,-143,-138,-140,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-114,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-143,-143,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-24,-126,-140,-33,-36,-34,-35,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,-140,-140,-140,-79,-140,-140,-63,-63,-143,-143,-75,-140,-140,-140,-134,-135,-140,-48,-140,]),'OR':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,161,164,166,167,168,169,170,171,172,173,174,175,176,179,190,192,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,218,221,222,225,228,229,232,233,234,239,240,246,251,252,255,257,258,277,281,289,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,-143,92,-111,-113,-140,-121,-130,-141,-143,-143,-143,-138,-140,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-114,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-143,-143,-106,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-24,-126,-140,-33,-36,-34,-35,-112,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,-140,-140,-140,-79,-140,-140,-63,-63,-143,-143,-75,-140,-140,-140,-134,-135,-140,-48,-140,]),'RBRACKET':([35,36,49,50,51,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,228,246,],[-17,-24,-140,-19,-22,-140,-25,-140,-140,-23,-28,-29,-30,89,91,-103,-111,-113,-140,-121,-130,-141,-143,-143,-143,-138,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-114,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-139,197,198,199,200,-105,-106,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-33,-36,-34,-35,-104,-112,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-79,-75,]),'COMMA':([35,36,49,50,51,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,79,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,118,119,120,121,124,125,126,127,128,129,130,131,132,133,134,135,136,137,165,166,167,168,169,170,171,172,173,174,175,176,178,179,190,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,222,228,229,237,239,240,241,246,257,258,273,274,275,],[49,-24,-140,59,60,-25,-140,-140,-23,-28,-29,-30,-103,-111,-113,-140,-121,-130,-141,-143,-143,-143,-138,49,117,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-114,-143,-63,-63,-63,-63,-133,-135,-136,-137,158,159,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-139,-140,-105,-106,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-81,-24,-126,-33,-36,-34,-35,-104,-112,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,229,-140,-79,-140,255,-143,-143,-101,-75,-127,-127,-98,-99,-100,]),'TO':([35,36,49,50,51,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,120,121,124,125,126,127,128,129,130,131,132,133,134,135,136,165,166,167,168,169,170,171,172,173,174,175,176,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,228,232,233,234,246,250,251,252,260,267,268,269,282,283,],[-17,-24,-140,-19,-22,-25,-140,-140,-23,-28,-29,-30,-103,-111,-113,-140,-121,-130,-141,-143,-143,-143,-138,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-114,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-140,-139,-105,-106,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-33,-36,-34,-35,-104,-112,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,-79,-140,-63,-63,-75,-62,-140,-140,277,-59,-62,-62,-60,-61,]),'CTEI':([35,36,49,50,51,52,58,59,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,167,168,169,170,171,172,173,174,175,176,190,192,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,218,221,222,225,228,229,232,233,234,246,251,252,255,277,281,289,],[-17,-24,-140,-19,-22,65,-25,-140,-140,-23,-28,-29,-30,101,-121,-130,-141,-143,-143,-143,-138,101,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,161,164,101,101,101,101,101,101,101,101,101,101,101,101,-139,101,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-126,101,-33,-36,-34,-35,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,101,239,101,-79,101,101,-63,-63,-75,101,101,239,101,-48,101,]),'CTEF':([35,36,49,50,51,52,58,59,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,167,168,169,170,171,172,173,174,175,176,190,192,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,218,221,222,225,228,229,232,233,234,246,251,252,255,277,281,289,],[-17,-24,-140,-19,-22,74,-25,-140,-140,-23,-28,-29,-30,74,-121,-130,-141,-143,-143,-143,-138,74,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-139,74,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-126,74,-33,-36,-34,-35,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,74,240,74,-79,74,74,-63,-63,-75,74,74,240,74,-48,74,]),'CTEC':([35,36,49,50,51,52,58,59,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,167,168,169,170,171,172,173,174,175,176,190,192,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,218,221,222,225,228,229,232,233,234,246,251,252,255,277,281,289,],[-17,-24,-140,-19,-22,75,-25,-140,-140,-23,-28,-29,-30,75,-121,-130,-141,-143,-143,-143,-138,75,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-139,75,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-126,75,-33,-36,-34,-35,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,75,75,75,-79,75,75,-63,-63,-75,75,75,75,75,-48,75,]),'CTESTRING':([35,36,49,50,51,52,58,59,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,167,168,169,170,171,172,173,174,175,176,190,192,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,218,221,222,225,228,229,232,233,234,238,246,251,252,255,277,281,289,],[-17,-24,-140,-19,-22,76,-25,-140,-140,-23,-28,-29,-30,76,-121,-130,-141,-143,-143,-143,-138,76,-17,-18,-25,-25,-31,-134,-32,-63,-63,-63,-63,-63,-63,-63,-63,-143,-63,-63,-63,-63,-133,-135,-136,-137,-20,-21,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-139,76,-107,-107,-107,-107,-107,-107,-124,-124,-125,-125,-126,76,-33,-36,-34,-35,-115,-116,-117,-118,-119,-120,-122,-123,-131,-132,-82,-63,76,76,76,-79,76,76,-63,-63,256,-75,76,76,76,76,-48,76,]),'LBRACKET':([35,79,84,89,91,150,188,261,],[52,52,52,122,123,-142,52,-142,]),'TRANSPUESTA':([51,119,197,198,199,200,],[62,62,-33,-36,-34,-35,]),'INVERSA':([51,119,197,198,199,200,],[63,63,-33,-36,-34,-35,]),'DETERMINANTE':([51,119,197,198,199,200,],[64,64,-33,-36,-34,-35,]),'LCURLY':([55,180,181,244,259,262,263,276,279,296,302,],[82,215,216,-108,-87,278,-92,284,287,-110,305,]),'EQUALS':([89,91,150,188,197,198,199,200,219,220,261,],[-31,-32,-142,218,-33,-36,-34,-35,233,234,-142,]),'END':([182,],[217,]),'COMILLA':([190,222,255,256,],[-126,238,238,273,]),'FROM':([223,],[243,]),'ELSE':([291,],[296,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'addP':([4,],[5,]),'programa1':([5,],[6,]),'vars':([5,82,215,216,],[7,114,230,231,]),'programa2':([5,18,],[8,27,]),'var':([5,82,215,216,],[9,9,9,9,]),'empty':([5,12,13,19,23,33,49,52,56,59,60,70,78,80,81,82,114,117,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,141,158,159,192,215,216,221,222,225,229,232,248,249,251,252,255,277,278,284,287,289,291,305,],[10,17,20,20,36,47,36,36,85,36,36,36,36,47,47,10,142,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,179,142,36,36,36,10,10,36,36,36,179,36,142,142,36,36,36,36,142,142,142,36,297,142,]),'main_end':([5,18,],[11,11,]),'quadMain':([7,],[13,]),'main':([11,],[14,]),'var2':([12,],[16,]),'modules':([13,19,],[18,28,]),'function':([13,19,],[19,19,]),'save_fun':([15,41,43,],[22,53,54,]),'tipo':([16,46,112,113,],[23,56,56,56,]),'var1':([23,49,52,59,60,70,78,117,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,158,159,192,221,222,225,229,232,251,252,255,277,289,],[34,58,73,87,88,73,73,157,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,195,196,73,73,73,73,73,73,73,73,73,73,73,]),'guardaTipoVar':([24,25,26,],[37,38,39,]),'function1':([29,],[40,]),'function2':([30,31,32,],[42,44,45,]),'param2':([33,80,81,],[46,112,113,]),'arr':([35,79,84,188,],[50,50,118,219,]),'mat':([35,79,84,188,],[51,51,119,220,]),'addV':([48,58,83,84,87,88,157,195,196,],[57,86,115,116,120,121,194,226,227,]),'especial':([51,119,],[61,160,]),'exp':([52,78,122,123,137,192,221,222,225,229,232,251,252,255,277,289,],[66,110,162,163,178,224,235,241,245,178,250,268,269,241,285,293,]),'nexp':([52,78,122,123,124,137,192,221,222,225,229,232,251,252,255,277,289,],[67,67,67,67,165,67,67,67,67,67,67,67,67,67,67,67,67,]),'compexp':([52,78,122,123,124,125,137,192,221,222,225,229,232,251,252,255,277,289,],[68,68,68,68,68,166,68,68,68,68,68,68,68,68,68,68,68,68,]),'sumexp':([52,70,78,122,123,124,125,126,127,128,129,130,131,137,192,221,222,225,229,232,251,252,255,277,289,],[69,100,69,69,69,69,69,167,168,169,170,171,172,69,69,69,69,69,69,69,69,69,69,69,69,]),'compexp1':([52,78,122,123,124,125,137,192,221,222,225,229,232,251,252,255,277,289,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'mulexp':([52,70,78,122,123,124,125,126,127,128,129,130,131,132,133,137,192,221,222,225,229,232,251,252,255,277,289,],[71,71,71,71,71,71,71,71,71,71,71,71,71,173,174,71,71,71,71,71,71,71,71,71,71,71,71,]),'pexp':([52,70,78,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,192,221,222,225,229,232,251,252,255,277,289,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,175,176,72,72,72,72,72,72,72,72,72,72,72,72,]),'llamada':([52,70,78,114,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,141,192,221,222,225,229,232,248,249,251,252,255,277,278,284,287,289,305,],[77,77,77,144,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,144,77,77,77,77,77,77,144,144,77,77,77,77,144,144,144,77,144,]),'param1':([56,],[83,]),'saveCTE':([65,74,75,76,101,161,164,239,240,],[90,107,108,109,90,90,90,257,258,]),'saveId':([73,],[106,]),'era_call':([79,150,],[111,111,]),'addOperadorName':([92,93,94,95,96,97,98,99,102,103,104,105,218,233,234,],[124,125,126,127,128,129,130,131,132,133,134,135,232,251,252,]),'statement':([114,141,248,249,278,284,287,305,],[140,183,265,266,286,290,292,307,]),'statement1':([114,141,248,249,278,284,287,305,],[141,141,141,141,141,141,141,141,]),'asignacion':([114,141,243,248,249,278,284,287,305,],[143,143,260,143,143,143,143,143,143,]),'lectura':([114,141,248,249,278,284,287,305,],[145,145,145,145,145,145,145,145,]),'escritura':([114,141,248,249,278,284,287,305,],[146,146,146,146,146,146,146,146,]),'for':([114,141,248,249,278,284,287,305,],[147,147,147,147,147,147,147,147,]),'if':([114,141,248,249,278,284,287,305,],[148,148,148,148,148,148,148,148,]),'while':([114,141,248,249,278,284,287,305,],[149,149,149,149,149,149,149,149,]),'addParam':([115,],[156,]),'aux_exp':([137,229,],[177,247,]),'saveId2':([150,261,],[188,188,]),'operatorRead':([151,],[189,]),'for_op':([153,],[191,]),'while_op':([155,],[193,]),'genera_quad_or':([165,],[201,]),'genera_quad_and':([166,],[202,]),'compare_quad':([167,168,169,170,171,172,],[203,204,205,206,207,208,]),'genera_sum_quad':([173,174,],[209,210,]),'genera_mul_quad':([175,176,],[211,212,]),'quad_param':([178,247,],[214,264,]),'operadorPrint':([190,],[222,]),'gosub_quad':([213,],[228,]),'escritura1':([222,],[236,]),'escritura2':([222,255,],[237,272,]),'for1':([223,],[242,]),'llena_endproc':([228,],[246,]),'fun_goto':([230,231,],[248,249,]),'operatorReadQuad':([235,],[253,]),'operatorPrintQuad':([236,257,258,],[254,274,275,]),'if_quad':([244,],[262,]),'genera_quad_asignacion':([250,268,269,],[267,282,283,]),'for_quad':([259,],[276,]),'while_quad':([263,],[279,]),'end_func':([280,306,],[288,308,]),'operadorReturn':([281,],[289,]),'else':([291,],[295,]),'quad_return':([293,],[299,]),'for_end':([294,],[300,]),'end_if':([295,],[301,]),'else_quad':([296,],[302,]),'loop_end':([298,],[303,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMICOLON addP programa1','programa',5,'p_programa','main.py',156),
  ('addP -> <empty>','addP',0,'p_addP','main.py',166),
  ('programa1 -> vars quadMain modules programa2','programa1',4,'p_programa1','main.py',177),
  ('programa1 -> vars quadMain modules','programa1',3,'p_programa1','main.py',178),
  ('programa1 -> programa2','programa1',1,'p_programa1','main.py',179),
  ('programa2 -> main_end main','programa2',2,'p_programa2','main.py',184),
  ('main -> MAIN save_fun LPAREN param2 RPAREN LCURLY vars statement RCURLY END','main',10,'p_main','main.py',189),
  ('quadMain -> <empty>','quadMain',0,'p_quadMain','main.py',204),
  ('main_end -> <empty>','main_end',0,'p_main_end','main.py',213),
  ('tipo -> INT guardaTipoVar','tipo',2,'p_tipo','main.py',223),
  ('tipo -> FLOAT guardaTipoVar','tipo',2,'p_tipo','main.py',224),
  ('tipo -> CHAR guardaTipoVar','tipo',2,'p_tipo','main.py',225),
  ('guardaTipoVar -> <empty>','guardaTipoVar',0,'p_guardaTipoVar','main.py',230),
  ('vars -> var','vars',1,'p_vars','main.py',237),
  ('vars -> empty','vars',1,'p_vars','main.py',238),
  ('var -> VAR var2','var',2,'p_var','main.py',243),
  ('var1 -> ID','var1',1,'p_var1','main.py',248),
  ('var1 -> ID COMMA var1 addV','var1',4,'p_var1','main.py',249),
  ('var1 -> ID arr','var1',2,'p_var1','main.py',250),
  ('var1 -> ID arr COMMA var1 addV','var1',5,'p_var1','main.py',251),
  ('var1 -> ID mat COMMA var1 addV','var1',5,'p_var1','main.py',252),
  ('var1 -> ID mat','var1',2,'p_var1','main.py',253),
  ('var1 -> ID mat especial','var1',3,'p_var1','main.py',254),
  ('var1 -> empty','var1',1,'p_var1','main.py',255),
  ('addV -> <empty>','addV',0,'p_addV','main.py',267),
  ('var2 -> var2 tipo var1 SEMICOLON addV','var2',5,'p_var2','main.py',284),
  ('var2 -> empty','var2',1,'p_var2','main.py',285),
  ('especial -> TRANSPUESTA','especial',1,'p_especial','main.py',291),
  ('especial -> INVERSA','especial',1,'p_especial','main.py',292),
  ('especial -> DETERMINANTE','especial',1,'p_especial','main.py',293),
  ('arr -> LBRACKET CTEI RBRACKET','arr',3,'p_arr','main.py',298),
  ('arr -> LBRACKET exp RBRACKET','arr',3,'p_arr','main.py',299),
  ('mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET','mat',6,'p_mat','main.py',305),
  ('mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','mat',6,'p_mat','main.py',306),
  ('mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET','mat',6,'p_mat','main.py',307),
  ('mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET','mat',6,'p_mat','main.py',308),
  ('modules -> function modules','modules',2,'p_modules','main.py',313),
  ('modules -> empty','modules',1,'p_modules','main.py',314),
  ('save_fun -> <empty>','save_fun',0,'p_save_fun','main.py',319),
  ('function -> FUN VOID function1','function',3,'p_function','main.py',338),
  ('function -> FUN INT function2','function',3,'p_function','main.py',339),
  ('function -> FUN CHAR function2','function',3,'p_function','main.py',340),
  ('function -> FUN FLOAT function2','function',3,'p_function','main.py',341),
  ('function1 -> ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars fun_goto statement RCURLY end_func','function1',12,'p_function1','main.py',346),
  ('function2 -> ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars fun_goto statement RETURN operadorReturn exp quad_return SEMICOLON RCURLY end_func','function2',17,'p_function2','main.py',351),
  ('fun_goto -> <empty>','fun_goto',0,'p_fun_goto','main.py',355),
  ('end_func -> <empty>','end_func',0,'p_end_func','main.py',363),
  ('operadorReturn -> <empty>','operadorReturn',0,'p_operadorReturn','main.py',375),
  ('quad_return -> <empty>','quad_return',0,'p_quad_return','main.py',382),
  ('statement -> statement1 statement','statement',2,'p_statement','main.py',404),
  ('statement -> empty','statement',1,'p_statement','main.py',405),
  ('statement1 -> asignacion SEMICOLON','statement1',2,'p_statement1','main.py',411),
  ('statement1 -> llamada SEMICOLON','statement1',2,'p_statement1','main.py',412),
  ('statement1 -> lectura SEMICOLON','statement1',2,'p_statement1','main.py',413),
  ('statement1 -> escritura SEMICOLON','statement1',2,'p_statement1','main.py',414),
  ('statement1 -> for','statement1',1,'p_statement1','main.py',415),
  ('statement1 -> if','statement1',1,'p_statement1','main.py',416),
  ('statement1 -> while','statement1',1,'p_statement1','main.py',417),
  ('asignacion -> ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion','asignacion',6,'p_asignacion','main.py',422),
  ('asignacion -> ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion','asignacion',7,'p_asignacion','main.py',423),
  ('asignacion -> ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion','asignacion',7,'p_asignacion','main.py',424),
  ('genera_quad_asignacion -> <empty>','genera_quad_asignacion',0,'p_genera_quad_asignacion','main.py',428),
  ('addOperadorName -> <empty>','addOperadorName',0,'p_addOperadorName','main.py',452),
  ('param1 -> ID addV','param1',2,'p_param1','main.py',472),
  ('param1 -> ID COMMA var1 addV','param1',4,'p_param1','main.py',473),
  ('param1 -> ID arr','param1',2,'p_param1','main.py',474),
  ('param1 -> ID arr COMMA var1 addV','param1',5,'p_param1','main.py',475),
  ('param1 -> ID mat COMMA var1 addV','param1',5,'p_param1','main.py',476),
  ('param1 -> ID mat','param1',2,'p_param1','main.py',477),
  ('param1 -> ID mat especial','param1',3,'p_param1','main.py',478),
  ('param1 -> empty','param1',1,'p_param1','main.py',479),
  ('addParam -> <empty>','addParam',0,'p_addParam','main.py',483),
  ('param2 -> param2 tipo param1 addV addParam','param2',5,'p_param2','main.py',490),
  ('param2 -> empty','param2',1,'p_param2','main.py',491),
  ('llamada -> ID era_call LPAREN aux_exp RPAREN gosub_quad llena_endproc','llamada',7,'p_llamada','main.py',502),
  ('aux_exp -> exp','aux_exp',1,'p_aux_exp','main.py',511),
  ('aux_exp -> exp quad_param COMMA aux_exp quad_param','aux_exp',5,'p_aux_exp','main.py',512),
  ('aux_exp -> empty','aux_exp',1,'p_aux_exp','main.py',513),
  ('llena_endproc -> <empty>','llena_endproc',0,'p_llena_endproc','main.py',518),
  ('era_call -> <empty>','era_call',0,'p_era_call','main.py',524),
  ('quad_param -> <empty>','quad_param',0,'p_quad_param','main.py',535),
  ('gosub_quad -> <empty>','gosub_quad',0,'p_gosub_quad','main.py',561),
  ('if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else end_if','if',10,'p_if','main.py',580),
  ('else -> ELSE else_quad LCURLY statement RCURLY','else',5,'p_else','main.py',585),
  ('else -> empty','else',1,'p_else','main.py',586),
  ('for_op -> <empty>','for_op',0,'p_for_op','main.py',590),
  ('for_quad -> <empty>','for_quad',0,'p_for_quad','main.py',598),
  ('for -> FOR for_op LPAREN for1 RPAREN for_quad LCURLY statement RCURLY for_end','for',10,'p_for','main.py',614),
  ('for1 -> FROM asignacion TO exp','for1',4,'p_for1','main.py',618),
  ('loop_end -> <empty>','loop_end',0,'p_loop_end','main.py',623),
  ('for_end -> <empty>','for_end',0,'p_for_end','main.py',632),
  ('while_quad -> <empty>','while_quad',0,'p_while_quad','main.py',642),
  ('while_op -> <empty>','while_op',0,'p_while_op','main.py',658),
  ('while -> WHILE while_op LPAREN exp RPAREN while_quad LCURLY statement RCURLY loop_end','while',10,'p_while','main.py',667),
  ('escritura -> PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN','escritura',6,'p_escritura','main.py',672),
  ('escritura1 -> escritura2 COMMA escritura2','escritura1',3,'p_escritura1','main.py',676),
  ('escritura1 -> escritura2','escritura1',1,'p_escritura1','main.py',677),
  ('escritura2 -> COMILLA CTESTRING COMILLA','escritura2',3,'p_escritura2','main.py',681),
  ('escritura2 -> CTEI saveCTE operatorPrintQuad','escritura2',3,'p_escritura2','main.py',682),
  ('escritura2 -> CTEF saveCTE operatorPrintQuad','escritura2',3,'p_escritura2','main.py',683),
  ('escritura2 -> exp','escritura2',1,'p_escritura2','main.py',684),
  ('lectura -> READ operatorRead LPAREN exp operatorReadQuad RPAREN','lectura',6,'p_lectura','main.py',689),
  ('exp -> nexp','exp',1,'p_exp','main.py',695),
  ('exp -> nexp OR addOperadorName nexp genera_quad_or','exp',5,'p_exp','main.py',696),
  ('genera_quad_or -> <empty>','genera_quad_or',0,'p_genera_quad_or','main.py',743),
  ('genera_quad_and -> <empty>','genera_quad_and',0,'p_genera_quad_and','main.py',751),
  ('compare_quad -> <empty>','compare_quad',0,'p_compare_quad','main.py',759),
  ('if_quad -> <empty>','if_quad',0,'p_if_quad','main.py',768),
  ('end_if -> <empty>','end_if',0,'p_end_if','main.py',784),
  ('else_quad -> <empty>','else_quad',0,'p_else_quad','main.py',791),
  ('nexp -> compexp','nexp',1,'p_nexp','main.py',809),
  ('nexp -> compexp AND addOperadorName compexp genera_quad_and','nexp',5,'p_nexp','main.py',810),
  ('compexp -> sumexp','compexp',1,'p_compexp','main.py',816),
  ('compexp -> compexp1 sumexp','compexp',2,'p_compexp','main.py',817),
  ('compexp1 -> sumexp GT addOperadorName sumexp compare_quad','compexp1',5,'p_compexp1','main.py',823),
  ('compexp1 -> sumexp LT addOperadorName sumexp compare_quad','compexp1',5,'p_compexp1','main.py',824),
  ('compexp1 -> sumexp GTE addOperadorName sumexp compare_quad','compexp1',5,'p_compexp1','main.py',825),
  ('compexp1 -> sumexp LTE addOperadorName sumexp compare_quad','compexp1',5,'p_compexp1','main.py',826),
  ('compexp1 -> sumexp NE addOperadorName sumexp compare_quad','compexp1',5,'p_compexp1','main.py',827),
  ('compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad','compexp1',5,'p_compexp1','main.py',828),
  ('sumexp -> mulexp','sumexp',1,'p_sumexp','main.py',834),
  ('sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad','sumexp',5,'p_sumexp','main.py',835),
  ('sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad','sumexp',5,'p_sumexp','main.py',836),
  ('genera_sum_quad -> <empty>','genera_sum_quad',0,'p_genera_sum_quad','main.py',840),
  ('genera_mul_quad -> <empty>','genera_mul_quad',0,'p_genera_quad_mul','main.py',848),
  ('operadorPrint -> <empty>','operadorPrint',0,'p_operadorPrint','main.py',857),
  ('operatorPrintQuad -> <empty>','operatorPrintQuad',0,'p_operatorPrintQuad','main.py',864),
  ('operatorRead -> <empty>','operatorRead',0,'p_operatorRead','main.py',878),
  ('operatorReadQuad -> <empty>','operatorReadQuad',0,'p_operatorReadQuad','main.py',883),
  ('mulexp -> pexp','mulexp',1,'p_mulexp','main.py',897),
  ('mulexp -> pexp MUL addOperadorName pexp genera_mul_quad','mulexp',5,'p_mulexp','main.py',898),
  ('mulexp -> pexp DIV addOperadorName pexp genera_mul_quad','mulexp',5,'p_mulexp','main.py',899),
  ('pexp -> var1 saveId','pexp',2,'p_pexp','main.py',905),
  ('pexp -> CTEI saveCTE','pexp',2,'p_pexp','main.py',906),
  ('pexp -> CTEF saveCTE','pexp',2,'p_pexp','main.py',907),
  ('pexp -> CTEC saveCTE','pexp',2,'p_pexp','main.py',908),
  ('pexp -> CTESTRING saveCTE','pexp',2,'p_pexp','main.py',909),
  ('pexp -> llamada','pexp',1,'p_pexp','main.py',910),
  ('pexp -> LPAREN exp RPAREN','pexp',3,'p_pexp','main.py',911),
  ('empty -> <empty>','empty',0,'p_empty','main.py',917),
  ('saveId -> <empty>','saveId',0,'p_saveId','main.py',923),
  ('saveId2 -> <empty>','saveId2',0,'p_saveId2','main.py',945),
  ('saveCTE -> <empty>','saveCTE',0,'p_saveCTE','main.py',964),
]
