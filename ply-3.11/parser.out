Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMILLA

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON addP programa1
Rule 2     addP -> <empty>
Rule 3     programa1 -> vars modules programa2
Rule 4     programa1 -> vars modules
Rule 5     programa1 -> programa2
Rule 6     programa2 -> main
Rule 7     main -> MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END
Rule 8     tipo -> INT guardaTipoVar
Rule 9     tipo -> FLOAT guardaTipoVar
Rule 10    tipo -> CHAR guardaTipoVar
Rule 11    guardaTipoVar -> <empty>
Rule 12    vars -> var
Rule 13    vars -> empty
Rule 14    var -> VAR var2
Rule 15    var1 -> ID
Rule 16    var1 -> ID COMMA var1 addV saveId
Rule 17    var1 -> ID arr
Rule 18    var1 -> ID arr COMMA var1 addV saveId
Rule 19    var1 -> ID mat COMMA var1 addV saveId
Rule 20    var1 -> ID mat
Rule 21    var1 -> ID mat especial
Rule 22    var1 -> empty
Rule 23    addV -> <empty>
Rule 24    var2 -> var2 tipo var1 SEMICOLON addV saveId
Rule 25    var2 -> empty
Rule 26    especial -> TRANSPUESTA
Rule 27    especial -> INVERSA
Rule 28    especial -> DETERMINANTE
Rule 29    arr -> LBRACKET CTEI RBRACKET
Rule 30    arr -> LBRACKET exp RBRACKET
Rule 31    mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 32    mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 33    mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
Rule 34    mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET
Rule 35    modules -> function modules
Rule 36    modules -> empty
Rule 37    save_fun -> <empty>
Rule 38    function -> FUN VOID function1
Rule 39    function -> FUN INT function2
Rule 40    function -> FUN CHAR function2
Rule 41    function -> FUN FLOAT function2
Rule 42    function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY
Rule 43    function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY
Rule 44    statement -> statement1 statement
Rule 45    statement -> empty
Rule 46    statement1 -> asignacion SEMICOLON
Rule 47    statement1 -> llamada SEMICOLON
Rule 48    statement1 -> lectura SEMICOLON
Rule 49    statement1 -> escritura SEMICOLON
Rule 50    statement1 -> for
Rule 51    statement1 -> if
Rule 52    statement1 -> while
Rule 53    asignacion -> ID EQUALS exp
Rule 54    asignacion -> ID arr EQUALS exp
Rule 55    asignacion -> ID mat EQUALS exp
Rule 56    param -> tipo param1
Rule 57    param -> empty
Rule 58    param1 -> ID
Rule 59    param1 -> ID COMMA param1
Rule 60    param1 -> empty
Rule 61    llamada -> ID LPAREN exp RPAREN
Rule 62    if -> IF LPAREN exp RPAREN LCURLY statement RCURLY
Rule 63    if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else
Rule 64    else -> ELSE LCURLY statement RCURLY
Rule 65    else -> empty
Rule 66    for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY
Rule 67    for1 -> FROM asignacion TO exp
Rule 68    while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY
Rule 69    escritura -> PRINT LPAREN escritura1 RPAREN
Rule 70    escritura1 -> escritura2 COMMA escritura2
Rule 71    escritura1 -> escritura2
Rule 72    escritura2 -> CTESTRING
Rule 73    escritura2 -> CTEI
Rule 74    escritura2 -> CTEF
Rule 75    escritura2 -> exp
Rule 76    lectura -> READ LPAREN var1 RPAREN
Rule 77    exp -> nexp
Rule 78    exp -> nexp OR saveOperator nexp
Rule 79    nexp -> compexp
Rule 80    nexp -> compexp AND saveOperator compexp
Rule 81    compexp -> sumexp
Rule 82    compexp -> compexp1 sumexp
Rule 83    compexp1 -> sumexp GT saveOperator sumexp
Rule 84    compexp1 -> sumexp LT saveOperator sumexp
Rule 85    compexp1 -> sumexp GTE saveOperator sumexp
Rule 86    compexp1 -> sumexp LTE saveOperator sumexp
Rule 87    compexp1 -> sumexp NE saveOperator sumexp
Rule 88    sumexp -> mulexp
Rule 89    sumexp -> mulexp PLUS saveOperator mulexp
Rule 90    sumexp -> mulexp MINUS saveOperator mulexp
Rule 91    mulexp -> pexp
Rule 92    mulexp -> pexp MUL saveOperator pexp
Rule 93    mulexp -> pexp DIV saveOperator pexp
Rule 94    pexp -> var1
Rule 95    pexp -> CTEI
Rule 96    pexp -> CTEF
Rule 97    pexp -> CTEC
Rule 98    pexp -> llamada
Rule 99    pexp -> LPAREN exp RPAREN
Rule 100   empty -> <empty>
Rule 101   saveId -> <empty>
Rule 102   saveOperator -> <empty>

Terminals, with rules where they appear

AND                  : 80
CHAR                 : 10 40
COMILLA              : 
COMMA                : 16 18 19 59 70
CTEC                 : 97
CTEF                 : 74 96
CTEI                 : 29 31 31 33 34 73 95
CTESTRING            : 72
DETERMINANTE         : 28
DIV                  : 93
ELSE                 : 64
END                  : 7
EQUALS               : 53 54 55
FLOAT                : 9 41
FOR                  : 66
FROM                 : 67
FUN                  : 38 39 40 41
GT                   : 83
GTE                  : 85
ID                   : 1 15 16 17 18 19 20 21 42 43 53 54 55 58 59 61
IF                   : 62 63
INT                  : 8 39
INVERSA              : 27
LBRACKET             : 29 30 31 31 32 32 33 33 34 34
LCURLY               : 7 42 43 62 63 64 66 68
LPAREN               : 7 42 43 61 62 63 66 68 69 76 99
LT                   : 84
LTE                  : 86
MAIN                 : 7
MINUS                : 90
MUL                  : 92
NE                   : 87
OR                   : 78
PLUS                 : 89
PRINT                : 69
PROGRAM              : 1
RBRACKET             : 29 30 31 31 32 32 33 33 34 34
RCURLY               : 7 42 43 62 63 64 66 68
READ                 : 76
RETURN               : 43
RPAREN               : 7 42 43 61 62 63 66 68 69 76 99
SEMICOLON            : 1 24 42 43 43 46 47 48 49
TO                   : 67
TRANSPUESTA          : 26
VAR                  : 14
VOID                 : 38
WHILE                : 68
error                : 

Nonterminals, with rules where they appear

addP                 : 1
addV                 : 16 18 19 24
arr                  : 17 18 54
asignacion           : 46 67
compexp              : 79 80 80
compexp1             : 82
else                 : 63
empty                : 13 22 25 36 45 57 60 65
escritura            : 49
escritura1           : 69
escritura2           : 70 70 71
especial             : 21
exp                  : 30 32 32 33 34 43 53 54 55 61 62 63 67 68 75 99
for                  : 50
for1                 : 66
function             : 35
function1            : 38
function2            : 39 40 41
guardaTipoVar        : 8 9 10
if                   : 51
lectura              : 48
llamada              : 47 98
main                 : 6
mat                  : 19 20 21 55
modules              : 3 4 35
mulexp               : 88 89 89 90 90
nexp                 : 77 78 78
param                : 7 42 43
param1               : 56 59
pexp                 : 91 92 92 93 93
programa             : 0
programa1            : 1
programa2            : 3 5
saveId               : 16 18 19 24
saveOperator         : 78 80 83 84 85 86 87 89 90 92 93
save_fun             : 42 43
statement            : 7 42 43 44 62 63 64 66 68
statement1           : 44
sumexp               : 81 82 83 83 84 84 85 85 86 86 87 87
tipo                 : 24 56
var                  : 12
var1                 : 16 18 19 24 76 94
var2                 : 14 24
vars                 : 3 4 7 42 43
while                : 52

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON addP programa1

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON addP programa1

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON addP programa1

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . addP programa1
    (2) addP -> .

    VAR             reduce using rule 2 (addP -> .)
    MAIN            reduce using rule 2 (addP -> .)
    FUN             reduce using rule 2 (addP -> .)
    $end            reduce using rule 2 (addP -> .)

    addP                           shift and go to state 5

state 5

    (1) programa -> PROGRAM ID SEMICOLON addP . programa1
    (3) programa1 -> . vars modules programa2
    (4) programa1 -> . vars modules
    (5) programa1 -> . programa2
    (12) vars -> . var
    (13) vars -> . empty
    (6) programa2 -> . main
    (14) var -> . VAR var2
    (100) empty -> .
    (7) main -> . MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END

  ! shift/reduce conflict for MAIN resolved as shift
    VAR             shift and go to state 12
    FUN             reduce using rule 100 (empty -> .)
    $end            reduce using rule 100 (empty -> .)
    MAIN            shift and go to state 13

  ! MAIN            [ reduce using rule 100 (empty -> .) ]

    programa1                      shift and go to state 6
    vars                           shift and go to state 7
    programa2                      shift and go to state 8
    var                            shift and go to state 9
    empty                          shift and go to state 10
    main                           shift and go to state 11

state 6

    (1) programa -> PROGRAM ID SEMICOLON addP programa1 .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON addP programa1 .)


state 7

    (3) programa1 -> vars . modules programa2
    (4) programa1 -> vars . modules
    (35) modules -> . function modules
    (36) modules -> . empty
    (38) function -> . FUN VOID function1
    (39) function -> . FUN INT function2
    (40) function -> . FUN CHAR function2
    (41) function -> . FUN FLOAT function2
    (100) empty -> .

    FUN             shift and go to state 17
    MAIN            reduce using rule 100 (empty -> .)
    $end            reduce using rule 100 (empty -> .)

    modules                        shift and go to state 14
    function                       shift and go to state 15
    empty                          shift and go to state 16

state 8

    (5) programa1 -> programa2 .

    $end            reduce using rule 5 (programa1 -> programa2 .)


state 9

    (12) vars -> var .

    FUN             reduce using rule 12 (vars -> var .)
    MAIN            reduce using rule 12 (vars -> var .)
    $end            reduce using rule 12 (vars -> var .)
    ID              reduce using rule 12 (vars -> var .)
    READ            reduce using rule 12 (vars -> var .)
    PRINT           reduce using rule 12 (vars -> var .)
    FOR             reduce using rule 12 (vars -> var .)
    IF              reduce using rule 12 (vars -> var .)
    WHILE           reduce using rule 12 (vars -> var .)
    RCURLY          reduce using rule 12 (vars -> var .)
    RETURN          reduce using rule 12 (vars -> var .)


state 10

    (13) vars -> empty .

    FUN             reduce using rule 13 (vars -> empty .)
    MAIN            reduce using rule 13 (vars -> empty .)
    $end            reduce using rule 13 (vars -> empty .)
    ID              reduce using rule 13 (vars -> empty .)
    READ            reduce using rule 13 (vars -> empty .)
    PRINT           reduce using rule 13 (vars -> empty .)
    FOR             reduce using rule 13 (vars -> empty .)
    IF              reduce using rule 13 (vars -> empty .)
    WHILE           reduce using rule 13 (vars -> empty .)
    RCURLY          reduce using rule 13 (vars -> empty .)
    RETURN          reduce using rule 13 (vars -> empty .)


state 11

    (6) programa2 -> main .

    $end            reduce using rule 6 (programa2 -> main .)


state 12

    (14) var -> VAR . var2
    (24) var2 -> . var2 tipo var1 SEMICOLON addV saveId
    (25) var2 -> . empty
    (100) empty -> .

    INT             reduce using rule 100 (empty -> .)
    FLOAT           reduce using rule 100 (empty -> .)
    CHAR            reduce using rule 100 (empty -> .)
    FUN             reduce using rule 100 (empty -> .)
    MAIN            reduce using rule 100 (empty -> .)
    $end            reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    READ            reduce using rule 100 (empty -> .)
    PRINT           reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)

    var2                           shift and go to state 18
    empty                          shift and go to state 19

state 13

    (7) main -> MAIN . LPAREN param RPAREN LCURLY vars statement RCURLY END

    LPAREN          shift and go to state 20


state 14

    (3) programa1 -> vars modules . programa2
    (4) programa1 -> vars modules .
    (6) programa2 -> . main
    (7) main -> . MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END

    $end            reduce using rule 4 (programa1 -> vars modules .)
    MAIN            shift and go to state 13

    programa2                      shift and go to state 21
    main                           shift and go to state 11

state 15

    (35) modules -> function . modules
    (35) modules -> . function modules
    (36) modules -> . empty
    (38) function -> . FUN VOID function1
    (39) function -> . FUN INT function2
    (40) function -> . FUN CHAR function2
    (41) function -> . FUN FLOAT function2
    (100) empty -> .

    FUN             shift and go to state 17
    MAIN            reduce using rule 100 (empty -> .)
    $end            reduce using rule 100 (empty -> .)

    function                       shift and go to state 15
    modules                        shift and go to state 22
    empty                          shift and go to state 16

state 16

    (36) modules -> empty .

    MAIN            reduce using rule 36 (modules -> empty .)
    $end            reduce using rule 36 (modules -> empty .)


state 17

    (38) function -> FUN . VOID function1
    (39) function -> FUN . INT function2
    (40) function -> FUN . CHAR function2
    (41) function -> FUN . FLOAT function2

    VOID            shift and go to state 23
    INT             shift and go to state 24
    CHAR            shift and go to state 25
    FLOAT           shift and go to state 26


state 18

    (14) var -> VAR var2 .
    (24) var2 -> var2 . tipo var1 SEMICOLON addV saveId
    (8) tipo -> . INT guardaTipoVar
    (9) tipo -> . FLOAT guardaTipoVar
    (10) tipo -> . CHAR guardaTipoVar

    FUN             reduce using rule 14 (var -> VAR var2 .)
    MAIN            reduce using rule 14 (var -> VAR var2 .)
    $end            reduce using rule 14 (var -> VAR var2 .)
    ID              reduce using rule 14 (var -> VAR var2 .)
    READ            reduce using rule 14 (var -> VAR var2 .)
    PRINT           reduce using rule 14 (var -> VAR var2 .)
    FOR             reduce using rule 14 (var -> VAR var2 .)
    IF              reduce using rule 14 (var -> VAR var2 .)
    WHILE           reduce using rule 14 (var -> VAR var2 .)
    RCURLY          reduce using rule 14 (var -> VAR var2 .)
    RETURN          reduce using rule 14 (var -> VAR var2 .)
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    tipo                           shift and go to state 27

state 19

    (25) var2 -> empty .

    INT             reduce using rule 25 (var2 -> empty .)
    FLOAT           reduce using rule 25 (var2 -> empty .)
    CHAR            reduce using rule 25 (var2 -> empty .)
    FUN             reduce using rule 25 (var2 -> empty .)
    MAIN            reduce using rule 25 (var2 -> empty .)
    $end            reduce using rule 25 (var2 -> empty .)
    ID              reduce using rule 25 (var2 -> empty .)
    READ            reduce using rule 25 (var2 -> empty .)
    PRINT           reduce using rule 25 (var2 -> empty .)
    FOR             reduce using rule 25 (var2 -> empty .)
    IF              reduce using rule 25 (var2 -> empty .)
    WHILE           reduce using rule 25 (var2 -> empty .)
    RCURLY          reduce using rule 25 (var2 -> empty .)
    RETURN          reduce using rule 25 (var2 -> empty .)


state 20

    (7) main -> MAIN LPAREN . param RPAREN LCURLY vars statement RCURLY END
    (56) param -> . tipo param1
    (57) param -> . empty
    (8) tipo -> . INT guardaTipoVar
    (9) tipo -> . FLOAT guardaTipoVar
    (10) tipo -> . CHAR guardaTipoVar
    (100) empty -> .

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    RPAREN          reduce using rule 100 (empty -> .)

    param                          shift and go to state 31
    tipo                           shift and go to state 32
    empty                          shift and go to state 33

state 21

    (3) programa1 -> vars modules programa2 .

    $end            reduce using rule 3 (programa1 -> vars modules programa2 .)


state 22

    (35) modules -> function modules .

    MAIN            reduce using rule 35 (modules -> function modules .)
    $end            reduce using rule 35 (modules -> function modules .)


state 23

    (38) function -> FUN VOID . function1
    (42) function1 -> . ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY

    ID              shift and go to state 35

    function1                      shift and go to state 34

state 24

    (39) function -> FUN INT . function2
    (43) function2 -> . ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    ID              shift and go to state 37

    function2                      shift and go to state 36

state 25

    (40) function -> FUN CHAR . function2
    (43) function2 -> . ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    ID              shift and go to state 37

    function2                      shift and go to state 38

state 26

    (41) function -> FUN FLOAT . function2
    (43) function2 -> . ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    ID              shift and go to state 37

    function2                      shift and go to state 39

state 27

    (24) var2 -> var2 tipo . var1 SEMICOLON addV saveId
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (100) empty -> .

    ID              shift and go to state 41
    SEMICOLON       reduce using rule 100 (empty -> .)

    var1                           shift and go to state 40
    empty                          shift and go to state 42

state 28

    (8) tipo -> INT . guardaTipoVar
    (11) guardaTipoVar -> .

    ID              reduce using rule 11 (guardaTipoVar -> .)
    SEMICOLON       reduce using rule 11 (guardaTipoVar -> .)
    RPAREN          reduce using rule 11 (guardaTipoVar -> .)

    guardaTipoVar                  shift and go to state 43

state 29

    (9) tipo -> FLOAT . guardaTipoVar
    (11) guardaTipoVar -> .

    ID              reduce using rule 11 (guardaTipoVar -> .)
    SEMICOLON       reduce using rule 11 (guardaTipoVar -> .)
    RPAREN          reduce using rule 11 (guardaTipoVar -> .)

    guardaTipoVar                  shift and go to state 44

state 30

    (10) tipo -> CHAR . guardaTipoVar
    (11) guardaTipoVar -> .

    ID              reduce using rule 11 (guardaTipoVar -> .)
    SEMICOLON       reduce using rule 11 (guardaTipoVar -> .)
    RPAREN          reduce using rule 11 (guardaTipoVar -> .)

    guardaTipoVar                  shift and go to state 45

state 31

    (7) main -> MAIN LPAREN param . RPAREN LCURLY vars statement RCURLY END

    RPAREN          shift and go to state 46


state 32

    (56) param -> tipo . param1
    (58) param1 -> . ID
    (59) param1 -> . ID COMMA param1
    (60) param1 -> . empty
    (100) empty -> .

    ID              shift and go to state 48
    RPAREN          reduce using rule 100 (empty -> .)

    param1                         shift and go to state 47
    empty                          shift and go to state 49

state 33

    (57) param -> empty .

    RPAREN          reduce using rule 57 (param -> empty .)


state 34

    (38) function -> FUN VOID function1 .

    FUN             reduce using rule 38 (function -> FUN VOID function1 .)
    MAIN            reduce using rule 38 (function -> FUN VOID function1 .)
    $end            reduce using rule 38 (function -> FUN VOID function1 .)


state 35

    (42) function1 -> ID . save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY
    (37) save_fun -> .

    LPAREN          reduce using rule 37 (save_fun -> .)

    save_fun                       shift and go to state 50

state 36

    (39) function -> FUN INT function2 .

    FUN             reduce using rule 39 (function -> FUN INT function2 .)
    MAIN            reduce using rule 39 (function -> FUN INT function2 .)
    $end            reduce using rule 39 (function -> FUN INT function2 .)


state 37

    (43) function2 -> ID . save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY
    (37) save_fun -> .

    LPAREN          reduce using rule 37 (save_fun -> .)

    save_fun                       shift and go to state 51

state 38

    (40) function -> FUN CHAR function2 .

    FUN             reduce using rule 40 (function -> FUN CHAR function2 .)
    MAIN            reduce using rule 40 (function -> FUN CHAR function2 .)
    $end            reduce using rule 40 (function -> FUN CHAR function2 .)


state 39

    (41) function -> FUN FLOAT function2 .

    FUN             reduce using rule 41 (function -> FUN FLOAT function2 .)
    MAIN            reduce using rule 41 (function -> FUN FLOAT function2 .)
    $end            reduce using rule 41 (function -> FUN FLOAT function2 .)


state 40

    (24) var2 -> var2 tipo var1 . SEMICOLON addV saveId

    SEMICOLON       shift and go to state 52


state 41

    (15) var1 -> ID .
    (16) var1 -> ID . COMMA var1 addV saveId
    (17) var1 -> ID . arr
    (18) var1 -> ID . arr COMMA var1 addV saveId
    (19) var1 -> ID . mat COMMA var1 addV saveId
    (20) var1 -> ID . mat
    (21) var1 -> ID . mat especial
    (29) arr -> . LBRACKET CTEI RBRACKET
    (30) arr -> . LBRACKET exp RBRACKET
    (31) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 15 (var1 -> ID .)
    MUL             reduce using rule 15 (var1 -> ID .)
    DIV             reduce using rule 15 (var1 -> ID .)
    PLUS            reduce using rule 15 (var1 -> ID .)
    MINUS           reduce using rule 15 (var1 -> ID .)
    GT              reduce using rule 15 (var1 -> ID .)
    LT              reduce using rule 15 (var1 -> ID .)
    GTE             reduce using rule 15 (var1 -> ID .)
    LTE             reduce using rule 15 (var1 -> ID .)
    NE              reduce using rule 15 (var1 -> ID .)
    AND             reduce using rule 15 (var1 -> ID .)
    OR              reduce using rule 15 (var1 -> ID .)
    RBRACKET        reduce using rule 15 (var1 -> ID .)
    RPAREN          reduce using rule 15 (var1 -> ID .)
    TO              reduce using rule 15 (var1 -> ID .)
    CTEI            reduce using rule 15 (var1 -> ID .)
    CTEF            reduce using rule 15 (var1 -> ID .)
    CTEC            reduce using rule 15 (var1 -> ID .)
    LPAREN          reduce using rule 15 (var1 -> ID .)
    ID              reduce using rule 15 (var1 -> ID .)
    COMMA           shift and go to state 53
    LBRACKET        shift and go to state 56

  ! COMMA           [ reduce using rule 15 (var1 -> ID .) ]

    arr                            shift and go to state 54
    mat                            shift and go to state 55

state 42

    (22) var1 -> empty .

    SEMICOLON       reduce using rule 22 (var1 -> empty .)
    MUL             reduce using rule 22 (var1 -> empty .)
    DIV             reduce using rule 22 (var1 -> empty .)
    PLUS            reduce using rule 22 (var1 -> empty .)
    MINUS           reduce using rule 22 (var1 -> empty .)
    GT              reduce using rule 22 (var1 -> empty .)
    LT              reduce using rule 22 (var1 -> empty .)
    GTE             reduce using rule 22 (var1 -> empty .)
    LTE             reduce using rule 22 (var1 -> empty .)
    NE              reduce using rule 22 (var1 -> empty .)
    AND             reduce using rule 22 (var1 -> empty .)
    OR              reduce using rule 22 (var1 -> empty .)
    RBRACKET        reduce using rule 22 (var1 -> empty .)
    RPAREN          reduce using rule 22 (var1 -> empty .)
    TO              reduce using rule 22 (var1 -> empty .)
    COMMA           reduce using rule 22 (var1 -> empty .)
    CTEI            reduce using rule 22 (var1 -> empty .)
    CTEF            reduce using rule 22 (var1 -> empty .)
    CTEC            reduce using rule 22 (var1 -> empty .)
    LPAREN          reduce using rule 22 (var1 -> empty .)
    ID              reduce using rule 22 (var1 -> empty .)


state 43

    (8) tipo -> INT guardaTipoVar .

    ID              reduce using rule 8 (tipo -> INT guardaTipoVar .)
    SEMICOLON       reduce using rule 8 (tipo -> INT guardaTipoVar .)
    RPAREN          reduce using rule 8 (tipo -> INT guardaTipoVar .)


state 44

    (9) tipo -> FLOAT guardaTipoVar .

    ID              reduce using rule 9 (tipo -> FLOAT guardaTipoVar .)
    SEMICOLON       reduce using rule 9 (tipo -> FLOAT guardaTipoVar .)
    RPAREN          reduce using rule 9 (tipo -> FLOAT guardaTipoVar .)


state 45

    (10) tipo -> CHAR guardaTipoVar .

    ID              reduce using rule 10 (tipo -> CHAR guardaTipoVar .)
    SEMICOLON       reduce using rule 10 (tipo -> CHAR guardaTipoVar .)
    RPAREN          reduce using rule 10 (tipo -> CHAR guardaTipoVar .)


state 46

    (7) main -> MAIN LPAREN param RPAREN . LCURLY vars statement RCURLY END

    LCURLY          shift and go to state 57


state 47

    (56) param -> tipo param1 .

    RPAREN          reduce using rule 56 (param -> tipo param1 .)


state 48

    (58) param1 -> ID .
    (59) param1 -> ID . COMMA param1

    RPAREN          reduce using rule 58 (param1 -> ID .)
    COMMA           shift and go to state 58


state 49

    (60) param1 -> empty .

    RPAREN          reduce using rule 60 (param1 -> empty .)


state 50

    (42) function1 -> ID save_fun . LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY

    LPAREN          shift and go to state 59


state 51

    (43) function2 -> ID save_fun . LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    LPAREN          shift and go to state 60


state 52

    (24) var2 -> var2 tipo var1 SEMICOLON . addV saveId
    (23) addV -> .

    INT             reduce using rule 23 (addV -> .)
    FLOAT           reduce using rule 23 (addV -> .)
    CHAR            reduce using rule 23 (addV -> .)
    FUN             reduce using rule 23 (addV -> .)
    MAIN            reduce using rule 23 (addV -> .)
    $end            reduce using rule 23 (addV -> .)
    ID              reduce using rule 23 (addV -> .)
    READ            reduce using rule 23 (addV -> .)
    PRINT           reduce using rule 23 (addV -> .)
    FOR             reduce using rule 23 (addV -> .)
    IF              reduce using rule 23 (addV -> .)
    WHILE           reduce using rule 23 (addV -> .)
    RCURLY          reduce using rule 23 (addV -> .)
    RETURN          reduce using rule 23 (addV -> .)

    addV                           shift and go to state 61

state 53

    (16) var1 -> ID COMMA . var1 addV saveId
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (100) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 41
    SEMICOLON       reduce using rule 100 (empty -> .)
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    CTEI            reduce using rule 100 (empty -> .)
    CTEF            reduce using rule 100 (empty -> .)
    CTEC            reduce using rule 100 (empty -> .)
    LPAREN          reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]

    var1                           shift and go to state 62
    empty                          shift and go to state 42

state 54

    (17) var1 -> ID arr .
    (18) var1 -> ID arr . COMMA var1 addV saveId

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 17 (var1 -> ID arr .)
    MUL             reduce using rule 17 (var1 -> ID arr .)
    DIV             reduce using rule 17 (var1 -> ID arr .)
    PLUS            reduce using rule 17 (var1 -> ID arr .)
    MINUS           reduce using rule 17 (var1 -> ID arr .)
    GT              reduce using rule 17 (var1 -> ID arr .)
    LT              reduce using rule 17 (var1 -> ID arr .)
    GTE             reduce using rule 17 (var1 -> ID arr .)
    LTE             reduce using rule 17 (var1 -> ID arr .)
    NE              reduce using rule 17 (var1 -> ID arr .)
    AND             reduce using rule 17 (var1 -> ID arr .)
    OR              reduce using rule 17 (var1 -> ID arr .)
    RBRACKET        reduce using rule 17 (var1 -> ID arr .)
    RPAREN          reduce using rule 17 (var1 -> ID arr .)
    TO              reduce using rule 17 (var1 -> ID arr .)
    CTEI            reduce using rule 17 (var1 -> ID arr .)
    CTEF            reduce using rule 17 (var1 -> ID arr .)
    CTEC            reduce using rule 17 (var1 -> ID arr .)
    LPAREN          reduce using rule 17 (var1 -> ID arr .)
    ID              reduce using rule 17 (var1 -> ID arr .)
    COMMA           shift and go to state 63

  ! COMMA           [ reduce using rule 17 (var1 -> ID arr .) ]


state 55

    (19) var1 -> ID mat . COMMA var1 addV saveId
    (20) var1 -> ID mat .
    (21) var1 -> ID mat . especial
    (26) especial -> . TRANSPUESTA
    (27) especial -> . INVERSA
    (28) especial -> . DETERMINANTE

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 64
    SEMICOLON       reduce using rule 20 (var1 -> ID mat .)
    MUL             reduce using rule 20 (var1 -> ID mat .)
    DIV             reduce using rule 20 (var1 -> ID mat .)
    PLUS            reduce using rule 20 (var1 -> ID mat .)
    MINUS           reduce using rule 20 (var1 -> ID mat .)
    GT              reduce using rule 20 (var1 -> ID mat .)
    LT              reduce using rule 20 (var1 -> ID mat .)
    GTE             reduce using rule 20 (var1 -> ID mat .)
    LTE             reduce using rule 20 (var1 -> ID mat .)
    NE              reduce using rule 20 (var1 -> ID mat .)
    AND             reduce using rule 20 (var1 -> ID mat .)
    OR              reduce using rule 20 (var1 -> ID mat .)
    RBRACKET        reduce using rule 20 (var1 -> ID mat .)
    RPAREN          reduce using rule 20 (var1 -> ID mat .)
    TO              reduce using rule 20 (var1 -> ID mat .)
    CTEI            reduce using rule 20 (var1 -> ID mat .)
    CTEF            reduce using rule 20 (var1 -> ID mat .)
    CTEC            reduce using rule 20 (var1 -> ID mat .)
    LPAREN          reduce using rule 20 (var1 -> ID mat .)
    ID              reduce using rule 20 (var1 -> ID mat .)
    TRANSPUESTA     shift and go to state 66
    INVERSA         shift and go to state 67
    DETERMINANTE    shift and go to state 68

  ! COMMA           [ reduce using rule 20 (var1 -> ID mat .) ]

    especial                       shift and go to state 65

state 56

    (29) arr -> LBRACKET . CTEI RBRACKET
    (30) arr -> LBRACKET . exp RBRACKET
    (31) mat -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> LBRACKET . exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> LBRACKET . CTEI RBRACKET LBRACKET exp RBRACKET
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 69
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)

    exp                            shift and go to state 70
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 57

    (7) main -> MAIN LPAREN param RPAREN LCURLY . vars statement RCURLY END
    (12) vars -> . var
    (13) vars -> . empty
    (14) var -> . VAR var2
    (100) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 100 (empty -> .)
    READ            reduce using rule 100 (empty -> .)
    PRINT           reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)

    vars                           shift and go to state 83
    var                            shift and go to state 9
    empty                          shift and go to state 10

state 58

    (59) param1 -> ID COMMA . param1
    (58) param1 -> . ID
    (59) param1 -> . ID COMMA param1
    (60) param1 -> . empty
    (100) empty -> .

    ID              shift and go to state 48
    RPAREN          reduce using rule 100 (empty -> .)

    param1                         shift and go to state 84
    empty                          shift and go to state 49

state 59

    (42) function1 -> ID save_fun LPAREN . param RPAREN SEMICOLON LCURLY vars statement RCURLY
    (56) param -> . tipo param1
    (57) param -> . empty
    (8) tipo -> . INT guardaTipoVar
    (9) tipo -> . FLOAT guardaTipoVar
    (10) tipo -> . CHAR guardaTipoVar
    (100) empty -> .

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    RPAREN          reduce using rule 100 (empty -> .)

    param                          shift and go to state 85
    tipo                           shift and go to state 32
    empty                          shift and go to state 33

state 60

    (43) function2 -> ID save_fun LPAREN . param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY
    (56) param -> . tipo param1
    (57) param -> . empty
    (8) tipo -> . INT guardaTipoVar
    (9) tipo -> . FLOAT guardaTipoVar
    (10) tipo -> . CHAR guardaTipoVar
    (100) empty -> .

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    RPAREN          reduce using rule 100 (empty -> .)

    param                          shift and go to state 86
    tipo                           shift and go to state 32
    empty                          shift and go to state 33

state 61

    (24) var2 -> var2 tipo var1 SEMICOLON addV . saveId
    (101) saveId -> .

    INT             reduce using rule 101 (saveId -> .)
    FLOAT           reduce using rule 101 (saveId -> .)
    CHAR            reduce using rule 101 (saveId -> .)
    FUN             reduce using rule 101 (saveId -> .)
    MAIN            reduce using rule 101 (saveId -> .)
    $end            reduce using rule 101 (saveId -> .)
    ID              reduce using rule 101 (saveId -> .)
    READ            reduce using rule 101 (saveId -> .)
    PRINT           reduce using rule 101 (saveId -> .)
    FOR             reduce using rule 101 (saveId -> .)
    IF              reduce using rule 101 (saveId -> .)
    WHILE           reduce using rule 101 (saveId -> .)
    RCURLY          reduce using rule 101 (saveId -> .)
    RETURN          reduce using rule 101 (saveId -> .)

    saveId                         shift and go to state 87

state 62

    (16) var1 -> ID COMMA var1 . addV saveId
    (23) addV -> .

    SEMICOLON       reduce using rule 23 (addV -> .)
    MUL             reduce using rule 23 (addV -> .)
    DIV             reduce using rule 23 (addV -> .)
    PLUS            reduce using rule 23 (addV -> .)
    MINUS           reduce using rule 23 (addV -> .)
    GT              reduce using rule 23 (addV -> .)
    LT              reduce using rule 23 (addV -> .)
    GTE             reduce using rule 23 (addV -> .)
    LTE             reduce using rule 23 (addV -> .)
    NE              reduce using rule 23 (addV -> .)
    AND             reduce using rule 23 (addV -> .)
    OR              reduce using rule 23 (addV -> .)
    RBRACKET        reduce using rule 23 (addV -> .)
    RPAREN          reduce using rule 23 (addV -> .)
    TO              reduce using rule 23 (addV -> .)
    COMMA           reduce using rule 23 (addV -> .)
    CTEI            reduce using rule 23 (addV -> .)
    CTEF            reduce using rule 23 (addV -> .)
    CTEC            reduce using rule 23 (addV -> .)
    LPAREN          reduce using rule 23 (addV -> .)
    ID              reduce using rule 23 (addV -> .)

    addV                           shift and go to state 88

state 63

    (18) var1 -> ID arr COMMA . var1 addV saveId
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (100) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 41
    SEMICOLON       reduce using rule 100 (empty -> .)
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    CTEI            reduce using rule 100 (empty -> .)
    CTEF            reduce using rule 100 (empty -> .)
    CTEC            reduce using rule 100 (empty -> .)
    LPAREN          reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]

    var1                           shift and go to state 89
    empty                          shift and go to state 42

state 64

    (19) var1 -> ID mat COMMA . var1 addV saveId
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (100) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 41
    SEMICOLON       reduce using rule 100 (empty -> .)
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    CTEI            reduce using rule 100 (empty -> .)
    CTEF            reduce using rule 100 (empty -> .)
    CTEC            reduce using rule 100 (empty -> .)
    LPAREN          reduce using rule 100 (empty -> .)

  ! ID              [ reduce using rule 100 (empty -> .) ]

    var1                           shift and go to state 90
    empty                          shift and go to state 42

state 65

    (21) var1 -> ID mat especial .

    SEMICOLON       reduce using rule 21 (var1 -> ID mat especial .)
    MUL             reduce using rule 21 (var1 -> ID mat especial .)
    DIV             reduce using rule 21 (var1 -> ID mat especial .)
    PLUS            reduce using rule 21 (var1 -> ID mat especial .)
    MINUS           reduce using rule 21 (var1 -> ID mat especial .)
    GT              reduce using rule 21 (var1 -> ID mat especial .)
    LT              reduce using rule 21 (var1 -> ID mat especial .)
    GTE             reduce using rule 21 (var1 -> ID mat especial .)
    LTE             reduce using rule 21 (var1 -> ID mat especial .)
    NE              reduce using rule 21 (var1 -> ID mat especial .)
    AND             reduce using rule 21 (var1 -> ID mat especial .)
    OR              reduce using rule 21 (var1 -> ID mat especial .)
    RBRACKET        reduce using rule 21 (var1 -> ID mat especial .)
    RPAREN          reduce using rule 21 (var1 -> ID mat especial .)
    TO              reduce using rule 21 (var1 -> ID mat especial .)
    COMMA           reduce using rule 21 (var1 -> ID mat especial .)
    CTEI            reduce using rule 21 (var1 -> ID mat especial .)
    CTEF            reduce using rule 21 (var1 -> ID mat especial .)
    CTEC            reduce using rule 21 (var1 -> ID mat especial .)
    LPAREN          reduce using rule 21 (var1 -> ID mat especial .)
    ID              reduce using rule 21 (var1 -> ID mat especial .)


state 66

    (26) especial -> TRANSPUESTA .

    SEMICOLON       reduce using rule 26 (especial -> TRANSPUESTA .)
    MUL             reduce using rule 26 (especial -> TRANSPUESTA .)
    DIV             reduce using rule 26 (especial -> TRANSPUESTA .)
    PLUS            reduce using rule 26 (especial -> TRANSPUESTA .)
    MINUS           reduce using rule 26 (especial -> TRANSPUESTA .)
    GT              reduce using rule 26 (especial -> TRANSPUESTA .)
    LT              reduce using rule 26 (especial -> TRANSPUESTA .)
    GTE             reduce using rule 26 (especial -> TRANSPUESTA .)
    LTE             reduce using rule 26 (especial -> TRANSPUESTA .)
    NE              reduce using rule 26 (especial -> TRANSPUESTA .)
    AND             reduce using rule 26 (especial -> TRANSPUESTA .)
    OR              reduce using rule 26 (especial -> TRANSPUESTA .)
    RBRACKET        reduce using rule 26 (especial -> TRANSPUESTA .)
    RPAREN          reduce using rule 26 (especial -> TRANSPUESTA .)
    TO              reduce using rule 26 (especial -> TRANSPUESTA .)
    COMMA           reduce using rule 26 (especial -> TRANSPUESTA .)
    CTEI            reduce using rule 26 (especial -> TRANSPUESTA .)
    CTEF            reduce using rule 26 (especial -> TRANSPUESTA .)
    CTEC            reduce using rule 26 (especial -> TRANSPUESTA .)
    LPAREN          reduce using rule 26 (especial -> TRANSPUESTA .)
    ID              reduce using rule 26 (especial -> TRANSPUESTA .)


state 67

    (27) especial -> INVERSA .

    SEMICOLON       reduce using rule 27 (especial -> INVERSA .)
    MUL             reduce using rule 27 (especial -> INVERSA .)
    DIV             reduce using rule 27 (especial -> INVERSA .)
    PLUS            reduce using rule 27 (especial -> INVERSA .)
    MINUS           reduce using rule 27 (especial -> INVERSA .)
    GT              reduce using rule 27 (especial -> INVERSA .)
    LT              reduce using rule 27 (especial -> INVERSA .)
    GTE             reduce using rule 27 (especial -> INVERSA .)
    LTE             reduce using rule 27 (especial -> INVERSA .)
    NE              reduce using rule 27 (especial -> INVERSA .)
    AND             reduce using rule 27 (especial -> INVERSA .)
    OR              reduce using rule 27 (especial -> INVERSA .)
    RBRACKET        reduce using rule 27 (especial -> INVERSA .)
    RPAREN          reduce using rule 27 (especial -> INVERSA .)
    TO              reduce using rule 27 (especial -> INVERSA .)
    COMMA           reduce using rule 27 (especial -> INVERSA .)
    CTEI            reduce using rule 27 (especial -> INVERSA .)
    CTEF            reduce using rule 27 (especial -> INVERSA .)
    CTEC            reduce using rule 27 (especial -> INVERSA .)
    LPAREN          reduce using rule 27 (especial -> INVERSA .)
    ID              reduce using rule 27 (especial -> INVERSA .)


state 68

    (28) especial -> DETERMINANTE .

    SEMICOLON       reduce using rule 28 (especial -> DETERMINANTE .)
    MUL             reduce using rule 28 (especial -> DETERMINANTE .)
    DIV             reduce using rule 28 (especial -> DETERMINANTE .)
    PLUS            reduce using rule 28 (especial -> DETERMINANTE .)
    MINUS           reduce using rule 28 (especial -> DETERMINANTE .)
    GT              reduce using rule 28 (especial -> DETERMINANTE .)
    LT              reduce using rule 28 (especial -> DETERMINANTE .)
    GTE             reduce using rule 28 (especial -> DETERMINANTE .)
    LTE             reduce using rule 28 (especial -> DETERMINANTE .)
    NE              reduce using rule 28 (especial -> DETERMINANTE .)
    AND             reduce using rule 28 (especial -> DETERMINANTE .)
    OR              reduce using rule 28 (especial -> DETERMINANTE .)
    RBRACKET        reduce using rule 28 (especial -> DETERMINANTE .)
    RPAREN          reduce using rule 28 (especial -> DETERMINANTE .)
    TO              reduce using rule 28 (especial -> DETERMINANTE .)
    COMMA           reduce using rule 28 (especial -> DETERMINANTE .)
    CTEI            reduce using rule 28 (especial -> DETERMINANTE .)
    CTEF            reduce using rule 28 (especial -> DETERMINANTE .)
    CTEC            reduce using rule 28 (especial -> DETERMINANTE .)
    LPAREN          reduce using rule 28 (especial -> DETERMINANTE .)
    ID              reduce using rule 28 (especial -> DETERMINANTE .)


state 69

    (29) arr -> LBRACKET CTEI . RBRACKET
    (31) mat -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> LBRACKET CTEI . RBRACKET LBRACKET exp RBRACKET
    (95) pexp -> CTEI .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 91
    MUL             reduce using rule 95 (pexp -> CTEI .)
    DIV             reduce using rule 95 (pexp -> CTEI .)
    PLUS            reduce using rule 95 (pexp -> CTEI .)
    MINUS           reduce using rule 95 (pexp -> CTEI .)
    GT              reduce using rule 95 (pexp -> CTEI .)
    LT              reduce using rule 95 (pexp -> CTEI .)
    GTE             reduce using rule 95 (pexp -> CTEI .)
    LTE             reduce using rule 95 (pexp -> CTEI .)
    NE              reduce using rule 95 (pexp -> CTEI .)
    AND             reduce using rule 95 (pexp -> CTEI .)
    OR              reduce using rule 95 (pexp -> CTEI .)

  ! RBRACKET        [ reduce using rule 95 (pexp -> CTEI .) ]


state 70

    (30) arr -> LBRACKET exp . RBRACKET
    (32) mat -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET
    (33) mat -> LBRACKET exp . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 92


state 71

    (77) exp -> nexp .
    (78) exp -> nexp . OR saveOperator nexp

    RBRACKET        reduce using rule 77 (exp -> nexp .)
    RPAREN          reduce using rule 77 (exp -> nexp .)
    SEMICOLON       reduce using rule 77 (exp -> nexp .)
    TO              reduce using rule 77 (exp -> nexp .)
    COMMA           reduce using rule 77 (exp -> nexp .)
    OR              shift and go to state 93


state 72

    (79) nexp -> compexp .
    (80) nexp -> compexp . AND saveOperator compexp

    OR              reduce using rule 79 (nexp -> compexp .)
    RBRACKET        reduce using rule 79 (nexp -> compexp .)
    RPAREN          reduce using rule 79 (nexp -> compexp .)
    SEMICOLON       reduce using rule 79 (nexp -> compexp .)
    TO              reduce using rule 79 (nexp -> compexp .)
    COMMA           reduce using rule 79 (nexp -> compexp .)
    AND             shift and go to state 94


state 73

    (81) compexp -> sumexp .
    (83) compexp1 -> sumexp . GT saveOperator sumexp
    (84) compexp1 -> sumexp . LT saveOperator sumexp
    (85) compexp1 -> sumexp . GTE saveOperator sumexp
    (86) compexp1 -> sumexp . LTE saveOperator sumexp
    (87) compexp1 -> sumexp . NE saveOperator sumexp

    AND             reduce using rule 81 (compexp -> sumexp .)
    OR              reduce using rule 81 (compexp -> sumexp .)
    RBRACKET        reduce using rule 81 (compexp -> sumexp .)
    RPAREN          reduce using rule 81 (compexp -> sumexp .)
    SEMICOLON       reduce using rule 81 (compexp -> sumexp .)
    TO              reduce using rule 81 (compexp -> sumexp .)
    COMMA           reduce using rule 81 (compexp -> sumexp .)
    GT              shift and go to state 95
    LT              shift and go to state 96
    GTE             shift and go to state 97
    LTE             shift and go to state 98
    NE              shift and go to state 99


state 74

    (82) compexp -> compexp1 . sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)

    sumexp                         shift and go to state 100
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 75

    (88) sumexp -> mulexp .
    (89) sumexp -> mulexp . PLUS saveOperator mulexp
    (90) sumexp -> mulexp . MINUS saveOperator mulexp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    GT              reduce using rule 88 (sumexp -> mulexp .)
    LT              reduce using rule 88 (sumexp -> mulexp .)
    GTE             reduce using rule 88 (sumexp -> mulexp .)
    LTE             reduce using rule 88 (sumexp -> mulexp .)
    NE              reduce using rule 88 (sumexp -> mulexp .)
    AND             reduce using rule 88 (sumexp -> mulexp .)
    OR              reduce using rule 88 (sumexp -> mulexp .)
    RBRACKET        reduce using rule 88 (sumexp -> mulexp .)
    RPAREN          reduce using rule 88 (sumexp -> mulexp .)
    SEMICOLON       reduce using rule 88 (sumexp -> mulexp .)
    TO              reduce using rule 88 (sumexp -> mulexp .)
    COMMA           reduce using rule 88 (sumexp -> mulexp .)
    CTEI            reduce using rule 88 (sumexp -> mulexp .)
    CTEF            reduce using rule 88 (sumexp -> mulexp .)
    CTEC            reduce using rule 88 (sumexp -> mulexp .)
    LPAREN          reduce using rule 88 (sumexp -> mulexp .)
    ID              reduce using rule 88 (sumexp -> mulexp .)
    MUL             reduce using rule 88 (sumexp -> mulexp .)
    DIV             reduce using rule 88 (sumexp -> mulexp .)
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103

  ! PLUS            [ reduce using rule 88 (sumexp -> mulexp .) ]
  ! MINUS           [ reduce using rule 88 (sumexp -> mulexp .) ]


state 76

    (91) mulexp -> pexp .
    (92) mulexp -> pexp . MUL saveOperator pexp
    (93) mulexp -> pexp . DIV saveOperator pexp

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    PLUS            reduce using rule 91 (mulexp -> pexp .)
    MINUS           reduce using rule 91 (mulexp -> pexp .)
    GT              reduce using rule 91 (mulexp -> pexp .)
    LT              reduce using rule 91 (mulexp -> pexp .)
    GTE             reduce using rule 91 (mulexp -> pexp .)
    LTE             reduce using rule 91 (mulexp -> pexp .)
    NE              reduce using rule 91 (mulexp -> pexp .)
    AND             reduce using rule 91 (mulexp -> pexp .)
    OR              reduce using rule 91 (mulexp -> pexp .)
    RBRACKET        reduce using rule 91 (mulexp -> pexp .)
    RPAREN          reduce using rule 91 (mulexp -> pexp .)
    SEMICOLON       reduce using rule 91 (mulexp -> pexp .)
    TO              reduce using rule 91 (mulexp -> pexp .)
    COMMA           reduce using rule 91 (mulexp -> pexp .)
    CTEI            reduce using rule 91 (mulexp -> pexp .)
    CTEF            reduce using rule 91 (mulexp -> pexp .)
    CTEC            reduce using rule 91 (mulexp -> pexp .)
    LPAREN          reduce using rule 91 (mulexp -> pexp .)
    ID              reduce using rule 91 (mulexp -> pexp .)
    MUL             shift and go to state 104
    DIV             shift and go to state 105

  ! MUL             [ reduce using rule 91 (mulexp -> pexp .) ]
  ! DIV             [ reduce using rule 91 (mulexp -> pexp .) ]


state 77

    (94) pexp -> var1 .

    MUL             reduce using rule 94 (pexp -> var1 .)
    DIV             reduce using rule 94 (pexp -> var1 .)
    PLUS            reduce using rule 94 (pexp -> var1 .)
    MINUS           reduce using rule 94 (pexp -> var1 .)
    GT              reduce using rule 94 (pexp -> var1 .)
    LT              reduce using rule 94 (pexp -> var1 .)
    GTE             reduce using rule 94 (pexp -> var1 .)
    LTE             reduce using rule 94 (pexp -> var1 .)
    NE              reduce using rule 94 (pexp -> var1 .)
    AND             reduce using rule 94 (pexp -> var1 .)
    OR              reduce using rule 94 (pexp -> var1 .)
    RBRACKET        reduce using rule 94 (pexp -> var1 .)
    RPAREN          reduce using rule 94 (pexp -> var1 .)
    SEMICOLON       reduce using rule 94 (pexp -> var1 .)
    TO              reduce using rule 94 (pexp -> var1 .)
    COMMA           reduce using rule 94 (pexp -> var1 .)
    CTEI            reduce using rule 94 (pexp -> var1 .)
    CTEF            reduce using rule 94 (pexp -> var1 .)
    CTEC            reduce using rule 94 (pexp -> var1 .)
    LPAREN          reduce using rule 94 (pexp -> var1 .)
    ID              reduce using rule 94 (pexp -> var1 .)


state 78

    (96) pexp -> CTEF .

    MUL             reduce using rule 96 (pexp -> CTEF .)
    DIV             reduce using rule 96 (pexp -> CTEF .)
    PLUS            reduce using rule 96 (pexp -> CTEF .)
    MINUS           reduce using rule 96 (pexp -> CTEF .)
    GT              reduce using rule 96 (pexp -> CTEF .)
    LT              reduce using rule 96 (pexp -> CTEF .)
    GTE             reduce using rule 96 (pexp -> CTEF .)
    LTE             reduce using rule 96 (pexp -> CTEF .)
    NE              reduce using rule 96 (pexp -> CTEF .)
    AND             reduce using rule 96 (pexp -> CTEF .)
    OR              reduce using rule 96 (pexp -> CTEF .)
    RBRACKET        reduce using rule 96 (pexp -> CTEF .)
    RPAREN          reduce using rule 96 (pexp -> CTEF .)
    SEMICOLON       reduce using rule 96 (pexp -> CTEF .)
    TO              reduce using rule 96 (pexp -> CTEF .)
    COMMA           reduce using rule 96 (pexp -> CTEF .)
    CTEI            reduce using rule 96 (pexp -> CTEF .)
    CTEF            reduce using rule 96 (pexp -> CTEF .)
    CTEC            reduce using rule 96 (pexp -> CTEF .)
    LPAREN          reduce using rule 96 (pexp -> CTEF .)
    ID              reduce using rule 96 (pexp -> CTEF .)


state 79

    (97) pexp -> CTEC .

    MUL             reduce using rule 97 (pexp -> CTEC .)
    DIV             reduce using rule 97 (pexp -> CTEC .)
    PLUS            reduce using rule 97 (pexp -> CTEC .)
    MINUS           reduce using rule 97 (pexp -> CTEC .)
    GT              reduce using rule 97 (pexp -> CTEC .)
    LT              reduce using rule 97 (pexp -> CTEC .)
    GTE             reduce using rule 97 (pexp -> CTEC .)
    LTE             reduce using rule 97 (pexp -> CTEC .)
    NE              reduce using rule 97 (pexp -> CTEC .)
    AND             reduce using rule 97 (pexp -> CTEC .)
    OR              reduce using rule 97 (pexp -> CTEC .)
    RBRACKET        reduce using rule 97 (pexp -> CTEC .)
    RPAREN          reduce using rule 97 (pexp -> CTEC .)
    SEMICOLON       reduce using rule 97 (pexp -> CTEC .)
    TO              reduce using rule 97 (pexp -> CTEC .)
    COMMA           reduce using rule 97 (pexp -> CTEC .)
    CTEI            reduce using rule 97 (pexp -> CTEC .)
    CTEF            reduce using rule 97 (pexp -> CTEC .)
    CTEC            reduce using rule 97 (pexp -> CTEC .)
    LPAREN          reduce using rule 97 (pexp -> CTEC .)
    ID              reduce using rule 97 (pexp -> CTEC .)


state 80

    (98) pexp -> llamada .

    MUL             reduce using rule 98 (pexp -> llamada .)
    DIV             reduce using rule 98 (pexp -> llamada .)
    PLUS            reduce using rule 98 (pexp -> llamada .)
    MINUS           reduce using rule 98 (pexp -> llamada .)
    GT              reduce using rule 98 (pexp -> llamada .)
    LT              reduce using rule 98 (pexp -> llamada .)
    GTE             reduce using rule 98 (pexp -> llamada .)
    LTE             reduce using rule 98 (pexp -> llamada .)
    NE              reduce using rule 98 (pexp -> llamada .)
    AND             reduce using rule 98 (pexp -> llamada .)
    OR              reduce using rule 98 (pexp -> llamada .)
    RBRACKET        reduce using rule 98 (pexp -> llamada .)
    RPAREN          reduce using rule 98 (pexp -> llamada .)
    SEMICOLON       reduce using rule 98 (pexp -> llamada .)
    TO              reduce using rule 98 (pexp -> llamada .)
    COMMA           reduce using rule 98 (pexp -> llamada .)
    CTEI            reduce using rule 98 (pexp -> llamada .)
    CTEF            reduce using rule 98 (pexp -> llamada .)
    CTEC            reduce using rule 98 (pexp -> llamada .)
    LPAREN          reduce using rule 98 (pexp -> llamada .)
    ID              reduce using rule 98 (pexp -> llamada .)


state 81

    (99) pexp -> LPAREN . exp RPAREN
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)

    exp                            shift and go to state 106
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 82

    (15) var1 -> ID .
    (16) var1 -> ID . COMMA var1 addV saveId
    (17) var1 -> ID . arr
    (18) var1 -> ID . arr COMMA var1 addV saveId
    (19) var1 -> ID . mat COMMA var1 addV saveId
    (20) var1 -> ID . mat
    (21) var1 -> ID . mat especial
    (61) llamada -> ID . LPAREN exp RPAREN
    (29) arr -> . LBRACKET CTEI RBRACKET
    (30) arr -> . LBRACKET exp RBRACKET
    (31) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    MUL             reduce using rule 15 (var1 -> ID .)
    DIV             reduce using rule 15 (var1 -> ID .)
    PLUS            reduce using rule 15 (var1 -> ID .)
    MINUS           reduce using rule 15 (var1 -> ID .)
    GT              reduce using rule 15 (var1 -> ID .)
    LT              reduce using rule 15 (var1 -> ID .)
    GTE             reduce using rule 15 (var1 -> ID .)
    LTE             reduce using rule 15 (var1 -> ID .)
    NE              reduce using rule 15 (var1 -> ID .)
    AND             reduce using rule 15 (var1 -> ID .)
    OR              reduce using rule 15 (var1 -> ID .)
    RBRACKET        reduce using rule 15 (var1 -> ID .)
    RPAREN          reduce using rule 15 (var1 -> ID .)
    SEMICOLON       reduce using rule 15 (var1 -> ID .)
    TO              reduce using rule 15 (var1 -> ID .)
    CTEI            reduce using rule 15 (var1 -> ID .)
    CTEF            reduce using rule 15 (var1 -> ID .)
    CTEC            reduce using rule 15 (var1 -> ID .)
    ID              reduce using rule 15 (var1 -> ID .)
    COMMA           shift and go to state 53
    LPAREN          shift and go to state 107
    LBRACKET        shift and go to state 56

  ! COMMA           [ reduce using rule 15 (var1 -> ID .) ]
  ! LPAREN          [ reduce using rule 15 (var1 -> ID .) ]

    arr                            shift and go to state 54
    mat                            shift and go to state 55

state 83

    (7) main -> MAIN LPAREN param RPAREN LCURLY vars . statement RCURLY END
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (100) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (61) llamada -> . ID LPAREN exp RPAREN
    (76) lectura -> . READ LPAREN var1 RPAREN
    (69) escritura -> . PRINT LPAREN escritura1 RPAREN
    (66) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (62) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (68) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 100 (empty -> .)
    ID              shift and go to state 118
    READ            shift and go to state 119
    PRINT           shift and go to state 120
    FOR             shift and go to state 121
    IF              shift and go to state 122
    WHILE           shift and go to state 123

    statement                      shift and go to state 108
    statement1                     shift and go to state 109
    empty                          shift and go to state 110
    asignacion                     shift and go to state 111
    llamada                        shift and go to state 112
    lectura                        shift and go to state 113
    escritura                      shift and go to state 114
    for                            shift and go to state 115
    if                             shift and go to state 116
    while                          shift and go to state 117

state 84

    (59) param1 -> ID COMMA param1 .

    RPAREN          reduce using rule 59 (param1 -> ID COMMA param1 .)


state 85

    (42) function1 -> ID save_fun LPAREN param . RPAREN SEMICOLON LCURLY vars statement RCURLY

    RPAREN          shift and go to state 124


state 86

    (43) function2 -> ID save_fun LPAREN param . RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    RPAREN          shift and go to state 125


state 87

    (24) var2 -> var2 tipo var1 SEMICOLON addV saveId .

    INT             reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    FLOAT           reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    CHAR            reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    FUN             reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    MAIN            reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    $end            reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    ID              reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    READ            reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    PRINT           reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    FOR             reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    IF              reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    WHILE           reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    RCURLY          reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)
    RETURN          reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV saveId .)


state 88

    (16) var1 -> ID COMMA var1 addV . saveId
    (101) saveId -> .

    SEMICOLON       reduce using rule 101 (saveId -> .)
    MUL             reduce using rule 101 (saveId -> .)
    DIV             reduce using rule 101 (saveId -> .)
    PLUS            reduce using rule 101 (saveId -> .)
    MINUS           reduce using rule 101 (saveId -> .)
    GT              reduce using rule 101 (saveId -> .)
    LT              reduce using rule 101 (saveId -> .)
    GTE             reduce using rule 101 (saveId -> .)
    LTE             reduce using rule 101 (saveId -> .)
    NE              reduce using rule 101 (saveId -> .)
    AND             reduce using rule 101 (saveId -> .)
    OR              reduce using rule 101 (saveId -> .)
    RBRACKET        reduce using rule 101 (saveId -> .)
    RPAREN          reduce using rule 101 (saveId -> .)
    TO              reduce using rule 101 (saveId -> .)
    COMMA           reduce using rule 101 (saveId -> .)
    CTEI            reduce using rule 101 (saveId -> .)
    CTEF            reduce using rule 101 (saveId -> .)
    CTEC            reduce using rule 101 (saveId -> .)
    LPAREN          reduce using rule 101 (saveId -> .)
    ID              reduce using rule 101 (saveId -> .)

    saveId                         shift and go to state 126

state 89

    (18) var1 -> ID arr COMMA var1 . addV saveId
    (23) addV -> .

    SEMICOLON       reduce using rule 23 (addV -> .)
    MUL             reduce using rule 23 (addV -> .)
    DIV             reduce using rule 23 (addV -> .)
    PLUS            reduce using rule 23 (addV -> .)
    MINUS           reduce using rule 23 (addV -> .)
    GT              reduce using rule 23 (addV -> .)
    LT              reduce using rule 23 (addV -> .)
    GTE             reduce using rule 23 (addV -> .)
    LTE             reduce using rule 23 (addV -> .)
    NE              reduce using rule 23 (addV -> .)
    AND             reduce using rule 23 (addV -> .)
    OR              reduce using rule 23 (addV -> .)
    RBRACKET        reduce using rule 23 (addV -> .)
    RPAREN          reduce using rule 23 (addV -> .)
    TO              reduce using rule 23 (addV -> .)
    COMMA           reduce using rule 23 (addV -> .)
    CTEI            reduce using rule 23 (addV -> .)
    CTEF            reduce using rule 23 (addV -> .)
    CTEC            reduce using rule 23 (addV -> .)
    LPAREN          reduce using rule 23 (addV -> .)
    ID              reduce using rule 23 (addV -> .)

    addV                           shift and go to state 127

state 90

    (19) var1 -> ID mat COMMA var1 . addV saveId
    (23) addV -> .

    SEMICOLON       reduce using rule 23 (addV -> .)
    MUL             reduce using rule 23 (addV -> .)
    DIV             reduce using rule 23 (addV -> .)
    PLUS            reduce using rule 23 (addV -> .)
    MINUS           reduce using rule 23 (addV -> .)
    GT              reduce using rule 23 (addV -> .)
    LT              reduce using rule 23 (addV -> .)
    GTE             reduce using rule 23 (addV -> .)
    LTE             reduce using rule 23 (addV -> .)
    NE              reduce using rule 23 (addV -> .)
    AND             reduce using rule 23 (addV -> .)
    OR              reduce using rule 23 (addV -> .)
    RBRACKET        reduce using rule 23 (addV -> .)
    RPAREN          reduce using rule 23 (addV -> .)
    TO              reduce using rule 23 (addV -> .)
    COMMA           reduce using rule 23 (addV -> .)
    CTEI            reduce using rule 23 (addV -> .)
    CTEF            reduce using rule 23 (addV -> .)
    CTEC            reduce using rule 23 (addV -> .)
    LPAREN          reduce using rule 23 (addV -> .)
    ID              reduce using rule 23 (addV -> .)

    addV                           shift and go to state 128

state 91

    (29) arr -> LBRACKET CTEI RBRACKET .
    (31) mat -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET
    (34) mat -> LBRACKET CTEI RBRACKET . LBRACKET exp RBRACKET

    COMMA           reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    CTEI            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    CTEF            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    CTEC            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    ID              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 129


state 92

    (30) arr -> LBRACKET exp RBRACKET .
    (32) mat -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET
    (33) mat -> LBRACKET exp RBRACKET . LBRACKET CTEI RBRACKET

    COMMA           reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    MUL             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    DIV             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    GT              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    LT              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    GTE             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    LTE             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    NE              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    AND             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    OR              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    TO              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    CTEI            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    CTEF            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    CTEC            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    LPAREN          reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    ID              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 130


state 93

    (78) exp -> nexp OR . saveOperator nexp
    (102) saveOperator -> .

    CTEI            reduce using rule 102 (saveOperator -> .)
    CTEF            reduce using rule 102 (saveOperator -> .)
    CTEC            reduce using rule 102 (saveOperator -> .)
    LPAREN          reduce using rule 102 (saveOperator -> .)
    ID              reduce using rule 102 (saveOperator -> .)
    AND             reduce using rule 102 (saveOperator -> .)
    GT              reduce using rule 102 (saveOperator -> .)
    LT              reduce using rule 102 (saveOperator -> .)
    GTE             reduce using rule 102 (saveOperator -> .)
    LTE             reduce using rule 102 (saveOperator -> .)
    NE              reduce using rule 102 (saveOperator -> .)
    PLUS            reduce using rule 102 (saveOperator -> .)
    MINUS           reduce using rule 102 (saveOperator -> .)
    MUL             reduce using rule 102 (saveOperator -> .)
    DIV             reduce using rule 102 (saveOperator -> .)
    RBRACKET        reduce using rule 102 (saveOperator -> .)
    RPAREN          reduce using rule 102 (saveOperator -> .)
    SEMICOLON       reduce using rule 102 (saveOperator -> .)
    TO              reduce using rule 102 (saveOperator -> .)
    COMMA           reduce using rule 102 (saveOperator -> .)

    saveOperator                   shift and go to state 131

state 94

    (80) nexp -> compexp AND . saveOperator compexp
    (102) saveOperator -> .

    CTEI            reduce using rule 102 (saveOperator -> .)
    CTEF            reduce using rule 102 (saveOperator -> .)
    CTEC            reduce using rule 102 (saveOperator -> .)
    LPAREN          reduce using rule 102 (saveOperator -> .)
    ID              reduce using rule 102 (saveOperator -> .)
    GT              reduce using rule 102 (saveOperator -> .)
    LT              reduce using rule 102 (saveOperator -> .)
    GTE             reduce using rule 102 (saveOperator -> .)
    LTE             reduce using rule 102 (saveOperator -> .)
    NE              reduce using rule 102 (saveOperator -> .)
    PLUS            reduce using rule 102 (saveOperator -> .)
    MINUS           reduce using rule 102 (saveOperator -> .)
    MUL             reduce using rule 102 (saveOperator -> .)
    DIV             reduce using rule 102 (saveOperator -> .)
    OR              reduce using rule 102 (saveOperator -> .)
    RBRACKET        reduce using rule 102 (saveOperator -> .)
    RPAREN          reduce using rule 102 (saveOperator -> .)
    SEMICOLON       reduce using rule 102 (saveOperator -> .)
    TO              reduce using rule 102 (saveOperator -> .)
    COMMA           reduce using rule 102 (saveOperator -> .)

    saveOperator                   shift and go to state 132

state 95

    (83) compexp1 -> sumexp GT . saveOperator sumexp
    (102) saveOperator -> .

    CTEI            reduce using rule 102 (saveOperator -> .)
    CTEF            reduce using rule 102 (saveOperator -> .)
    CTEC            reduce using rule 102 (saveOperator -> .)
    LPAREN          reduce using rule 102 (saveOperator -> .)
    ID              reduce using rule 102 (saveOperator -> .)
    PLUS            reduce using rule 102 (saveOperator -> .)
    MINUS           reduce using rule 102 (saveOperator -> .)
    MUL             reduce using rule 102 (saveOperator -> .)
    DIV             reduce using rule 102 (saveOperator -> .)
    AND             reduce using rule 102 (saveOperator -> .)
    OR              reduce using rule 102 (saveOperator -> .)
    RBRACKET        reduce using rule 102 (saveOperator -> .)
    RPAREN          reduce using rule 102 (saveOperator -> .)
    SEMICOLON       reduce using rule 102 (saveOperator -> .)
    TO              reduce using rule 102 (saveOperator -> .)
    COMMA           reduce using rule 102 (saveOperator -> .)

    saveOperator                   shift and go to state 133

state 96

    (84) compexp1 -> sumexp LT . saveOperator sumexp
    (102) saveOperator -> .

    CTEI            reduce using rule 102 (saveOperator -> .)
    CTEF            reduce using rule 102 (saveOperator -> .)
    CTEC            reduce using rule 102 (saveOperator -> .)
    LPAREN          reduce using rule 102 (saveOperator -> .)
    ID              reduce using rule 102 (saveOperator -> .)
    PLUS            reduce using rule 102 (saveOperator -> .)
    MINUS           reduce using rule 102 (saveOperator -> .)
    MUL             reduce using rule 102 (saveOperator -> .)
    DIV             reduce using rule 102 (saveOperator -> .)
    AND             reduce using rule 102 (saveOperator -> .)
    OR              reduce using rule 102 (saveOperator -> .)
    RBRACKET        reduce using rule 102 (saveOperator -> .)
    RPAREN          reduce using rule 102 (saveOperator -> .)
    SEMICOLON       reduce using rule 102 (saveOperator -> .)
    TO              reduce using rule 102 (saveOperator -> .)
    COMMA           reduce using rule 102 (saveOperator -> .)

    saveOperator                   shift and go to state 134

state 97

    (85) compexp1 -> sumexp GTE . saveOperator sumexp
    (102) saveOperator -> .

    CTEI            reduce using rule 102 (saveOperator -> .)
    CTEF            reduce using rule 102 (saveOperator -> .)
    CTEC            reduce using rule 102 (saveOperator -> .)
    LPAREN          reduce using rule 102 (saveOperator -> .)
    ID              reduce using rule 102 (saveOperator -> .)
    PLUS            reduce using rule 102 (saveOperator -> .)
    MINUS           reduce using rule 102 (saveOperator -> .)
    MUL             reduce using rule 102 (saveOperator -> .)
    DIV             reduce using rule 102 (saveOperator -> .)
    AND             reduce using rule 102 (saveOperator -> .)
    OR              reduce using rule 102 (saveOperator -> .)
    RBRACKET        reduce using rule 102 (saveOperator -> .)
    RPAREN          reduce using rule 102 (saveOperator -> .)
    SEMICOLON       reduce using rule 102 (saveOperator -> .)
    TO              reduce using rule 102 (saveOperator -> .)
    COMMA           reduce using rule 102 (saveOperator -> .)

    saveOperator                   shift and go to state 135

state 98

    (86) compexp1 -> sumexp LTE . saveOperator sumexp
    (102) saveOperator -> .

    CTEI            reduce using rule 102 (saveOperator -> .)
    CTEF            reduce using rule 102 (saveOperator -> .)
    CTEC            reduce using rule 102 (saveOperator -> .)
    LPAREN          reduce using rule 102 (saveOperator -> .)
    ID              reduce using rule 102 (saveOperator -> .)
    PLUS            reduce using rule 102 (saveOperator -> .)
    MINUS           reduce using rule 102 (saveOperator -> .)
    MUL             reduce using rule 102 (saveOperator -> .)
    DIV             reduce using rule 102 (saveOperator -> .)
    AND             reduce using rule 102 (saveOperator -> .)
    OR              reduce using rule 102 (saveOperator -> .)
    RBRACKET        reduce using rule 102 (saveOperator -> .)
    RPAREN          reduce using rule 102 (saveOperator -> .)
    SEMICOLON       reduce using rule 102 (saveOperator -> .)
    TO              reduce using rule 102 (saveOperator -> .)
    COMMA           reduce using rule 102 (saveOperator -> .)

    saveOperator                   shift and go to state 136

state 99

    (87) compexp1 -> sumexp NE . saveOperator sumexp
    (102) saveOperator -> .

    CTEI            reduce using rule 102 (saveOperator -> .)
    CTEF            reduce using rule 102 (saveOperator -> .)
    CTEC            reduce using rule 102 (saveOperator -> .)
    LPAREN          reduce using rule 102 (saveOperator -> .)
    ID              reduce using rule 102 (saveOperator -> .)
    PLUS            reduce using rule 102 (saveOperator -> .)
    MINUS           reduce using rule 102 (saveOperator -> .)
    MUL             reduce using rule 102 (saveOperator -> .)
    DIV             reduce using rule 102 (saveOperator -> .)
    AND             reduce using rule 102 (saveOperator -> .)
    OR              reduce using rule 102 (saveOperator -> .)
    RBRACKET        reduce using rule 102 (saveOperator -> .)
    RPAREN          reduce using rule 102 (saveOperator -> .)
    SEMICOLON       reduce using rule 102 (saveOperator -> .)
    TO              reduce using rule 102 (saveOperator -> .)
    COMMA           reduce using rule 102 (saveOperator -> .)

    saveOperator                   shift and go to state 137

state 100

    (82) compexp -> compexp1 sumexp .

    AND             reduce using rule 82 (compexp -> compexp1 sumexp .)
    OR              reduce using rule 82 (compexp -> compexp1 sumexp .)
    RBRACKET        reduce using rule 82 (compexp -> compexp1 sumexp .)
    RPAREN          reduce using rule 82 (compexp -> compexp1 sumexp .)
    SEMICOLON       reduce using rule 82 (compexp -> compexp1 sumexp .)
    TO              reduce using rule 82 (compexp -> compexp1 sumexp .)
    COMMA           reduce using rule 82 (compexp -> compexp1 sumexp .)


state 101

    (95) pexp -> CTEI .

    MUL             reduce using rule 95 (pexp -> CTEI .)
    DIV             reduce using rule 95 (pexp -> CTEI .)
    PLUS            reduce using rule 95 (pexp -> CTEI .)
    MINUS           reduce using rule 95 (pexp -> CTEI .)
    AND             reduce using rule 95 (pexp -> CTEI .)
    OR              reduce using rule 95 (pexp -> CTEI .)
    RBRACKET        reduce using rule 95 (pexp -> CTEI .)
    RPAREN          reduce using rule 95 (pexp -> CTEI .)
    SEMICOLON       reduce using rule 95 (pexp -> CTEI .)
    TO              reduce using rule 95 (pexp -> CTEI .)
    COMMA           reduce using rule 95 (pexp -> CTEI .)
    GT              reduce using rule 95 (pexp -> CTEI .)
    LT              reduce using rule 95 (pexp -> CTEI .)
    GTE             reduce using rule 95 (pexp -> CTEI .)
    LTE             reduce using rule 95 (pexp -> CTEI .)
    NE              reduce using rule 95 (pexp -> CTEI .)
    CTEI            reduce using rule 95 (pexp -> CTEI .)
    CTEF            reduce using rule 95 (pexp -> CTEI .)
    CTEC            reduce using rule 95 (pexp -> CTEI .)
    LPAREN          reduce using rule 95 (pexp -> CTEI .)
    ID              reduce using rule 95 (pexp -> CTEI .)


state 102

    (89) sumexp -> mulexp PLUS . saveOperator mulexp
    (102) saveOperator -> .

    CTEI            reduce using rule 102 (saveOperator -> .)
    CTEF            reduce using rule 102 (saveOperator -> .)
    CTEC            reduce using rule 102 (saveOperator -> .)
    LPAREN          reduce using rule 102 (saveOperator -> .)
    ID              reduce using rule 102 (saveOperator -> .)
    MUL             reduce using rule 102 (saveOperator -> .)
    DIV             reduce using rule 102 (saveOperator -> .)
    GT              reduce using rule 102 (saveOperator -> .)
    LT              reduce using rule 102 (saveOperator -> .)
    GTE             reduce using rule 102 (saveOperator -> .)
    LTE             reduce using rule 102 (saveOperator -> .)
    NE              reduce using rule 102 (saveOperator -> .)
    AND             reduce using rule 102 (saveOperator -> .)
    OR              reduce using rule 102 (saveOperator -> .)
    RBRACKET        reduce using rule 102 (saveOperator -> .)
    RPAREN          reduce using rule 102 (saveOperator -> .)
    SEMICOLON       reduce using rule 102 (saveOperator -> .)
    TO              reduce using rule 102 (saveOperator -> .)
    COMMA           reduce using rule 102 (saveOperator -> .)
    PLUS            reduce using rule 102 (saveOperator -> .)
    MINUS           reduce using rule 102 (saveOperator -> .)

    saveOperator                   shift and go to state 138

state 103

    (90) sumexp -> mulexp MINUS . saveOperator mulexp
    (102) saveOperator -> .

    CTEI            reduce using rule 102 (saveOperator -> .)
    CTEF            reduce using rule 102 (saveOperator -> .)
    CTEC            reduce using rule 102 (saveOperator -> .)
    LPAREN          reduce using rule 102 (saveOperator -> .)
    ID              reduce using rule 102 (saveOperator -> .)
    MUL             reduce using rule 102 (saveOperator -> .)
    DIV             reduce using rule 102 (saveOperator -> .)
    GT              reduce using rule 102 (saveOperator -> .)
    LT              reduce using rule 102 (saveOperator -> .)
    GTE             reduce using rule 102 (saveOperator -> .)
    LTE             reduce using rule 102 (saveOperator -> .)
    NE              reduce using rule 102 (saveOperator -> .)
    AND             reduce using rule 102 (saveOperator -> .)
    OR              reduce using rule 102 (saveOperator -> .)
    RBRACKET        reduce using rule 102 (saveOperator -> .)
    RPAREN          reduce using rule 102 (saveOperator -> .)
    SEMICOLON       reduce using rule 102 (saveOperator -> .)
    TO              reduce using rule 102 (saveOperator -> .)
    COMMA           reduce using rule 102 (saveOperator -> .)
    PLUS            reduce using rule 102 (saveOperator -> .)
    MINUS           reduce using rule 102 (saveOperator -> .)

    saveOperator                   shift and go to state 139

state 104

    (92) mulexp -> pexp MUL . saveOperator pexp
    (102) saveOperator -> .

    CTEI            reduce using rule 102 (saveOperator -> .)
    CTEF            reduce using rule 102 (saveOperator -> .)
    CTEC            reduce using rule 102 (saveOperator -> .)
    LPAREN          reduce using rule 102 (saveOperator -> .)
    ID              reduce using rule 102 (saveOperator -> .)
    PLUS            reduce using rule 102 (saveOperator -> .)
    MINUS           reduce using rule 102 (saveOperator -> .)
    GT              reduce using rule 102 (saveOperator -> .)
    LT              reduce using rule 102 (saveOperator -> .)
    GTE             reduce using rule 102 (saveOperator -> .)
    LTE             reduce using rule 102 (saveOperator -> .)
    NE              reduce using rule 102 (saveOperator -> .)
    AND             reduce using rule 102 (saveOperator -> .)
    OR              reduce using rule 102 (saveOperator -> .)
    RBRACKET        reduce using rule 102 (saveOperator -> .)
    RPAREN          reduce using rule 102 (saveOperator -> .)
    SEMICOLON       reduce using rule 102 (saveOperator -> .)
    TO              reduce using rule 102 (saveOperator -> .)
    COMMA           reduce using rule 102 (saveOperator -> .)
    MUL             reduce using rule 102 (saveOperator -> .)
    DIV             reduce using rule 102 (saveOperator -> .)

    saveOperator                   shift and go to state 140

state 105

    (93) mulexp -> pexp DIV . saveOperator pexp
    (102) saveOperator -> .

    CTEI            reduce using rule 102 (saveOperator -> .)
    CTEF            reduce using rule 102 (saveOperator -> .)
    CTEC            reduce using rule 102 (saveOperator -> .)
    LPAREN          reduce using rule 102 (saveOperator -> .)
    ID              reduce using rule 102 (saveOperator -> .)
    PLUS            reduce using rule 102 (saveOperator -> .)
    MINUS           reduce using rule 102 (saveOperator -> .)
    GT              reduce using rule 102 (saveOperator -> .)
    LT              reduce using rule 102 (saveOperator -> .)
    GTE             reduce using rule 102 (saveOperator -> .)
    LTE             reduce using rule 102 (saveOperator -> .)
    NE              reduce using rule 102 (saveOperator -> .)
    AND             reduce using rule 102 (saveOperator -> .)
    OR              reduce using rule 102 (saveOperator -> .)
    RBRACKET        reduce using rule 102 (saveOperator -> .)
    RPAREN          reduce using rule 102 (saveOperator -> .)
    SEMICOLON       reduce using rule 102 (saveOperator -> .)
    TO              reduce using rule 102 (saveOperator -> .)
    COMMA           reduce using rule 102 (saveOperator -> .)
    MUL             reduce using rule 102 (saveOperator -> .)
    DIV             reduce using rule 102 (saveOperator -> .)

    saveOperator                   shift and go to state 141

state 106

    (99) pexp -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 142


state 107

    (61) llamada -> ID LPAREN . exp RPAREN
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)

    exp                            shift and go to state 143
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 108

    (7) main -> MAIN LPAREN param RPAREN LCURLY vars statement . RCURLY END

    RCURLY          shift and go to state 144


state 109

    (44) statement -> statement1 . statement
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (100) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (61) llamada -> . ID LPAREN exp RPAREN
    (76) lectura -> . READ LPAREN var1 RPAREN
    (69) escritura -> . PRINT LPAREN escritura1 RPAREN
    (66) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (62) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (68) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    ID              shift and go to state 118
    READ            shift and go to state 119
    PRINT           shift and go to state 120
    FOR             shift and go to state 121
    IF              shift and go to state 122
    WHILE           shift and go to state 123

    statement1                     shift and go to state 109
    statement                      shift and go to state 145
    empty                          shift and go to state 110
    asignacion                     shift and go to state 111
    llamada                        shift and go to state 112
    lectura                        shift and go to state 113
    escritura                      shift and go to state 114
    for                            shift and go to state 115
    if                             shift and go to state 116
    while                          shift and go to state 117

state 110

    (45) statement -> empty .

    RCURLY          reduce using rule 45 (statement -> empty .)
    RETURN          reduce using rule 45 (statement -> empty .)


state 111

    (46) statement1 -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 146


state 112

    (47) statement1 -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 147


state 113

    (48) statement1 -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 148


state 114

    (49) statement1 -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 149


state 115

    (50) statement1 -> for .

    ID              reduce using rule 50 (statement1 -> for .)
    READ            reduce using rule 50 (statement1 -> for .)
    PRINT           reduce using rule 50 (statement1 -> for .)
    FOR             reduce using rule 50 (statement1 -> for .)
    IF              reduce using rule 50 (statement1 -> for .)
    WHILE           reduce using rule 50 (statement1 -> for .)
    RCURLY          reduce using rule 50 (statement1 -> for .)
    RETURN          reduce using rule 50 (statement1 -> for .)


state 116

    (51) statement1 -> if .

    ID              reduce using rule 51 (statement1 -> if .)
    READ            reduce using rule 51 (statement1 -> if .)
    PRINT           reduce using rule 51 (statement1 -> if .)
    FOR             reduce using rule 51 (statement1 -> if .)
    IF              reduce using rule 51 (statement1 -> if .)
    WHILE           reduce using rule 51 (statement1 -> if .)
    RCURLY          reduce using rule 51 (statement1 -> if .)
    RETURN          reduce using rule 51 (statement1 -> if .)


state 117

    (52) statement1 -> while .

    ID              reduce using rule 52 (statement1 -> while .)
    READ            reduce using rule 52 (statement1 -> while .)
    PRINT           reduce using rule 52 (statement1 -> while .)
    FOR             reduce using rule 52 (statement1 -> while .)
    IF              reduce using rule 52 (statement1 -> while .)
    WHILE           reduce using rule 52 (statement1 -> while .)
    RCURLY          reduce using rule 52 (statement1 -> while .)
    RETURN          reduce using rule 52 (statement1 -> while .)


state 118

    (53) asignacion -> ID . EQUALS exp
    (54) asignacion -> ID . arr EQUALS exp
    (55) asignacion -> ID . mat EQUALS exp
    (61) llamada -> ID . LPAREN exp RPAREN
    (29) arr -> . LBRACKET CTEI RBRACKET
    (30) arr -> . LBRACKET exp RBRACKET
    (31) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

    EQUALS          shift and go to state 150
    LPAREN          shift and go to state 107
    LBRACKET        shift and go to state 56

    arr                            shift and go to state 151
    mat                            shift and go to state 152

state 119

    (76) lectura -> READ . LPAREN var1 RPAREN

    LPAREN          shift and go to state 153


state 120

    (69) escritura -> PRINT . LPAREN escritura1 RPAREN

    LPAREN          shift and go to state 154


state 121

    (66) for -> FOR . LPAREN for1 RPAREN LCURLY statement RCURLY

    LPAREN          shift and go to state 155


state 122

    (62) if -> IF . LPAREN exp RPAREN LCURLY statement RCURLY
    (63) if -> IF . LPAREN exp RPAREN LCURLY statement RCURLY else

    LPAREN          shift and go to state 156


state 123

    (68) while -> WHILE . LPAREN exp RPAREN LCURLY statement RCURLY

    LPAREN          shift and go to state 157


state 124

    (42) function1 -> ID save_fun LPAREN param RPAREN . SEMICOLON LCURLY vars statement RCURLY

    SEMICOLON       shift and go to state 158


state 125

    (43) function2 -> ID save_fun LPAREN param RPAREN . SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    SEMICOLON       shift and go to state 159


state 126

    (16) var1 -> ID COMMA var1 addV saveId .

    SEMICOLON       reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    MUL             reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    DIV             reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    PLUS            reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    MINUS           reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    GT              reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    LT              reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    GTE             reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    LTE             reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    NE              reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    AND             reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    OR              reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    RBRACKET        reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    RPAREN          reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    TO              reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    COMMA           reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    CTEI            reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    CTEF            reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    CTEC            reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    LPAREN          reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)
    ID              reduce using rule 16 (var1 -> ID COMMA var1 addV saveId .)


state 127

    (18) var1 -> ID arr COMMA var1 addV . saveId
    (101) saveId -> .

    SEMICOLON       reduce using rule 101 (saveId -> .)
    MUL             reduce using rule 101 (saveId -> .)
    DIV             reduce using rule 101 (saveId -> .)
    PLUS            reduce using rule 101 (saveId -> .)
    MINUS           reduce using rule 101 (saveId -> .)
    GT              reduce using rule 101 (saveId -> .)
    LT              reduce using rule 101 (saveId -> .)
    GTE             reduce using rule 101 (saveId -> .)
    LTE             reduce using rule 101 (saveId -> .)
    NE              reduce using rule 101 (saveId -> .)
    AND             reduce using rule 101 (saveId -> .)
    OR              reduce using rule 101 (saveId -> .)
    RBRACKET        reduce using rule 101 (saveId -> .)
    RPAREN          reduce using rule 101 (saveId -> .)
    TO              reduce using rule 101 (saveId -> .)
    COMMA           reduce using rule 101 (saveId -> .)
    CTEI            reduce using rule 101 (saveId -> .)
    CTEF            reduce using rule 101 (saveId -> .)
    CTEC            reduce using rule 101 (saveId -> .)
    LPAREN          reduce using rule 101 (saveId -> .)
    ID              reduce using rule 101 (saveId -> .)

    saveId                         shift and go to state 160

state 128

    (19) var1 -> ID mat COMMA var1 addV . saveId
    (101) saveId -> .

    SEMICOLON       reduce using rule 101 (saveId -> .)
    MUL             reduce using rule 101 (saveId -> .)
    DIV             reduce using rule 101 (saveId -> .)
    PLUS            reduce using rule 101 (saveId -> .)
    MINUS           reduce using rule 101 (saveId -> .)
    GT              reduce using rule 101 (saveId -> .)
    LT              reduce using rule 101 (saveId -> .)
    GTE             reduce using rule 101 (saveId -> .)
    LTE             reduce using rule 101 (saveId -> .)
    NE              reduce using rule 101 (saveId -> .)
    AND             reduce using rule 101 (saveId -> .)
    OR              reduce using rule 101 (saveId -> .)
    RBRACKET        reduce using rule 101 (saveId -> .)
    RPAREN          reduce using rule 101 (saveId -> .)
    TO              reduce using rule 101 (saveId -> .)
    COMMA           reduce using rule 101 (saveId -> .)
    CTEI            reduce using rule 101 (saveId -> .)
    CTEF            reduce using rule 101 (saveId -> .)
    CTEC            reduce using rule 101 (saveId -> .)
    LPAREN          reduce using rule 101 (saveId -> .)
    ID              reduce using rule 101 (saveId -> .)

    saveId                         shift and go to state 161

state 129

    (31) mat -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET
    (34) mat -> LBRACKET CTEI RBRACKET LBRACKET . exp RBRACKET
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 162
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)

    exp                            shift and go to state 163
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 130

    (32) mat -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (33) mat -> LBRACKET exp RBRACKET LBRACKET . CTEI RBRACKET
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 165
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)

    exp                            shift and go to state 164
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 131

    (78) exp -> nexp OR saveOperator . nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)

    nexp                           shift and go to state 166
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 132

    (80) nexp -> compexp AND saveOperator . compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)

    compexp                        shift and go to state 167
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 133

    (83) compexp1 -> sumexp GT saveOperator . sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)

  ! CTEI            [ reduce using rule 100 (empty -> .) ]
  ! CTEF            [ reduce using rule 100 (empty -> .) ]
  ! CTEC            [ reduce using rule 100 (empty -> .) ]
  ! LPAREN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]

    sumexp                         shift and go to state 168
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 134

    (84) compexp1 -> sumexp LT saveOperator . sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)

  ! CTEI            [ reduce using rule 100 (empty -> .) ]
  ! CTEF            [ reduce using rule 100 (empty -> .) ]
  ! CTEC            [ reduce using rule 100 (empty -> .) ]
  ! LPAREN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]

    sumexp                         shift and go to state 169
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 135

    (85) compexp1 -> sumexp GTE saveOperator . sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)

  ! CTEI            [ reduce using rule 100 (empty -> .) ]
  ! CTEF            [ reduce using rule 100 (empty -> .) ]
  ! CTEC            [ reduce using rule 100 (empty -> .) ]
  ! LPAREN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]

    sumexp                         shift and go to state 170
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 136

    (86) compexp1 -> sumexp LTE saveOperator . sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)

  ! CTEI            [ reduce using rule 100 (empty -> .) ]
  ! CTEF            [ reduce using rule 100 (empty -> .) ]
  ! CTEC            [ reduce using rule 100 (empty -> .) ]
  ! LPAREN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]

    sumexp                         shift and go to state 171
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 137

    (87) compexp1 -> sumexp NE saveOperator . sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)

  ! CTEI            [ reduce using rule 100 (empty -> .) ]
  ! CTEF            [ reduce using rule 100 (empty -> .) ]
  ! CTEC            [ reduce using rule 100 (empty -> .) ]
  ! LPAREN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]

    sumexp                         shift and go to state 172
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 138

    (89) sumexp -> mulexp PLUS saveOperator . mulexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)

  ! CTEI            [ reduce using rule 100 (empty -> .) ]
  ! CTEF            [ reduce using rule 100 (empty -> .) ]
  ! CTEC            [ reduce using rule 100 (empty -> .) ]
  ! LPAREN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]

    mulexp                         shift and go to state 173
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 139

    (90) sumexp -> mulexp MINUS saveOperator . mulexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)

  ! CTEI            [ reduce using rule 100 (empty -> .) ]
  ! CTEF            [ reduce using rule 100 (empty -> .) ]
  ! CTEC            [ reduce using rule 100 (empty -> .) ]
  ! LPAREN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]

    mulexp                         shift and go to state 174
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 140

    (92) mulexp -> pexp MUL saveOperator . pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)

  ! CTEI            [ reduce using rule 100 (empty -> .) ]
  ! CTEF            [ reduce using rule 100 (empty -> .) ]
  ! CTEC            [ reduce using rule 100 (empty -> .) ]
  ! LPAREN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]

    pexp                           shift and go to state 175
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 141

    (93) mulexp -> pexp DIV saveOperator . pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)

  ! CTEI            [ reduce using rule 100 (empty -> .) ]
  ! CTEF            [ reduce using rule 100 (empty -> .) ]
  ! CTEC            [ reduce using rule 100 (empty -> .) ]
  ! LPAREN          [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]

    pexp                           shift and go to state 176
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 142

    (99) pexp -> LPAREN exp RPAREN .

    MUL             reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    DIV             reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    GT              reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    LT              reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    GTE             reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    LTE             reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    NE              reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    AND             reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    OR              reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    TO              reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    CTEI            reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    CTEF            reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    CTEC            reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    LPAREN          reduce using rule 99 (pexp -> LPAREN exp RPAREN .)
    ID              reduce using rule 99 (pexp -> LPAREN exp RPAREN .)


state 143

    (61) llamada -> ID LPAREN exp . RPAREN

    RPAREN          shift and go to state 177


state 144

    (7) main -> MAIN LPAREN param RPAREN LCURLY vars statement RCURLY . END

    END             shift and go to state 178


state 145

    (44) statement -> statement1 statement .

    RCURLY          reduce using rule 44 (statement -> statement1 statement .)
    RETURN          reduce using rule 44 (statement -> statement1 statement .)


state 146

    (46) statement1 -> asignacion SEMICOLON .

    ID              reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    READ            reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    PRINT           reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    FOR             reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    IF              reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    WHILE           reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    RCURLY          reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    RETURN          reduce using rule 46 (statement1 -> asignacion SEMICOLON .)


state 147

    (47) statement1 -> llamada SEMICOLON .

    ID              reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    READ            reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    PRINT           reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    FOR             reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    IF              reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    WHILE           reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    RCURLY          reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    RETURN          reduce using rule 47 (statement1 -> llamada SEMICOLON .)


state 148

    (48) statement1 -> lectura SEMICOLON .

    ID              reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    READ            reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    PRINT           reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    FOR             reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    IF              reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    WHILE           reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    RCURLY          reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    RETURN          reduce using rule 48 (statement1 -> lectura SEMICOLON .)


state 149

    (49) statement1 -> escritura SEMICOLON .

    ID              reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    READ            reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    PRINT           reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    FOR             reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    IF              reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    WHILE           reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    RCURLY          reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    RETURN          reduce using rule 49 (statement1 -> escritura SEMICOLON .)


state 150

    (53) asignacion -> ID EQUALS . exp
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)

    exp                            shift and go to state 179
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 151

    (54) asignacion -> ID arr . EQUALS exp

    EQUALS          shift and go to state 180


state 152

    (55) asignacion -> ID mat . EQUALS exp

    EQUALS          shift and go to state 181


state 153

    (76) lectura -> READ LPAREN . var1 RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (100) empty -> .

    ID              shift and go to state 41
    RPAREN          reduce using rule 100 (empty -> .)

    var1                           shift and go to state 182
    empty                          shift and go to state 42

state 154

    (69) escritura -> PRINT LPAREN . escritura1 RPAREN
    (70) escritura1 -> . escritura2 COMMA escritura2
    (71) escritura1 -> . escritura2
    (72) escritura2 -> . CTESTRING
    (73) escritura2 -> . CTEI
    (74) escritura2 -> . CTEF
    (75) escritura2 -> . exp
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTESTRING       shift and go to state 185
    CTEI            shift and go to state 186
    CTEF            shift and go to state 187
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)

    escritura1                     shift and go to state 183
    escritura2                     shift and go to state 184
    exp                            shift and go to state 188
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 155

    (66) for -> FOR LPAREN . for1 RPAREN LCURLY statement RCURLY
    (67) for1 -> . FROM asignacion TO exp

    FROM            shift and go to state 190

    for1                           shift and go to state 189

state 156

    (62) if -> IF LPAREN . exp RPAREN LCURLY statement RCURLY
    (63) if -> IF LPAREN . exp RPAREN LCURLY statement RCURLY else
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)

    exp                            shift and go to state 191
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 157

    (68) while -> WHILE LPAREN . exp RPAREN LCURLY statement RCURLY
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)

    exp                            shift and go to state 192
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 158

    (42) function1 -> ID save_fun LPAREN param RPAREN SEMICOLON . LCURLY vars statement RCURLY

    LCURLY          shift and go to state 193


state 159

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON . LCURLY vars statement RETURN exp SEMICOLON RCURLY

    LCURLY          shift and go to state 194


state 160

    (18) var1 -> ID arr COMMA var1 addV saveId .

    SEMICOLON       reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    MUL             reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    DIV             reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    PLUS            reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    MINUS           reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    GT              reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    LT              reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    GTE             reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    LTE             reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    NE              reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    AND             reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    OR              reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    RBRACKET        reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    RPAREN          reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    TO              reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    COMMA           reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    CTEI            reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    CTEF            reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    CTEC            reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    LPAREN          reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)
    ID              reduce using rule 18 (var1 -> ID arr COMMA var1 addV saveId .)


state 161

    (19) var1 -> ID mat COMMA var1 addV saveId .

    SEMICOLON       reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    MUL             reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    DIV             reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    PLUS            reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    MINUS           reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    GT              reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    LT              reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    GTE             reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    LTE             reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    NE              reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    AND             reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    OR              reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    RBRACKET        reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    RPAREN          reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    TO              reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    COMMA           reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    CTEI            reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    CTEF            reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    CTEC            reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    LPAREN          reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)
    ID              reduce using rule 19 (var1 -> ID mat COMMA var1 addV saveId .)


state 162

    (31) mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET
    (95) pexp -> CTEI .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 195
    MUL             reduce using rule 95 (pexp -> CTEI .)
    DIV             reduce using rule 95 (pexp -> CTEI .)
    PLUS            reduce using rule 95 (pexp -> CTEI .)
    MINUS           reduce using rule 95 (pexp -> CTEI .)
    GT              reduce using rule 95 (pexp -> CTEI .)
    LT              reduce using rule 95 (pexp -> CTEI .)
    GTE             reduce using rule 95 (pexp -> CTEI .)
    LTE             reduce using rule 95 (pexp -> CTEI .)
    NE              reduce using rule 95 (pexp -> CTEI .)
    AND             reduce using rule 95 (pexp -> CTEI .)
    OR              reduce using rule 95 (pexp -> CTEI .)

  ! RBRACKET        [ reduce using rule 95 (pexp -> CTEI .) ]


state 163

    (34) mat -> LBRACKET CTEI RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 196


state 164

    (32) mat -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 197


state 165

    (33) mat -> LBRACKET exp RBRACKET LBRACKET CTEI . RBRACKET
    (95) pexp -> CTEI .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 198
    MUL             reduce using rule 95 (pexp -> CTEI .)
    DIV             reduce using rule 95 (pexp -> CTEI .)
    PLUS            reduce using rule 95 (pexp -> CTEI .)
    MINUS           reduce using rule 95 (pexp -> CTEI .)
    GT              reduce using rule 95 (pexp -> CTEI .)
    LT              reduce using rule 95 (pexp -> CTEI .)
    GTE             reduce using rule 95 (pexp -> CTEI .)
    LTE             reduce using rule 95 (pexp -> CTEI .)
    NE              reduce using rule 95 (pexp -> CTEI .)
    AND             reduce using rule 95 (pexp -> CTEI .)
    OR              reduce using rule 95 (pexp -> CTEI .)

  ! RBRACKET        [ reduce using rule 95 (pexp -> CTEI .) ]


state 166

    (78) exp -> nexp OR saveOperator nexp .

    RBRACKET        reduce using rule 78 (exp -> nexp OR saveOperator nexp .)
    RPAREN          reduce using rule 78 (exp -> nexp OR saveOperator nexp .)
    SEMICOLON       reduce using rule 78 (exp -> nexp OR saveOperator nexp .)
    TO              reduce using rule 78 (exp -> nexp OR saveOperator nexp .)
    COMMA           reduce using rule 78 (exp -> nexp OR saveOperator nexp .)


state 167

    (80) nexp -> compexp AND saveOperator compexp .

    OR              reduce using rule 80 (nexp -> compexp AND saveOperator compexp .)
    RBRACKET        reduce using rule 80 (nexp -> compexp AND saveOperator compexp .)
    RPAREN          reduce using rule 80 (nexp -> compexp AND saveOperator compexp .)
    SEMICOLON       reduce using rule 80 (nexp -> compexp AND saveOperator compexp .)
    TO              reduce using rule 80 (nexp -> compexp AND saveOperator compexp .)
    COMMA           reduce using rule 80 (nexp -> compexp AND saveOperator compexp .)


state 168

    (83) compexp1 -> sumexp GT saveOperator sumexp .

    CTEI            reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    CTEF            reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    CTEC            reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    LPAREN          reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    ID              reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    PLUS            reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    MINUS           reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    MUL             reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    DIV             reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    AND             reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    OR              reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    RBRACKET        reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    RPAREN          reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    SEMICOLON       reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    TO              reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)
    COMMA           reduce using rule 83 (compexp1 -> sumexp GT saveOperator sumexp .)


state 169

    (84) compexp1 -> sumexp LT saveOperator sumexp .

    CTEI            reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    CTEF            reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    CTEC            reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    LPAREN          reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    ID              reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    PLUS            reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    MINUS           reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    MUL             reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    DIV             reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    AND             reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    OR              reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    RBRACKET        reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    RPAREN          reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    SEMICOLON       reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    TO              reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)
    COMMA           reduce using rule 84 (compexp1 -> sumexp LT saveOperator sumexp .)


state 170

    (85) compexp1 -> sumexp GTE saveOperator sumexp .

    CTEI            reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    CTEF            reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    CTEC            reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    LPAREN          reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    ID              reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    PLUS            reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    MINUS           reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    MUL             reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    DIV             reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    AND             reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    OR              reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    RBRACKET        reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    RPAREN          reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    SEMICOLON       reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    TO              reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)
    COMMA           reduce using rule 85 (compexp1 -> sumexp GTE saveOperator sumexp .)


state 171

    (86) compexp1 -> sumexp LTE saveOperator sumexp .

    CTEI            reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    CTEF            reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    CTEC            reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    LPAREN          reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    ID              reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    PLUS            reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    MINUS           reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    MUL             reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    DIV             reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    AND             reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    OR              reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    RBRACKET        reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    RPAREN          reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    SEMICOLON       reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    TO              reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)
    COMMA           reduce using rule 86 (compexp1 -> sumexp LTE saveOperator sumexp .)


state 172

    (87) compexp1 -> sumexp NE saveOperator sumexp .

    CTEI            reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    CTEF            reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    CTEC            reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    LPAREN          reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    ID              reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    PLUS            reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    MINUS           reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    MUL             reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    DIV             reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    AND             reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    OR              reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    RBRACKET        reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    RPAREN          reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    SEMICOLON       reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    TO              reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)
    COMMA           reduce using rule 87 (compexp1 -> sumexp NE saveOperator sumexp .)


state 173

    (89) sumexp -> mulexp PLUS saveOperator mulexp .

    GT              reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    LT              reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    GTE             reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    LTE             reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    NE              reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    AND             reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    OR              reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    RBRACKET        reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    RPAREN          reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    SEMICOLON       reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    TO              reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    COMMA           reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    CTEI            reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    CTEF            reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    CTEC            reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    LPAREN          reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    ID              reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    PLUS            reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    MINUS           reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    MUL             reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)
    DIV             reduce using rule 89 (sumexp -> mulexp PLUS saveOperator mulexp .)


state 174

    (90) sumexp -> mulexp MINUS saveOperator mulexp .

    GT              reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    LT              reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    GTE             reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    LTE             reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    NE              reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    AND             reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    OR              reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    RBRACKET        reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    RPAREN          reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    SEMICOLON       reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    TO              reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    COMMA           reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    CTEI            reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    CTEF            reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    CTEC            reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    LPAREN          reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    ID              reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    PLUS            reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    MINUS           reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    MUL             reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)
    DIV             reduce using rule 90 (sumexp -> mulexp MINUS saveOperator mulexp .)


state 175

    (92) mulexp -> pexp MUL saveOperator pexp .

    PLUS            reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    MINUS           reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    GT              reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    LT              reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    GTE             reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    LTE             reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    NE              reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    AND             reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    OR              reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    RBRACKET        reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    RPAREN          reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    SEMICOLON       reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    TO              reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    COMMA           reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    CTEI            reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    CTEF            reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    CTEC            reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    LPAREN          reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    ID              reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    MUL             reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)
    DIV             reduce using rule 92 (mulexp -> pexp MUL saveOperator pexp .)


state 176

    (93) mulexp -> pexp DIV saveOperator pexp .

    PLUS            reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    MINUS           reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    GT              reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    LT              reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    GTE             reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    LTE             reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    NE              reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    AND             reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    OR              reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    RBRACKET        reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    RPAREN          reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    SEMICOLON       reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    TO              reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    COMMA           reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    CTEI            reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    CTEF            reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    CTEC            reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    LPAREN          reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    ID              reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    MUL             reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)
    DIV             reduce using rule 93 (mulexp -> pexp DIV saveOperator pexp .)


state 177

    (61) llamada -> ID LPAREN exp RPAREN .

    MUL             reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    DIV             reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    PLUS            reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    MINUS           reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    GT              reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    LT              reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    GTE             reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    LTE             reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    NE              reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    AND             reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    OR              reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    RPAREN          reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    TO              reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    COMMA           reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    CTEI            reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    CTEF            reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    CTEC            reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    LPAREN          reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)
    ID              reduce using rule 61 (llamada -> ID LPAREN exp RPAREN .)


state 178

    (7) main -> MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END .

    $end            reduce using rule 7 (main -> MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END .)


state 179

    (53) asignacion -> ID EQUALS exp .

    SEMICOLON       reduce using rule 53 (asignacion -> ID EQUALS exp .)
    TO              reduce using rule 53 (asignacion -> ID EQUALS exp .)


state 180

    (54) asignacion -> ID arr EQUALS . exp
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)

    exp                            shift and go to state 199
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 181

    (55) asignacion -> ID mat EQUALS . exp
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)

    exp                            shift and go to state 200
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 182

    (76) lectura -> READ LPAREN var1 . RPAREN

    RPAREN          shift and go to state 201


state 183

    (69) escritura -> PRINT LPAREN escritura1 . RPAREN

    RPAREN          shift and go to state 202


state 184

    (70) escritura1 -> escritura2 . COMMA escritura2
    (71) escritura1 -> escritura2 .

    COMMA           shift and go to state 203
    RPAREN          reduce using rule 71 (escritura1 -> escritura2 .)


state 185

    (72) escritura2 -> CTESTRING .

    COMMA           reduce using rule 72 (escritura2 -> CTESTRING .)
    RPAREN          reduce using rule 72 (escritura2 -> CTESTRING .)


state 186

    (73) escritura2 -> CTEI .
    (95) pexp -> CTEI .

  ! reduce/reduce conflict for COMMA resolved using rule 73 (escritura2 -> CTEI .)
  ! reduce/reduce conflict for RPAREN resolved using rule 73 (escritura2 -> CTEI .)
    COMMA           reduce using rule 73 (escritura2 -> CTEI .)
    RPAREN          reduce using rule 73 (escritura2 -> CTEI .)
    MUL             reduce using rule 95 (pexp -> CTEI .)
    DIV             reduce using rule 95 (pexp -> CTEI .)
    PLUS            reduce using rule 95 (pexp -> CTEI .)
    MINUS           reduce using rule 95 (pexp -> CTEI .)
    GT              reduce using rule 95 (pexp -> CTEI .)
    LT              reduce using rule 95 (pexp -> CTEI .)
    GTE             reduce using rule 95 (pexp -> CTEI .)
    LTE             reduce using rule 95 (pexp -> CTEI .)
    NE              reduce using rule 95 (pexp -> CTEI .)
    AND             reduce using rule 95 (pexp -> CTEI .)
    OR              reduce using rule 95 (pexp -> CTEI .)

  ! COMMA           [ reduce using rule 95 (pexp -> CTEI .) ]
  ! RPAREN          [ reduce using rule 95 (pexp -> CTEI .) ]


state 187

    (74) escritura2 -> CTEF .
    (96) pexp -> CTEF .

  ! reduce/reduce conflict for COMMA resolved using rule 74 (escritura2 -> CTEF .)
  ! reduce/reduce conflict for RPAREN resolved using rule 74 (escritura2 -> CTEF .)
    COMMA           reduce using rule 74 (escritura2 -> CTEF .)
    RPAREN          reduce using rule 74 (escritura2 -> CTEF .)
    MUL             reduce using rule 96 (pexp -> CTEF .)
    DIV             reduce using rule 96 (pexp -> CTEF .)
    PLUS            reduce using rule 96 (pexp -> CTEF .)
    MINUS           reduce using rule 96 (pexp -> CTEF .)
    GT              reduce using rule 96 (pexp -> CTEF .)
    LT              reduce using rule 96 (pexp -> CTEF .)
    GTE             reduce using rule 96 (pexp -> CTEF .)
    LTE             reduce using rule 96 (pexp -> CTEF .)
    NE              reduce using rule 96 (pexp -> CTEF .)
    AND             reduce using rule 96 (pexp -> CTEF .)
    OR              reduce using rule 96 (pexp -> CTEF .)

  ! COMMA           [ reduce using rule 96 (pexp -> CTEF .) ]
  ! RPAREN          [ reduce using rule 96 (pexp -> CTEF .) ]


state 188

    (75) escritura2 -> exp .

    COMMA           reduce using rule 75 (escritura2 -> exp .)
    RPAREN          reduce using rule 75 (escritura2 -> exp .)


state 189

    (66) for -> FOR LPAREN for1 . RPAREN LCURLY statement RCURLY

    RPAREN          shift and go to state 204


state 190

    (67) for1 -> FROM . asignacion TO exp
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp

    ID              shift and go to state 206

    asignacion                     shift and go to state 205

state 191

    (62) if -> IF LPAREN exp . RPAREN LCURLY statement RCURLY
    (63) if -> IF LPAREN exp . RPAREN LCURLY statement RCURLY else

    RPAREN          shift and go to state 207


state 192

    (68) while -> WHILE LPAREN exp . RPAREN LCURLY statement RCURLY

    RPAREN          shift and go to state 208


state 193

    (42) function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY . vars statement RCURLY
    (12) vars -> . var
    (13) vars -> . empty
    (14) var -> . VAR var2
    (100) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 100 (empty -> .)
    READ            reduce using rule 100 (empty -> .)
    PRINT           reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)

    vars                           shift and go to state 209
    var                            shift and go to state 9
    empty                          shift and go to state 10

state 194

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY . vars statement RETURN exp SEMICOLON RCURLY
    (12) vars -> . var
    (13) vars -> . empty
    (14) var -> . VAR var2
    (100) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 100 (empty -> .)
    READ            reduce using rule 100 (empty -> .)
    PRINT           reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)

    vars                           shift and go to state 210
    var                            shift and go to state 9
    empty                          shift and go to state 10

state 195

    (31) mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    TRANSPUESTA     reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    INVERSA         reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    DETERMINANTE    reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTEI            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTEF            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTEC            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    ID              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 196

    (34) mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .

    COMMA           reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    TRANSPUESTA     reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    INVERSA         reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    DETERMINANTE    reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    MUL             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    DIV             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    GTE             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LTE             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    TO              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTEI            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTEF            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTEC            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LPAREN          reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    ID              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)


state 197

    (32) mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    COMMA           reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TRANSPUESTA     reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    INVERSA         reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DETERMINANTE    reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MUL             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIV             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GTE             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LTE             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TO              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTEI            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTEF            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTEC            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LPAREN          reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    ID              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 198

    (33) mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    TRANSPUESTA     reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    INVERSA         reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    DETERMINANTE    reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTEI            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTEF            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTEC            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    ID              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)


state 199

    (54) asignacion -> ID arr EQUALS exp .

    SEMICOLON       reduce using rule 54 (asignacion -> ID arr EQUALS exp .)
    TO              reduce using rule 54 (asignacion -> ID arr EQUALS exp .)


state 200

    (55) asignacion -> ID mat EQUALS exp .

    SEMICOLON       reduce using rule 55 (asignacion -> ID mat EQUALS exp .)
    TO              reduce using rule 55 (asignacion -> ID mat EQUALS exp .)


state 201

    (76) lectura -> READ LPAREN var1 RPAREN .

    SEMICOLON       reduce using rule 76 (lectura -> READ LPAREN var1 RPAREN .)


state 202

    (69) escritura -> PRINT LPAREN escritura1 RPAREN .

    SEMICOLON       reduce using rule 69 (escritura -> PRINT LPAREN escritura1 RPAREN .)


state 203

    (70) escritura1 -> escritura2 COMMA . escritura2
    (72) escritura2 -> . CTESTRING
    (73) escritura2 -> . CTEI
    (74) escritura2 -> . CTEF
    (75) escritura2 -> . exp
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTESTRING       shift and go to state 185
    CTEI            shift and go to state 186
    CTEF            shift and go to state 187
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)

    escritura2                     shift and go to state 211
    exp                            shift and go to state 188
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 204

    (66) for -> FOR LPAREN for1 RPAREN . LCURLY statement RCURLY

    LCURLY          shift and go to state 212


state 205

    (67) for1 -> FROM asignacion . TO exp

    TO              shift and go to state 213


state 206

    (53) asignacion -> ID . EQUALS exp
    (54) asignacion -> ID . arr EQUALS exp
    (55) asignacion -> ID . mat EQUALS exp
    (29) arr -> . LBRACKET CTEI RBRACKET
    (30) arr -> . LBRACKET exp RBRACKET
    (31) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

    EQUALS          shift and go to state 150
    LBRACKET        shift and go to state 56

    arr                            shift and go to state 151
    mat                            shift and go to state 152

state 207

    (62) if -> IF LPAREN exp RPAREN . LCURLY statement RCURLY
    (63) if -> IF LPAREN exp RPAREN . LCURLY statement RCURLY else

    LCURLY          shift and go to state 214


state 208

    (68) while -> WHILE LPAREN exp RPAREN . LCURLY statement RCURLY

    LCURLY          shift and go to state 215


state 209

    (42) function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars . statement RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (100) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (61) llamada -> . ID LPAREN exp RPAREN
    (76) lectura -> . READ LPAREN var1 RPAREN
    (69) escritura -> . PRINT LPAREN escritura1 RPAREN
    (66) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (62) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (68) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 100 (empty -> .)
    ID              shift and go to state 118
    READ            shift and go to state 119
    PRINT           shift and go to state 120
    FOR             shift and go to state 121
    IF              shift and go to state 122
    WHILE           shift and go to state 123

    statement                      shift and go to state 216
    statement1                     shift and go to state 109
    empty                          shift and go to state 110
    asignacion                     shift and go to state 111
    llamada                        shift and go to state 112
    lectura                        shift and go to state 113
    escritura                      shift and go to state 114
    for                            shift and go to state 115
    if                             shift and go to state 116
    while                          shift and go to state 117

state 210

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars . statement RETURN exp SEMICOLON RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (100) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (61) llamada -> . ID LPAREN exp RPAREN
    (76) lectura -> . READ LPAREN var1 RPAREN
    (69) escritura -> . PRINT LPAREN escritura1 RPAREN
    (66) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (62) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (68) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RETURN          reduce using rule 100 (empty -> .)
    ID              shift and go to state 118
    READ            shift and go to state 119
    PRINT           shift and go to state 120
    FOR             shift and go to state 121
    IF              shift and go to state 122
    WHILE           shift and go to state 123

    statement                      shift and go to state 217
    statement1                     shift and go to state 109
    empty                          shift and go to state 110
    asignacion                     shift and go to state 111
    llamada                        shift and go to state 112
    lectura                        shift and go to state 113
    escritura                      shift and go to state 114
    for                            shift and go to state 115
    if                             shift and go to state 116
    while                          shift and go to state 117

state 211

    (70) escritura1 -> escritura2 COMMA escritura2 .

    RPAREN          reduce using rule 70 (escritura1 -> escritura2 COMMA escritura2 .)


state 212

    (66) for -> FOR LPAREN for1 RPAREN LCURLY . statement RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (100) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (61) llamada -> . ID LPAREN exp RPAREN
    (76) lectura -> . READ LPAREN var1 RPAREN
    (69) escritura -> . PRINT LPAREN escritura1 RPAREN
    (66) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (62) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (68) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 100 (empty -> .)
    ID              shift and go to state 118
    READ            shift and go to state 119
    PRINT           shift and go to state 120
    FOR             shift and go to state 121
    IF              shift and go to state 122
    WHILE           shift and go to state 123

    statement                      shift and go to state 218
    statement1                     shift and go to state 109
    empty                          shift and go to state 110
    asignacion                     shift and go to state 111
    llamada                        shift and go to state 112
    lectura                        shift and go to state 113
    escritura                      shift and go to state 114
    for                            shift and go to state 115
    if                             shift and go to state 116
    while                          shift and go to state 117

state 213

    (67) for1 -> FROM asignacion TO . exp
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)

    exp                            shift and go to state 219
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 214

    (62) if -> IF LPAREN exp RPAREN LCURLY . statement RCURLY
    (63) if -> IF LPAREN exp RPAREN LCURLY . statement RCURLY else
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (100) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (61) llamada -> . ID LPAREN exp RPAREN
    (76) lectura -> . READ LPAREN var1 RPAREN
    (69) escritura -> . PRINT LPAREN escritura1 RPAREN
    (66) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (62) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (68) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 100 (empty -> .)
    ID              shift and go to state 118
    READ            shift and go to state 119
    PRINT           shift and go to state 120
    FOR             shift and go to state 121
    IF              shift and go to state 122
    WHILE           shift and go to state 123

    statement                      shift and go to state 220
    statement1                     shift and go to state 109
    empty                          shift and go to state 110
    asignacion                     shift and go to state 111
    llamada                        shift and go to state 112
    lectura                        shift and go to state 113
    escritura                      shift and go to state 114
    for                            shift and go to state 115
    if                             shift and go to state 116
    while                          shift and go to state 117

state 215

    (68) while -> WHILE LPAREN exp RPAREN LCURLY . statement RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (100) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (61) llamada -> . ID LPAREN exp RPAREN
    (76) lectura -> . READ LPAREN var1 RPAREN
    (69) escritura -> . PRINT LPAREN escritura1 RPAREN
    (66) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (62) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (68) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 100 (empty -> .)
    ID              shift and go to state 118
    READ            shift and go to state 119
    PRINT           shift and go to state 120
    FOR             shift and go to state 121
    IF              shift and go to state 122
    WHILE           shift and go to state 123

    statement                      shift and go to state 221
    statement1                     shift and go to state 109
    empty                          shift and go to state 110
    asignacion                     shift and go to state 111
    llamada                        shift and go to state 112
    lectura                        shift and go to state 113
    escritura                      shift and go to state 114
    for                            shift and go to state 115
    if                             shift and go to state 116
    while                          shift and go to state 117

state 216

    (42) function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement . RCURLY

    RCURLY          shift and go to state 222


state 217

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement . RETURN exp SEMICOLON RCURLY

    RETURN          shift and go to state 223


state 218

    (66) for -> FOR LPAREN for1 RPAREN LCURLY statement . RCURLY

    RCURLY          shift and go to state 224


state 219

    (67) for1 -> FROM asignacion TO exp .

    RPAREN          reduce using rule 67 (for1 -> FROM asignacion TO exp .)


state 220

    (62) if -> IF LPAREN exp RPAREN LCURLY statement . RCURLY
    (63) if -> IF LPAREN exp RPAREN LCURLY statement . RCURLY else

    RCURLY          shift and go to state 225


state 221

    (68) while -> WHILE LPAREN exp RPAREN LCURLY statement . RCURLY

    RCURLY          shift and go to state 226


state 222

    (42) function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY .

    FUN             reduce using rule 42 (function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY .)
    MAIN            reduce using rule 42 (function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY .)
    $end            reduce using rule 42 (function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY .)


state 223

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN . exp SEMICOLON RCURLY
    (77) exp -> . nexp
    (78) exp -> . nexp OR saveOperator nexp
    (79) nexp -> . compexp
    (80) nexp -> . compexp AND saveOperator compexp
    (81) compexp -> . sumexp
    (82) compexp -> . compexp1 sumexp
    (88) sumexp -> . mulexp
    (89) sumexp -> . mulexp PLUS saveOperator mulexp
    (90) sumexp -> . mulexp MINUS saveOperator mulexp
    (83) compexp1 -> . sumexp GT saveOperator sumexp
    (84) compexp1 -> . sumexp LT saveOperator sumexp
    (85) compexp1 -> . sumexp GTE saveOperator sumexp
    (86) compexp1 -> . sumexp LTE saveOperator sumexp
    (87) compexp1 -> . sumexp NE saveOperator sumexp
    (91) mulexp -> . pexp
    (92) mulexp -> . pexp MUL saveOperator pexp
    (93) mulexp -> . pexp DIV saveOperator pexp
    (94) pexp -> . var1
    (95) pexp -> . CTEI
    (96) pexp -> . CTEF
    (97) pexp -> . CTEC
    (98) pexp -> . llamada
    (99) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV saveId
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV saveId
    (19) var1 -> . ID mat COMMA var1 addV saveId
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (61) llamada -> . ID LPAREN exp RPAREN
    (100) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    LPAREN          shift and go to state 81
    ID              shift and go to state 82
    MUL             reduce using rule 100 (empty -> .)
    DIV             reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    NE              reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)

    exp                            shift and go to state 227
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 80
    empty                          shift and go to state 42

state 224

    (66) for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .

    ID              reduce using rule 66 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    READ            reduce using rule 66 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    PRINT           reduce using rule 66 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    FOR             reduce using rule 66 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    IF              reduce using rule 66 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    WHILE           reduce using rule 66 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    RCURLY          reduce using rule 66 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    RETURN          reduce using rule 66 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)


state 225

    (62) if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .
    (63) if -> IF LPAREN exp RPAREN LCURLY statement RCURLY . else
    (64) else -> . ELSE LCURLY statement RCURLY
    (65) else -> . empty
    (100) empty -> .

  ! reduce/reduce conflict for ID resolved using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for READ resolved using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for PRINT resolved using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for FOR resolved using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for IF resolved using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for WHILE resolved using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for RCURLY resolved using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for RETURN resolved using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    ID              reduce using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    READ            reduce using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    PRINT           reduce using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    FOR             reduce using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    IF              reduce using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    WHILE           reduce using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    RCURLY          reduce using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    RETURN          reduce using rule 62 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    ELSE            shift and go to state 229

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! READ            [ reduce using rule 100 (empty -> .) ]
  ! PRINT           [ reduce using rule 100 (empty -> .) ]
  ! FOR             [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! WHILE           [ reduce using rule 100 (empty -> .) ]
  ! RCURLY          [ reduce using rule 100 (empty -> .) ]
  ! RETURN          [ reduce using rule 100 (empty -> .) ]

    else                           shift and go to state 228
    empty                          shift and go to state 230

state 226

    (68) while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .

    ID              reduce using rule 68 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    READ            reduce using rule 68 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    PRINT           reduce using rule 68 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    FOR             reduce using rule 68 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    IF              reduce using rule 68 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    WHILE           reduce using rule 68 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    RCURLY          reduce using rule 68 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    RETURN          reduce using rule 68 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)


state 227

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp . SEMICOLON RCURLY

    SEMICOLON       shift and go to state 231


state 228

    (63) if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .

    ID              reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    READ            reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    PRINT           reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    FOR             reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    IF              reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    WHILE           reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    RCURLY          reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    RETURN          reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)


state 229

    (64) else -> ELSE . LCURLY statement RCURLY

    LCURLY          shift and go to state 232


state 230

    (65) else -> empty .

    ID              reduce using rule 65 (else -> empty .)
    READ            reduce using rule 65 (else -> empty .)
    PRINT           reduce using rule 65 (else -> empty .)
    FOR             reduce using rule 65 (else -> empty .)
    IF              reduce using rule 65 (else -> empty .)
    WHILE           reduce using rule 65 (else -> empty .)
    RCURLY          reduce using rule 65 (else -> empty .)
    RETURN          reduce using rule 65 (else -> empty .)


state 231

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON . RCURLY

    RCURLY          shift and go to state 233


state 232

    (64) else -> ELSE LCURLY . statement RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (100) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (61) llamada -> . ID LPAREN exp RPAREN
    (76) lectura -> . READ LPAREN var1 RPAREN
    (69) escritura -> . PRINT LPAREN escritura1 RPAREN
    (66) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (62) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (68) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 100 (empty -> .)
    ID              shift and go to state 118
    READ            shift and go to state 119
    PRINT           shift and go to state 120
    FOR             shift and go to state 121
    IF              shift and go to state 122
    WHILE           shift and go to state 123

    statement                      shift and go to state 234
    statement1                     shift and go to state 109
    empty                          shift and go to state 110
    asignacion                     shift and go to state 111
    llamada                        shift and go to state 112
    lectura                        shift and go to state 113
    escritura                      shift and go to state 114
    for                            shift and go to state 115
    if                             shift and go to state 116
    while                          shift and go to state 117

state 233

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY .

    FUN             reduce using rule 43 (function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY .)
    MAIN            reduce using rule 43 (function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY .)
    $end            reduce using rule 43 (function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY .)


state 234

    (64) else -> ELSE LCURLY statement . RCURLY

    RCURLY          shift and go to state 235


state 235

    (64) else -> ELSE LCURLY statement RCURLY .

    ID              reduce using rule 64 (else -> ELSE LCURLY statement RCURLY .)
    READ            reduce using rule 64 (else -> ELSE LCURLY statement RCURLY .)
    PRINT           reduce using rule 64 (else -> ELSE LCURLY statement RCURLY .)
    FOR             reduce using rule 64 (else -> ELSE LCURLY statement RCURLY .)
    IF              reduce using rule 64 (else -> ELSE LCURLY statement RCURLY .)
    WHILE           reduce using rule 64 (else -> ELSE LCURLY statement RCURLY .)
    RCURLY          reduce using rule 64 (else -> ELSE LCURLY statement RCURLY .)
    RETURN          reduce using rule 64 (else -> ELSE LCURLY statement RCURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAIN in state 5 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 41 resolved as shift
WARNING: shift/reduce conflict for ID in state 53 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 54 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 55 resolved as shift
WARNING: shift/reduce conflict for ID in state 63 resolved as shift
WARNING: shift/reduce conflict for ID in state 64 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MUL in state 76 resolved as shift
WARNING: shift/reduce conflict for DIV in state 76 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 82 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 82 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 133 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 133 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 133 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 133 resolved as shift
WARNING: shift/reduce conflict for ID in state 133 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 134 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 134 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 134 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 134 resolved as shift
WARNING: shift/reduce conflict for ID in state 134 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 135 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 135 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 135 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 135 resolved as shift
WARNING: shift/reduce conflict for ID in state 135 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 136 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 136 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 136 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 136 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 137 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 137 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 137 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 137 resolved as shift
WARNING: shift/reduce conflict for ID in state 137 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 138 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 138 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 138 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 138 resolved as shift
WARNING: shift/reduce conflict for ID in state 138 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 139 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 139 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 139 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 139 resolved as shift
WARNING: shift/reduce conflict for ID in state 139 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 140 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 140 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 140 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 140 resolved as shift
WARNING: shift/reduce conflict for ID in state 140 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 141 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 141 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 141 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 141 resolved as shift
WARNING: shift/reduce conflict for ID in state 141 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 162 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 165 resolved as shift
WARNING: reduce/reduce conflict in state 186 resolved using rule (escritura2 -> CTEI)
WARNING: rejected rule (pexp -> CTEI) in state 186
WARNING: reduce/reduce conflict in state 187 resolved using rule (escritura2 -> CTEF)
WARNING: rejected rule (pexp -> CTEF) in state 187
WARNING: reduce/reduce conflict in state 225 resolved using rule (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY)
WARNING: rejected rule (empty -> <empty>) in state 225
