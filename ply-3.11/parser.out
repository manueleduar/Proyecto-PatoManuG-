Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON addP programa1
Rule 2     addP -> <empty>
Rule 3     programa1 -> vars modules programa2
Rule 4     programa1 -> vars modules
Rule 5     programa1 -> programa2
Rule 6     programa2 -> main
Rule 7     main -> MAIN LPAREN param2 RPAREN LCURLY vars statement RCURLY END
Rule 8     tipo -> INT guardaTipoVar
Rule 9     tipo -> FLOAT guardaTipoVar
Rule 10    tipo -> CHAR guardaTipoVar
Rule 11    guardaTipoVar -> <empty>
Rule 12    vars -> var
Rule 13    vars -> empty
Rule 14    var -> VAR var2
Rule 15    var1 -> ID
Rule 16    var1 -> ID COMMA var1 addV
Rule 17    var1 -> ID arr
Rule 18    var1 -> ID arr COMMA var1 addV
Rule 19    var1 -> ID mat COMMA var1 addV
Rule 20    var1 -> ID mat
Rule 21    var1 -> ID mat especial
Rule 22    var1 -> empty
Rule 23    addV -> <empty>
Rule 24    var2 -> var2 tipo var1 SEMICOLON addV
Rule 25    var2 -> empty
Rule 26    especial -> TRANSPUESTA
Rule 27    especial -> INVERSA
Rule 28    especial -> DETERMINANTE
Rule 29    arr -> LBRACKET CTEI RBRACKET
Rule 30    arr -> LBRACKET exp RBRACKET
Rule 31    mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 32    mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 33    mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
Rule 34    mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET
Rule 35    modules -> function modules
Rule 36    modules -> empty
Rule 37    save_fun -> <empty>
Rule 38    function -> FUN VOID function1
Rule 39    function -> FUN INT function2
Rule 40    function -> FUN CHAR function2
Rule 41    function -> FUN FLOAT function2
Rule 42    function1 -> ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars statement RCURLY
Rule 43    function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY
Rule 44    statement -> statement1 statement
Rule 45    statement -> empty
Rule 46    statement1 -> asignacion SEMICOLON
Rule 47    statement1 -> llamada SEMICOLON
Rule 48    statement1 -> lectura SEMICOLON
Rule 49    statement1 -> escritura SEMICOLON
Rule 50    statement1 -> for
Rule 51    statement1 -> if
Rule 52    statement1 -> while
Rule 53    asignacion -> ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion
Rule 54    asignacion -> ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion
Rule 55    asignacion -> ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion
Rule 56    genera_quad_asignacion -> <empty>
Rule 57    addOperadorName -> <empty>
Rule 58    param -> <empty>
Rule 59    param -> empty
Rule 60    param1 -> ID
Rule 61    param1 -> ID COMMA var1 addV
Rule 62    param1 -> ID arr
Rule 63    param1 -> ID arr COMMA var1 addV
Rule 64    param1 -> ID mat COMMA var1 addV
Rule 65    param1 -> ID mat
Rule 66    param1 -> ID mat especial
Rule 67    param1 -> empty
Rule 68    param2 -> param2 tipo var1 addV
Rule 69    param2 -> empty
Rule 70    llamada -> ID LPAREN exp RPAREN
Rule 71    if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY
Rule 72    if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else
Rule 73    else -> ELSE else_quad LCURLY statement RCURLY
Rule 74    else -> empty
Rule 75    for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY
Rule 76    for1 -> FROM asignacion TO exp
Rule 77    while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY
Rule 78    escritura -> PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN
Rule 79    escritura1 -> escritura2 COMMA escritura2
Rule 80    escritura1 -> escritura2
Rule 81    escritura2 -> COMILLA CTESTRING COMILLA
Rule 82    escritura2 -> CTEI saveCTE operatorPrintQuad
Rule 83    escritura2 -> CTEF saveCTE operatorPrintQuad
Rule 84    escritura2 -> exp
Rule 85    lectura -> READ operatorRead LPAREN var1 operatorReadQuad RPAREN
Rule 86    exp -> nexp
Rule 87    exp -> nexp OR addOperadorName nexp genera_quad_or
Rule 88    genera_quad_or -> <empty>
Rule 89    genera_quad_and -> <empty>
Rule 90    compare_quad -> <empty>
Rule 91    if_quad -> <empty>
Rule 92    else_quad -> <empty>
Rule 93    nexp -> compexp
Rule 94    nexp -> compexp AND addOperadorName compexp genera_quad_and
Rule 95    compexp -> sumexp
Rule 96    compexp -> compexp1 sumexp
Rule 97    compexp1 -> sumexp GT addOperadorName sumexp compare_quad
Rule 98    compexp1 -> sumexp LT addOperadorName sumexp compare_quad
Rule 99    compexp1 -> sumexp GTE addOperadorName sumexp compare_quad
Rule 100   compexp1 -> sumexp LTE addOperadorName sumexp compare_quad
Rule 101   compexp1 -> sumexp NE addOperadorName sumexp compare_quad
Rule 102   compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad
Rule 103   sumexp -> mulexp
Rule 104   sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad
Rule 105   sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad
Rule 106   genera_sum_quad -> <empty>
Rule 107   genera_mul_quad -> <empty>
Rule 108   operadorPrint -> <empty>
Rule 109   operatorPrintQuad -> <empty>
Rule 110   operatorRead -> <empty>
Rule 111   operatorReadQuad -> <empty>
Rule 112   mulexp -> pexp
Rule 113   mulexp -> pexp MUL addOperadorName pexp genera_mul_quad
Rule 114   mulexp -> pexp DIV addOperadorName pexp genera_mul_quad
Rule 115   pexp -> var1 saveId
Rule 116   pexp -> CTEI saveCTE
Rule 117   pexp -> CTEF saveCTE
Rule 118   pexp -> CTEC saveCTE
Rule 119   pexp -> CTESTRING saveCTE
Rule 120   pexp -> llamada
Rule 121   pexp -> LPAREN exp RPAREN
Rule 122   empty -> <empty>
Rule 123   saveId -> <empty>
Rule 124   saveId2 -> <empty>
Rule 125   saveCTE -> <empty>

Terminals, with rules where they appear

AND                  : 94
CHAR                 : 10 40
COMILLA              : 81 81
COMMA                : 16 18 19 61 63 64 79
COMPARE              : 102
CTEC                 : 118
CTEF                 : 83 117
CTEI                 : 29 31 31 33 34 82 116
CTESTRING            : 81 119
DETERMINANTE         : 28
DIV                  : 114
ELSE                 : 73
END                  : 7
EQUALS               : 53 54 55
FLOAT                : 9 41
FOR                  : 75
FROM                 : 76
FUN                  : 38 39 40 41
GT                   : 97
GTE                  : 99
ID                   : 1 15 16 17 18 19 20 21 42 43 53 54 55 60 61 62 63 64 65 66 70
IF                   : 71 72
INT                  : 8 39
INVERSA              : 27
LBRACKET             : 29 30 31 31 32 32 33 33 34 34
LCURLY               : 7 42 43 71 72 73 75 77
LPAREN               : 7 42 43 70 71 72 75 77 78 85 121
LT                   : 98
LTE                  : 100
MAIN                 : 7
MINUS                : 105
MUL                  : 113
NE                   : 101
OR                   : 87
PLUS                 : 104
PRINT                : 78
PROGRAM              : 1
RBRACKET             : 29 30 31 31 32 32 33 33 34 34
RCURLY               : 7 42 43 71 72 73 75 77
READ                 : 85
RETURN               : 43
RPAREN               : 7 42 43 70 71 72 75 77 78 85 121
SEMICOLON            : 1 24 42 43 43 46 47 48 49
TO                   : 76
TRANSPUESTA          : 26
VAR                  : 14
VOID                 : 38
WHILE                : 77
error                : 

Nonterminals, with rules where they appear

addOperadorName      : 53 54 55 87 94 97 98 99 100 101 102 104 105 113 114
addP                 : 1
addV                 : 16 18 19 24 61 63 64 68
arr                  : 17 18 54 62 63
asignacion           : 46 76
compare_quad         : 97 98 99 100 101 102
compexp              : 93 94 94
compexp1             : 96
else                 : 72
else_quad            : 73
empty                : 13 22 25 36 45 59 67 69 74
escritura            : 49
escritura1           : 78
escritura2           : 79 79 80
especial             : 21 66
exp                  : 30 32 32 33 34 43 53 54 55 70 71 72 76 77 84 121
for                  : 50
for1                 : 75
function             : 35
function1            : 38
function2            : 39 40 41
genera_mul_quad      : 113 114
genera_quad_and      : 94
genera_quad_asignacion : 53 54 55
genera_quad_or       : 87
genera_sum_quad      : 104 105
guardaTipoVar        : 8 9 10
if                   : 51
if_quad              : 71 72
lectura              : 48
llamada              : 47 120
main                 : 6
mat                  : 19 20 21 55 64 65 66
modules              : 3 4 35
mulexp               : 103 104 104 105 105
nexp                 : 86 87 87
operadorPrint        : 78
operatorPrintQuad    : 78 82 83
operatorRead         : 85
operatorReadQuad     : 85
param                : 43
param1               : 
param2               : 7 42 68
pexp                 : 112 113 113 114 114
programa             : 0
programa1            : 1
programa2            : 3 5
saveCTE              : 82 83 116 117 118 119
saveId               : 115
saveId2              : 53 54 55
save_fun             : 42 43
statement            : 7 42 43 44 71 72 73 75 77
statement1           : 44
sumexp               : 95 96 97 97 98 98 99 99 100 100 101 101 102 102
tipo                 : 24 68
var                  : 12
var1                 : 16 18 19 24 61 63 64 68 85 115
var2                 : 14 24
vars                 : 3 4 7 42 43
while                : 52

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON addP programa1

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON addP programa1

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON addP programa1

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . addP programa1
    (2) addP -> .

    VAR             reduce using rule 2 (addP -> .)
    MAIN            reduce using rule 2 (addP -> .)
    FUN             reduce using rule 2 (addP -> .)
    $end            reduce using rule 2 (addP -> .)

    addP                           shift and go to state 5

state 5

    (1) programa -> PROGRAM ID SEMICOLON addP . programa1
    (3) programa1 -> . vars modules programa2
    (4) programa1 -> . vars modules
    (5) programa1 -> . programa2
    (12) vars -> . var
    (13) vars -> . empty
    (6) programa2 -> . main
    (14) var -> . VAR var2
    (122) empty -> .
    (7) main -> . MAIN LPAREN param2 RPAREN LCURLY vars statement RCURLY END

  ! shift/reduce conflict for MAIN resolved as shift
    VAR             shift and go to state 12
    FUN             reduce using rule 122 (empty -> .)
    $end            reduce using rule 122 (empty -> .)
    MAIN            shift and go to state 13

  ! MAIN            [ reduce using rule 122 (empty -> .) ]

    programa1                      shift and go to state 6
    vars                           shift and go to state 7
    programa2                      shift and go to state 8
    var                            shift and go to state 9
    empty                          shift and go to state 10
    main                           shift and go to state 11

state 6

    (1) programa -> PROGRAM ID SEMICOLON addP programa1 .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON addP programa1 .)


state 7

    (3) programa1 -> vars . modules programa2
    (4) programa1 -> vars . modules
    (35) modules -> . function modules
    (36) modules -> . empty
    (38) function -> . FUN VOID function1
    (39) function -> . FUN INT function2
    (40) function -> . FUN CHAR function2
    (41) function -> . FUN FLOAT function2
    (122) empty -> .

    FUN             shift and go to state 17
    MAIN            reduce using rule 122 (empty -> .)
    $end            reduce using rule 122 (empty -> .)

    modules                        shift and go to state 14
    function                       shift and go to state 15
    empty                          shift and go to state 16

state 8

    (5) programa1 -> programa2 .

    $end            reduce using rule 5 (programa1 -> programa2 .)


state 9

    (12) vars -> var .

    FUN             reduce using rule 12 (vars -> var .)
    MAIN            reduce using rule 12 (vars -> var .)
    $end            reduce using rule 12 (vars -> var .)
    ID              reduce using rule 12 (vars -> var .)
    READ            reduce using rule 12 (vars -> var .)
    PRINT           reduce using rule 12 (vars -> var .)
    FOR             reduce using rule 12 (vars -> var .)
    IF              reduce using rule 12 (vars -> var .)
    WHILE           reduce using rule 12 (vars -> var .)
    RCURLY          reduce using rule 12 (vars -> var .)
    RETURN          reduce using rule 12 (vars -> var .)


state 10

    (13) vars -> empty .

    FUN             reduce using rule 13 (vars -> empty .)
    MAIN            reduce using rule 13 (vars -> empty .)
    $end            reduce using rule 13 (vars -> empty .)
    ID              reduce using rule 13 (vars -> empty .)
    READ            reduce using rule 13 (vars -> empty .)
    PRINT           reduce using rule 13 (vars -> empty .)
    FOR             reduce using rule 13 (vars -> empty .)
    IF              reduce using rule 13 (vars -> empty .)
    WHILE           reduce using rule 13 (vars -> empty .)
    RCURLY          reduce using rule 13 (vars -> empty .)
    RETURN          reduce using rule 13 (vars -> empty .)


state 11

    (6) programa2 -> main .

    $end            reduce using rule 6 (programa2 -> main .)


state 12

    (14) var -> VAR . var2
    (24) var2 -> . var2 tipo var1 SEMICOLON addV
    (25) var2 -> . empty
    (122) empty -> .

    INT             reduce using rule 122 (empty -> .)
    FLOAT           reduce using rule 122 (empty -> .)
    CHAR            reduce using rule 122 (empty -> .)
    FUN             reduce using rule 122 (empty -> .)
    MAIN            reduce using rule 122 (empty -> .)
    $end            reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    READ            reduce using rule 122 (empty -> .)
    PRINT           reduce using rule 122 (empty -> .)
    FOR             reduce using rule 122 (empty -> .)
    IF              reduce using rule 122 (empty -> .)
    WHILE           reduce using rule 122 (empty -> .)
    RCURLY          reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)

    var2                           shift and go to state 18
    empty                          shift and go to state 19

state 13

    (7) main -> MAIN . LPAREN param2 RPAREN LCURLY vars statement RCURLY END

    LPAREN          shift and go to state 20


state 14

    (3) programa1 -> vars modules . programa2
    (4) programa1 -> vars modules .
    (6) programa2 -> . main
    (7) main -> . MAIN LPAREN param2 RPAREN LCURLY vars statement RCURLY END

    $end            reduce using rule 4 (programa1 -> vars modules .)
    MAIN            shift and go to state 13

    programa2                      shift and go to state 21
    main                           shift and go to state 11

state 15

    (35) modules -> function . modules
    (35) modules -> . function modules
    (36) modules -> . empty
    (38) function -> . FUN VOID function1
    (39) function -> . FUN INT function2
    (40) function -> . FUN CHAR function2
    (41) function -> . FUN FLOAT function2
    (122) empty -> .

    FUN             shift and go to state 17
    MAIN            reduce using rule 122 (empty -> .)
    $end            reduce using rule 122 (empty -> .)

    function                       shift and go to state 15
    modules                        shift and go to state 22
    empty                          shift and go to state 16

state 16

    (36) modules -> empty .

    MAIN            reduce using rule 36 (modules -> empty .)
    $end            reduce using rule 36 (modules -> empty .)


state 17

    (38) function -> FUN . VOID function1
    (39) function -> FUN . INT function2
    (40) function -> FUN . CHAR function2
    (41) function -> FUN . FLOAT function2

    VOID            shift and go to state 23
    INT             shift and go to state 24
    CHAR            shift and go to state 25
    FLOAT           shift and go to state 26


state 18

    (14) var -> VAR var2 .
    (24) var2 -> var2 . tipo var1 SEMICOLON addV
    (8) tipo -> . INT guardaTipoVar
    (9) tipo -> . FLOAT guardaTipoVar
    (10) tipo -> . CHAR guardaTipoVar

    FUN             reduce using rule 14 (var -> VAR var2 .)
    MAIN            reduce using rule 14 (var -> VAR var2 .)
    $end            reduce using rule 14 (var -> VAR var2 .)
    ID              reduce using rule 14 (var -> VAR var2 .)
    READ            reduce using rule 14 (var -> VAR var2 .)
    PRINT           reduce using rule 14 (var -> VAR var2 .)
    FOR             reduce using rule 14 (var -> VAR var2 .)
    IF              reduce using rule 14 (var -> VAR var2 .)
    WHILE           reduce using rule 14 (var -> VAR var2 .)
    RCURLY          reduce using rule 14 (var -> VAR var2 .)
    RETURN          reduce using rule 14 (var -> VAR var2 .)
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    tipo                           shift and go to state 27

state 19

    (25) var2 -> empty .

    INT             reduce using rule 25 (var2 -> empty .)
    FLOAT           reduce using rule 25 (var2 -> empty .)
    CHAR            reduce using rule 25 (var2 -> empty .)
    FUN             reduce using rule 25 (var2 -> empty .)
    MAIN            reduce using rule 25 (var2 -> empty .)
    $end            reduce using rule 25 (var2 -> empty .)
    ID              reduce using rule 25 (var2 -> empty .)
    READ            reduce using rule 25 (var2 -> empty .)
    PRINT           reduce using rule 25 (var2 -> empty .)
    FOR             reduce using rule 25 (var2 -> empty .)
    IF              reduce using rule 25 (var2 -> empty .)
    WHILE           reduce using rule 25 (var2 -> empty .)
    RCURLY          reduce using rule 25 (var2 -> empty .)
    RETURN          reduce using rule 25 (var2 -> empty .)


state 20

    (7) main -> MAIN LPAREN . param2 RPAREN LCURLY vars statement RCURLY END
    (68) param2 -> . param2 tipo var1 addV
    (69) param2 -> . empty
    (122) empty -> .

    RPAREN          reduce using rule 122 (empty -> .)
    INT             reduce using rule 122 (empty -> .)
    FLOAT           reduce using rule 122 (empty -> .)
    CHAR            reduce using rule 122 (empty -> .)

    param2                         shift and go to state 31
    empty                          shift and go to state 32

state 21

    (3) programa1 -> vars modules programa2 .

    $end            reduce using rule 3 (programa1 -> vars modules programa2 .)


state 22

    (35) modules -> function modules .

    MAIN            reduce using rule 35 (modules -> function modules .)
    $end            reduce using rule 35 (modules -> function modules .)


state 23

    (38) function -> FUN VOID . function1
    (42) function1 -> . ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars statement RCURLY

    ID              shift and go to state 34

    function1                      shift and go to state 33

state 24

    (39) function -> FUN INT . function2
    (43) function2 -> . ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    ID              shift and go to state 36

    function2                      shift and go to state 35

state 25

    (40) function -> FUN CHAR . function2
    (43) function2 -> . ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    ID              shift and go to state 36

    function2                      shift and go to state 37

state 26

    (41) function -> FUN FLOAT . function2
    (43) function2 -> . ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    ID              shift and go to state 36

    function2                      shift and go to state 38

state 27

    (24) var2 -> var2 tipo . var1 SEMICOLON addV
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (122) empty -> .

    ID              shift and go to state 40
    SEMICOLON       reduce using rule 122 (empty -> .)

    var1                           shift and go to state 39
    empty                          shift and go to state 41

state 28

    (8) tipo -> INT . guardaTipoVar
    (11) guardaTipoVar -> .

    ID              reduce using rule 11 (guardaTipoVar -> .)
    SEMICOLON       reduce using rule 11 (guardaTipoVar -> .)
    RPAREN          reduce using rule 11 (guardaTipoVar -> .)
    INT             reduce using rule 11 (guardaTipoVar -> .)
    FLOAT           reduce using rule 11 (guardaTipoVar -> .)
    CHAR            reduce using rule 11 (guardaTipoVar -> .)

    guardaTipoVar                  shift and go to state 42

state 29

    (9) tipo -> FLOAT . guardaTipoVar
    (11) guardaTipoVar -> .

    ID              reduce using rule 11 (guardaTipoVar -> .)
    SEMICOLON       reduce using rule 11 (guardaTipoVar -> .)
    RPAREN          reduce using rule 11 (guardaTipoVar -> .)
    INT             reduce using rule 11 (guardaTipoVar -> .)
    FLOAT           reduce using rule 11 (guardaTipoVar -> .)
    CHAR            reduce using rule 11 (guardaTipoVar -> .)

    guardaTipoVar                  shift and go to state 43

state 30

    (10) tipo -> CHAR . guardaTipoVar
    (11) guardaTipoVar -> .

    ID              reduce using rule 11 (guardaTipoVar -> .)
    SEMICOLON       reduce using rule 11 (guardaTipoVar -> .)
    RPAREN          reduce using rule 11 (guardaTipoVar -> .)
    INT             reduce using rule 11 (guardaTipoVar -> .)
    FLOAT           reduce using rule 11 (guardaTipoVar -> .)
    CHAR            reduce using rule 11 (guardaTipoVar -> .)

    guardaTipoVar                  shift and go to state 44

state 31

    (7) main -> MAIN LPAREN param2 . RPAREN LCURLY vars statement RCURLY END
    (68) param2 -> param2 . tipo var1 addV
    (8) tipo -> . INT guardaTipoVar
    (9) tipo -> . FLOAT guardaTipoVar
    (10) tipo -> . CHAR guardaTipoVar

    RPAREN          shift and go to state 45
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    tipo                           shift and go to state 46

state 32

    (69) param2 -> empty .

    RPAREN          reduce using rule 69 (param2 -> empty .)
    INT             reduce using rule 69 (param2 -> empty .)
    FLOAT           reduce using rule 69 (param2 -> empty .)
    CHAR            reduce using rule 69 (param2 -> empty .)


state 33

    (38) function -> FUN VOID function1 .

    FUN             reduce using rule 38 (function -> FUN VOID function1 .)
    MAIN            reduce using rule 38 (function -> FUN VOID function1 .)
    $end            reduce using rule 38 (function -> FUN VOID function1 .)


state 34

    (42) function1 -> ID . save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars statement RCURLY
    (37) save_fun -> .

    LPAREN          reduce using rule 37 (save_fun -> .)

    save_fun                       shift and go to state 47

state 35

    (39) function -> FUN INT function2 .

    FUN             reduce using rule 39 (function -> FUN INT function2 .)
    MAIN            reduce using rule 39 (function -> FUN INT function2 .)
    $end            reduce using rule 39 (function -> FUN INT function2 .)


state 36

    (43) function2 -> ID . save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY
    (37) save_fun -> .

    LPAREN          reduce using rule 37 (save_fun -> .)

    save_fun                       shift and go to state 48

state 37

    (40) function -> FUN CHAR function2 .

    FUN             reduce using rule 40 (function -> FUN CHAR function2 .)
    MAIN            reduce using rule 40 (function -> FUN CHAR function2 .)
    $end            reduce using rule 40 (function -> FUN CHAR function2 .)


state 38

    (41) function -> FUN FLOAT function2 .

    FUN             reduce using rule 41 (function -> FUN FLOAT function2 .)
    MAIN            reduce using rule 41 (function -> FUN FLOAT function2 .)
    $end            reduce using rule 41 (function -> FUN FLOAT function2 .)


state 39

    (24) var2 -> var2 tipo var1 . SEMICOLON addV

    SEMICOLON       shift and go to state 49


state 40

    (15) var1 -> ID .
    (16) var1 -> ID . COMMA var1 addV
    (17) var1 -> ID . arr
    (18) var1 -> ID . arr COMMA var1 addV
    (19) var1 -> ID . mat COMMA var1 addV
    (20) var1 -> ID . mat
    (21) var1 -> ID . mat especial
    (29) arr -> . LBRACKET CTEI RBRACKET
    (30) arr -> . LBRACKET exp RBRACKET
    (31) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 15 (var1 -> ID .)
    RPAREN          reduce using rule 15 (var1 -> ID .)
    INT             reduce using rule 15 (var1 -> ID .)
    FLOAT           reduce using rule 15 (var1 -> ID .)
    CHAR            reduce using rule 15 (var1 -> ID .)
    MUL             reduce using rule 15 (var1 -> ID .)
    DIV             reduce using rule 15 (var1 -> ID .)
    PLUS            reduce using rule 15 (var1 -> ID .)
    MINUS           reduce using rule 15 (var1 -> ID .)
    GT              reduce using rule 15 (var1 -> ID .)
    LT              reduce using rule 15 (var1 -> ID .)
    GTE             reduce using rule 15 (var1 -> ID .)
    LTE             reduce using rule 15 (var1 -> ID .)
    NE              reduce using rule 15 (var1 -> ID .)
    COMPARE         reduce using rule 15 (var1 -> ID .)
    AND             reduce using rule 15 (var1 -> ID .)
    OR              reduce using rule 15 (var1 -> ID .)
    RBRACKET        reduce using rule 15 (var1 -> ID .)
    TO              reduce using rule 15 (var1 -> ID .)
    CTEI            reduce using rule 15 (var1 -> ID .)
    CTEF            reduce using rule 15 (var1 -> ID .)
    CTEC            reduce using rule 15 (var1 -> ID .)
    CTESTRING       reduce using rule 15 (var1 -> ID .)
    LPAREN          reduce using rule 15 (var1 -> ID .)
    ID              reduce using rule 15 (var1 -> ID .)
    COMMA           shift and go to state 50
    LBRACKET        shift and go to state 53

  ! COMMA           [ reduce using rule 15 (var1 -> ID .) ]

    arr                            shift and go to state 51
    mat                            shift and go to state 52

state 41

    (22) var1 -> empty .

    SEMICOLON       reduce using rule 22 (var1 -> empty .)
    RPAREN          reduce using rule 22 (var1 -> empty .)
    INT             reduce using rule 22 (var1 -> empty .)
    FLOAT           reduce using rule 22 (var1 -> empty .)
    CHAR            reduce using rule 22 (var1 -> empty .)
    MUL             reduce using rule 22 (var1 -> empty .)
    DIV             reduce using rule 22 (var1 -> empty .)
    PLUS            reduce using rule 22 (var1 -> empty .)
    MINUS           reduce using rule 22 (var1 -> empty .)
    GT              reduce using rule 22 (var1 -> empty .)
    LT              reduce using rule 22 (var1 -> empty .)
    GTE             reduce using rule 22 (var1 -> empty .)
    LTE             reduce using rule 22 (var1 -> empty .)
    NE              reduce using rule 22 (var1 -> empty .)
    COMPARE         reduce using rule 22 (var1 -> empty .)
    AND             reduce using rule 22 (var1 -> empty .)
    OR              reduce using rule 22 (var1 -> empty .)
    RBRACKET        reduce using rule 22 (var1 -> empty .)
    COMMA           reduce using rule 22 (var1 -> empty .)
    TO              reduce using rule 22 (var1 -> empty .)
    CTEI            reduce using rule 22 (var1 -> empty .)
    CTEF            reduce using rule 22 (var1 -> empty .)
    CTEC            reduce using rule 22 (var1 -> empty .)
    CTESTRING       reduce using rule 22 (var1 -> empty .)
    LPAREN          reduce using rule 22 (var1 -> empty .)
    ID              reduce using rule 22 (var1 -> empty .)


state 42

    (8) tipo -> INT guardaTipoVar .

    ID              reduce using rule 8 (tipo -> INT guardaTipoVar .)
    SEMICOLON       reduce using rule 8 (tipo -> INT guardaTipoVar .)
    RPAREN          reduce using rule 8 (tipo -> INT guardaTipoVar .)
    INT             reduce using rule 8 (tipo -> INT guardaTipoVar .)
    FLOAT           reduce using rule 8 (tipo -> INT guardaTipoVar .)
    CHAR            reduce using rule 8 (tipo -> INT guardaTipoVar .)


state 43

    (9) tipo -> FLOAT guardaTipoVar .

    ID              reduce using rule 9 (tipo -> FLOAT guardaTipoVar .)
    SEMICOLON       reduce using rule 9 (tipo -> FLOAT guardaTipoVar .)
    RPAREN          reduce using rule 9 (tipo -> FLOAT guardaTipoVar .)
    INT             reduce using rule 9 (tipo -> FLOAT guardaTipoVar .)
    FLOAT           reduce using rule 9 (tipo -> FLOAT guardaTipoVar .)
    CHAR            reduce using rule 9 (tipo -> FLOAT guardaTipoVar .)


state 44

    (10) tipo -> CHAR guardaTipoVar .

    ID              reduce using rule 10 (tipo -> CHAR guardaTipoVar .)
    SEMICOLON       reduce using rule 10 (tipo -> CHAR guardaTipoVar .)
    RPAREN          reduce using rule 10 (tipo -> CHAR guardaTipoVar .)
    INT             reduce using rule 10 (tipo -> CHAR guardaTipoVar .)
    FLOAT           reduce using rule 10 (tipo -> CHAR guardaTipoVar .)
    CHAR            reduce using rule 10 (tipo -> CHAR guardaTipoVar .)


state 45

    (7) main -> MAIN LPAREN param2 RPAREN . LCURLY vars statement RCURLY END

    LCURLY          shift and go to state 54


state 46

    (68) param2 -> param2 tipo . var1 addV
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (122) empty -> .

    ID              shift and go to state 40
    RPAREN          reduce using rule 122 (empty -> .)
    INT             reduce using rule 122 (empty -> .)
    FLOAT           reduce using rule 122 (empty -> .)
    CHAR            reduce using rule 122 (empty -> .)

    var1                           shift and go to state 55
    empty                          shift and go to state 41

state 47

    (42) function1 -> ID save_fun . LPAREN param2 RPAREN SEMICOLON LCURLY vars statement RCURLY

    LPAREN          shift and go to state 56


state 48

    (43) function2 -> ID save_fun . LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    LPAREN          shift and go to state 57


state 49

    (24) var2 -> var2 tipo var1 SEMICOLON . addV
    (23) addV -> .

    INT             reduce using rule 23 (addV -> .)
    FLOAT           reduce using rule 23 (addV -> .)
    CHAR            reduce using rule 23 (addV -> .)
    FUN             reduce using rule 23 (addV -> .)
    MAIN            reduce using rule 23 (addV -> .)
    $end            reduce using rule 23 (addV -> .)
    ID              reduce using rule 23 (addV -> .)
    READ            reduce using rule 23 (addV -> .)
    PRINT           reduce using rule 23 (addV -> .)
    FOR             reduce using rule 23 (addV -> .)
    IF              reduce using rule 23 (addV -> .)
    WHILE           reduce using rule 23 (addV -> .)
    RCURLY          reduce using rule 23 (addV -> .)
    RETURN          reduce using rule 23 (addV -> .)

    addV                           shift and go to state 58

state 50

    (16) var1 -> ID COMMA . var1 addV
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (122) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 40
    SEMICOLON       reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    INT             reduce using rule 122 (empty -> .)
    FLOAT           reduce using rule 122 (empty -> .)
    CHAR            reduce using rule 122 (empty -> .)
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)
    CTEI            reduce using rule 122 (empty -> .)
    CTEF            reduce using rule 122 (empty -> .)
    CTEC            reduce using rule 122 (empty -> .)
    CTESTRING       reduce using rule 122 (empty -> .)
    LPAREN          reduce using rule 122 (empty -> .)

  ! ID              [ reduce using rule 122 (empty -> .) ]

    var1                           shift and go to state 59
    empty                          shift and go to state 41

state 51

    (17) var1 -> ID arr .
    (18) var1 -> ID arr . COMMA var1 addV

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 17 (var1 -> ID arr .)
    RPAREN          reduce using rule 17 (var1 -> ID arr .)
    INT             reduce using rule 17 (var1 -> ID arr .)
    FLOAT           reduce using rule 17 (var1 -> ID arr .)
    CHAR            reduce using rule 17 (var1 -> ID arr .)
    MUL             reduce using rule 17 (var1 -> ID arr .)
    DIV             reduce using rule 17 (var1 -> ID arr .)
    PLUS            reduce using rule 17 (var1 -> ID arr .)
    MINUS           reduce using rule 17 (var1 -> ID arr .)
    GT              reduce using rule 17 (var1 -> ID arr .)
    LT              reduce using rule 17 (var1 -> ID arr .)
    GTE             reduce using rule 17 (var1 -> ID arr .)
    LTE             reduce using rule 17 (var1 -> ID arr .)
    NE              reduce using rule 17 (var1 -> ID arr .)
    COMPARE         reduce using rule 17 (var1 -> ID arr .)
    AND             reduce using rule 17 (var1 -> ID arr .)
    OR              reduce using rule 17 (var1 -> ID arr .)
    RBRACKET        reduce using rule 17 (var1 -> ID arr .)
    TO              reduce using rule 17 (var1 -> ID arr .)
    CTEI            reduce using rule 17 (var1 -> ID arr .)
    CTEF            reduce using rule 17 (var1 -> ID arr .)
    CTEC            reduce using rule 17 (var1 -> ID arr .)
    CTESTRING       reduce using rule 17 (var1 -> ID arr .)
    LPAREN          reduce using rule 17 (var1 -> ID arr .)
    ID              reduce using rule 17 (var1 -> ID arr .)
    COMMA           shift and go to state 60

  ! COMMA           [ reduce using rule 17 (var1 -> ID arr .) ]


state 52

    (19) var1 -> ID mat . COMMA var1 addV
    (20) var1 -> ID mat .
    (21) var1 -> ID mat . especial
    (26) especial -> . TRANSPUESTA
    (27) especial -> . INVERSA
    (28) especial -> . DETERMINANTE

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 61
    SEMICOLON       reduce using rule 20 (var1 -> ID mat .)
    RPAREN          reduce using rule 20 (var1 -> ID mat .)
    INT             reduce using rule 20 (var1 -> ID mat .)
    FLOAT           reduce using rule 20 (var1 -> ID mat .)
    CHAR            reduce using rule 20 (var1 -> ID mat .)
    MUL             reduce using rule 20 (var1 -> ID mat .)
    DIV             reduce using rule 20 (var1 -> ID mat .)
    PLUS            reduce using rule 20 (var1 -> ID mat .)
    MINUS           reduce using rule 20 (var1 -> ID mat .)
    GT              reduce using rule 20 (var1 -> ID mat .)
    LT              reduce using rule 20 (var1 -> ID mat .)
    GTE             reduce using rule 20 (var1 -> ID mat .)
    LTE             reduce using rule 20 (var1 -> ID mat .)
    NE              reduce using rule 20 (var1 -> ID mat .)
    COMPARE         reduce using rule 20 (var1 -> ID mat .)
    AND             reduce using rule 20 (var1 -> ID mat .)
    OR              reduce using rule 20 (var1 -> ID mat .)
    RBRACKET        reduce using rule 20 (var1 -> ID mat .)
    TO              reduce using rule 20 (var1 -> ID mat .)
    CTEI            reduce using rule 20 (var1 -> ID mat .)
    CTEF            reduce using rule 20 (var1 -> ID mat .)
    CTEC            reduce using rule 20 (var1 -> ID mat .)
    CTESTRING       reduce using rule 20 (var1 -> ID mat .)
    LPAREN          reduce using rule 20 (var1 -> ID mat .)
    ID              reduce using rule 20 (var1 -> ID mat .)
    TRANSPUESTA     shift and go to state 63
    INVERSA         shift and go to state 64
    DETERMINANTE    shift and go to state 65

  ! COMMA           [ reduce using rule 20 (var1 -> ID mat .) ]

    especial                       shift and go to state 62

state 53

    (29) arr -> LBRACKET . CTEI RBRACKET
    (30) arr -> LBRACKET . exp RBRACKET
    (31) mat -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> LBRACKET . exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> LBRACKET . CTEI RBRACKET LBRACKET exp RBRACKET
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 66
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)

    exp                            shift and go to state 67
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 54

    (7) main -> MAIN LPAREN param2 RPAREN LCURLY . vars statement RCURLY END
    (12) vars -> . var
    (13) vars -> . empty
    (14) var -> . VAR var2
    (122) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 122 (empty -> .)
    READ            reduce using rule 122 (empty -> .)
    PRINT           reduce using rule 122 (empty -> .)
    FOR             reduce using rule 122 (empty -> .)
    IF              reduce using rule 122 (empty -> .)
    WHILE           reduce using rule 122 (empty -> .)
    RCURLY          reduce using rule 122 (empty -> .)

    vars                           shift and go to state 81
    var                            shift and go to state 9
    empty                          shift and go to state 10

state 55

    (68) param2 -> param2 tipo var1 . addV
    (23) addV -> .

    RPAREN          reduce using rule 23 (addV -> .)
    INT             reduce using rule 23 (addV -> .)
    FLOAT           reduce using rule 23 (addV -> .)
    CHAR            reduce using rule 23 (addV -> .)

    addV                           shift and go to state 82

state 56

    (42) function1 -> ID save_fun LPAREN . param2 RPAREN SEMICOLON LCURLY vars statement RCURLY
    (68) param2 -> . param2 tipo var1 addV
    (69) param2 -> . empty
    (122) empty -> .

    RPAREN          reduce using rule 122 (empty -> .)
    INT             reduce using rule 122 (empty -> .)
    FLOAT           reduce using rule 122 (empty -> .)
    CHAR            reduce using rule 122 (empty -> .)

    param2                         shift and go to state 83
    empty                          shift and go to state 32

state 57

    (43) function2 -> ID save_fun LPAREN . param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY
    (58) param -> .
    (59) param -> . empty
    (122) empty -> .

  ! reduce/reduce conflict for RPAREN resolved using rule 58 (param -> .)
    RPAREN          reduce using rule 58 (param -> .)

  ! RPAREN          [ reduce using rule 122 (empty -> .) ]

    param                          shift and go to state 84
    empty                          shift and go to state 85

state 58

    (24) var2 -> var2 tipo var1 SEMICOLON addV .

    INT             reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    FLOAT           reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    CHAR            reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    FUN             reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    MAIN            reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    $end            reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    ID              reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    READ            reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    PRINT           reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    FOR             reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    IF              reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    WHILE           reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    RCURLY          reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    RETURN          reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)


state 59

    (16) var1 -> ID COMMA var1 . addV
    (23) addV -> .

    SEMICOLON       reduce using rule 23 (addV -> .)
    RPAREN          reduce using rule 23 (addV -> .)
    INT             reduce using rule 23 (addV -> .)
    FLOAT           reduce using rule 23 (addV -> .)
    CHAR            reduce using rule 23 (addV -> .)
    MUL             reduce using rule 23 (addV -> .)
    DIV             reduce using rule 23 (addV -> .)
    PLUS            reduce using rule 23 (addV -> .)
    MINUS           reduce using rule 23 (addV -> .)
    GT              reduce using rule 23 (addV -> .)
    LT              reduce using rule 23 (addV -> .)
    GTE             reduce using rule 23 (addV -> .)
    LTE             reduce using rule 23 (addV -> .)
    NE              reduce using rule 23 (addV -> .)
    COMPARE         reduce using rule 23 (addV -> .)
    AND             reduce using rule 23 (addV -> .)
    OR              reduce using rule 23 (addV -> .)
    RBRACKET        reduce using rule 23 (addV -> .)
    COMMA           reduce using rule 23 (addV -> .)
    TO              reduce using rule 23 (addV -> .)
    CTEI            reduce using rule 23 (addV -> .)
    CTEF            reduce using rule 23 (addV -> .)
    CTEC            reduce using rule 23 (addV -> .)
    CTESTRING       reduce using rule 23 (addV -> .)
    LPAREN          reduce using rule 23 (addV -> .)
    ID              reduce using rule 23 (addV -> .)

    addV                           shift and go to state 86

state 60

    (18) var1 -> ID arr COMMA . var1 addV
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (122) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 40
    SEMICOLON       reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    INT             reduce using rule 122 (empty -> .)
    FLOAT           reduce using rule 122 (empty -> .)
    CHAR            reduce using rule 122 (empty -> .)
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)
    CTEI            reduce using rule 122 (empty -> .)
    CTEF            reduce using rule 122 (empty -> .)
    CTEC            reduce using rule 122 (empty -> .)
    CTESTRING       reduce using rule 122 (empty -> .)
    LPAREN          reduce using rule 122 (empty -> .)

  ! ID              [ reduce using rule 122 (empty -> .) ]

    var1                           shift and go to state 87
    empty                          shift and go to state 41

state 61

    (19) var1 -> ID mat COMMA . var1 addV
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (122) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 40
    SEMICOLON       reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    INT             reduce using rule 122 (empty -> .)
    FLOAT           reduce using rule 122 (empty -> .)
    CHAR            reduce using rule 122 (empty -> .)
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)
    CTEI            reduce using rule 122 (empty -> .)
    CTEF            reduce using rule 122 (empty -> .)
    CTEC            reduce using rule 122 (empty -> .)
    CTESTRING       reduce using rule 122 (empty -> .)
    LPAREN          reduce using rule 122 (empty -> .)

  ! ID              [ reduce using rule 122 (empty -> .) ]

    var1                           shift and go to state 88
    empty                          shift and go to state 41

state 62

    (21) var1 -> ID mat especial .

    SEMICOLON       reduce using rule 21 (var1 -> ID mat especial .)
    RPAREN          reduce using rule 21 (var1 -> ID mat especial .)
    INT             reduce using rule 21 (var1 -> ID mat especial .)
    FLOAT           reduce using rule 21 (var1 -> ID mat especial .)
    CHAR            reduce using rule 21 (var1 -> ID mat especial .)
    MUL             reduce using rule 21 (var1 -> ID mat especial .)
    DIV             reduce using rule 21 (var1 -> ID mat especial .)
    PLUS            reduce using rule 21 (var1 -> ID mat especial .)
    MINUS           reduce using rule 21 (var1 -> ID mat especial .)
    GT              reduce using rule 21 (var1 -> ID mat especial .)
    LT              reduce using rule 21 (var1 -> ID mat especial .)
    GTE             reduce using rule 21 (var1 -> ID mat especial .)
    LTE             reduce using rule 21 (var1 -> ID mat especial .)
    NE              reduce using rule 21 (var1 -> ID mat especial .)
    COMPARE         reduce using rule 21 (var1 -> ID mat especial .)
    AND             reduce using rule 21 (var1 -> ID mat especial .)
    OR              reduce using rule 21 (var1 -> ID mat especial .)
    RBRACKET        reduce using rule 21 (var1 -> ID mat especial .)
    COMMA           reduce using rule 21 (var1 -> ID mat especial .)
    TO              reduce using rule 21 (var1 -> ID mat especial .)
    CTEI            reduce using rule 21 (var1 -> ID mat especial .)
    CTEF            reduce using rule 21 (var1 -> ID mat especial .)
    CTEC            reduce using rule 21 (var1 -> ID mat especial .)
    CTESTRING       reduce using rule 21 (var1 -> ID mat especial .)
    LPAREN          reduce using rule 21 (var1 -> ID mat especial .)
    ID              reduce using rule 21 (var1 -> ID mat especial .)


state 63

    (26) especial -> TRANSPUESTA .

    SEMICOLON       reduce using rule 26 (especial -> TRANSPUESTA .)
    RPAREN          reduce using rule 26 (especial -> TRANSPUESTA .)
    INT             reduce using rule 26 (especial -> TRANSPUESTA .)
    FLOAT           reduce using rule 26 (especial -> TRANSPUESTA .)
    CHAR            reduce using rule 26 (especial -> TRANSPUESTA .)
    MUL             reduce using rule 26 (especial -> TRANSPUESTA .)
    DIV             reduce using rule 26 (especial -> TRANSPUESTA .)
    PLUS            reduce using rule 26 (especial -> TRANSPUESTA .)
    MINUS           reduce using rule 26 (especial -> TRANSPUESTA .)
    GT              reduce using rule 26 (especial -> TRANSPUESTA .)
    LT              reduce using rule 26 (especial -> TRANSPUESTA .)
    GTE             reduce using rule 26 (especial -> TRANSPUESTA .)
    LTE             reduce using rule 26 (especial -> TRANSPUESTA .)
    NE              reduce using rule 26 (especial -> TRANSPUESTA .)
    COMPARE         reduce using rule 26 (especial -> TRANSPUESTA .)
    AND             reduce using rule 26 (especial -> TRANSPUESTA .)
    OR              reduce using rule 26 (especial -> TRANSPUESTA .)
    RBRACKET        reduce using rule 26 (especial -> TRANSPUESTA .)
    COMMA           reduce using rule 26 (especial -> TRANSPUESTA .)
    TO              reduce using rule 26 (especial -> TRANSPUESTA .)
    CTEI            reduce using rule 26 (especial -> TRANSPUESTA .)
    CTEF            reduce using rule 26 (especial -> TRANSPUESTA .)
    CTEC            reduce using rule 26 (especial -> TRANSPUESTA .)
    CTESTRING       reduce using rule 26 (especial -> TRANSPUESTA .)
    LPAREN          reduce using rule 26 (especial -> TRANSPUESTA .)
    ID              reduce using rule 26 (especial -> TRANSPUESTA .)


state 64

    (27) especial -> INVERSA .

    SEMICOLON       reduce using rule 27 (especial -> INVERSA .)
    RPAREN          reduce using rule 27 (especial -> INVERSA .)
    INT             reduce using rule 27 (especial -> INVERSA .)
    FLOAT           reduce using rule 27 (especial -> INVERSA .)
    CHAR            reduce using rule 27 (especial -> INVERSA .)
    MUL             reduce using rule 27 (especial -> INVERSA .)
    DIV             reduce using rule 27 (especial -> INVERSA .)
    PLUS            reduce using rule 27 (especial -> INVERSA .)
    MINUS           reduce using rule 27 (especial -> INVERSA .)
    GT              reduce using rule 27 (especial -> INVERSA .)
    LT              reduce using rule 27 (especial -> INVERSA .)
    GTE             reduce using rule 27 (especial -> INVERSA .)
    LTE             reduce using rule 27 (especial -> INVERSA .)
    NE              reduce using rule 27 (especial -> INVERSA .)
    COMPARE         reduce using rule 27 (especial -> INVERSA .)
    AND             reduce using rule 27 (especial -> INVERSA .)
    OR              reduce using rule 27 (especial -> INVERSA .)
    RBRACKET        reduce using rule 27 (especial -> INVERSA .)
    COMMA           reduce using rule 27 (especial -> INVERSA .)
    TO              reduce using rule 27 (especial -> INVERSA .)
    CTEI            reduce using rule 27 (especial -> INVERSA .)
    CTEF            reduce using rule 27 (especial -> INVERSA .)
    CTEC            reduce using rule 27 (especial -> INVERSA .)
    CTESTRING       reduce using rule 27 (especial -> INVERSA .)
    LPAREN          reduce using rule 27 (especial -> INVERSA .)
    ID              reduce using rule 27 (especial -> INVERSA .)


state 65

    (28) especial -> DETERMINANTE .

    SEMICOLON       reduce using rule 28 (especial -> DETERMINANTE .)
    RPAREN          reduce using rule 28 (especial -> DETERMINANTE .)
    INT             reduce using rule 28 (especial -> DETERMINANTE .)
    FLOAT           reduce using rule 28 (especial -> DETERMINANTE .)
    CHAR            reduce using rule 28 (especial -> DETERMINANTE .)
    MUL             reduce using rule 28 (especial -> DETERMINANTE .)
    DIV             reduce using rule 28 (especial -> DETERMINANTE .)
    PLUS            reduce using rule 28 (especial -> DETERMINANTE .)
    MINUS           reduce using rule 28 (especial -> DETERMINANTE .)
    GT              reduce using rule 28 (especial -> DETERMINANTE .)
    LT              reduce using rule 28 (especial -> DETERMINANTE .)
    GTE             reduce using rule 28 (especial -> DETERMINANTE .)
    LTE             reduce using rule 28 (especial -> DETERMINANTE .)
    NE              reduce using rule 28 (especial -> DETERMINANTE .)
    COMPARE         reduce using rule 28 (especial -> DETERMINANTE .)
    AND             reduce using rule 28 (especial -> DETERMINANTE .)
    OR              reduce using rule 28 (especial -> DETERMINANTE .)
    RBRACKET        reduce using rule 28 (especial -> DETERMINANTE .)
    COMMA           reduce using rule 28 (especial -> DETERMINANTE .)
    TO              reduce using rule 28 (especial -> DETERMINANTE .)
    CTEI            reduce using rule 28 (especial -> DETERMINANTE .)
    CTEF            reduce using rule 28 (especial -> DETERMINANTE .)
    CTEC            reduce using rule 28 (especial -> DETERMINANTE .)
    CTESTRING       reduce using rule 28 (especial -> DETERMINANTE .)
    LPAREN          reduce using rule 28 (especial -> DETERMINANTE .)
    ID              reduce using rule 28 (especial -> DETERMINANTE .)


state 66

    (29) arr -> LBRACKET CTEI . RBRACKET
    (31) mat -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> LBRACKET CTEI . RBRACKET LBRACKET exp RBRACKET
    (116) pexp -> CTEI . saveCTE
    (125) saveCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 89
    MUL             reduce using rule 125 (saveCTE -> .)
    DIV             reduce using rule 125 (saveCTE -> .)
    PLUS            reduce using rule 125 (saveCTE -> .)
    MINUS           reduce using rule 125 (saveCTE -> .)
    GT              reduce using rule 125 (saveCTE -> .)
    LT              reduce using rule 125 (saveCTE -> .)
    GTE             reduce using rule 125 (saveCTE -> .)
    LTE             reduce using rule 125 (saveCTE -> .)
    NE              reduce using rule 125 (saveCTE -> .)
    COMPARE         reduce using rule 125 (saveCTE -> .)
    AND             reduce using rule 125 (saveCTE -> .)
    OR              reduce using rule 125 (saveCTE -> .)

  ! RBRACKET        [ reduce using rule 125 (saveCTE -> .) ]

    saveCTE                        shift and go to state 90

state 67

    (30) arr -> LBRACKET exp . RBRACKET
    (32) mat -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET
    (33) mat -> LBRACKET exp . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 91


state 68

    (86) exp -> nexp .
    (87) exp -> nexp . OR addOperadorName nexp genera_quad_or

    RBRACKET        reduce using rule 86 (exp -> nexp .)
    RPAREN          reduce using rule 86 (exp -> nexp .)
    COMMA           reduce using rule 86 (exp -> nexp .)
    SEMICOLON       reduce using rule 86 (exp -> nexp .)
    TO              reduce using rule 86 (exp -> nexp .)
    OR              shift and go to state 92


state 69

    (93) nexp -> compexp .
    (94) nexp -> compexp . AND addOperadorName compexp genera_quad_and

    OR              reduce using rule 93 (nexp -> compexp .)
    RBRACKET        reduce using rule 93 (nexp -> compexp .)
    RPAREN          reduce using rule 93 (nexp -> compexp .)
    COMMA           reduce using rule 93 (nexp -> compexp .)
    SEMICOLON       reduce using rule 93 (nexp -> compexp .)
    TO              reduce using rule 93 (nexp -> compexp .)
    AND             shift and go to state 93


state 70

    (95) compexp -> sumexp .
    (97) compexp1 -> sumexp . GT addOperadorName sumexp compare_quad
    (98) compexp1 -> sumexp . LT addOperadorName sumexp compare_quad
    (99) compexp1 -> sumexp . GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> sumexp . LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> sumexp . NE addOperadorName sumexp compare_quad
    (102) compexp1 -> sumexp . COMPARE addOperadorName sumexp compare_quad

    AND             reduce using rule 95 (compexp -> sumexp .)
    OR              reduce using rule 95 (compexp -> sumexp .)
    RBRACKET        reduce using rule 95 (compexp -> sumexp .)
    RPAREN          reduce using rule 95 (compexp -> sumexp .)
    COMMA           reduce using rule 95 (compexp -> sumexp .)
    SEMICOLON       reduce using rule 95 (compexp -> sumexp .)
    TO              reduce using rule 95 (compexp -> sumexp .)
    GT              shift and go to state 94
    LT              shift and go to state 95
    GTE             shift and go to state 96
    LTE             shift and go to state 97
    NE              shift and go to state 98
    COMPARE         shift and go to state 99


state 71

    (96) compexp -> compexp1 . sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)

    sumexp                         shift and go to state 100
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 72

    (103) sumexp -> mulexp .
    (104) sumexp -> mulexp . PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> mulexp . MINUS addOperadorName mulexp genera_sum_quad

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    GT              reduce using rule 103 (sumexp -> mulexp .)
    LT              reduce using rule 103 (sumexp -> mulexp .)
    GTE             reduce using rule 103 (sumexp -> mulexp .)
    LTE             reduce using rule 103 (sumexp -> mulexp .)
    NE              reduce using rule 103 (sumexp -> mulexp .)
    COMPARE         reduce using rule 103 (sumexp -> mulexp .)
    AND             reduce using rule 103 (sumexp -> mulexp .)
    OR              reduce using rule 103 (sumexp -> mulexp .)
    RBRACKET        reduce using rule 103 (sumexp -> mulexp .)
    RPAREN          reduce using rule 103 (sumexp -> mulexp .)
    COMMA           reduce using rule 103 (sumexp -> mulexp .)
    SEMICOLON       reduce using rule 103 (sumexp -> mulexp .)
    TO              reduce using rule 103 (sumexp -> mulexp .)
    CTEI            reduce using rule 103 (sumexp -> mulexp .)
    CTEF            reduce using rule 103 (sumexp -> mulexp .)
    CTEC            reduce using rule 103 (sumexp -> mulexp .)
    CTESTRING       reduce using rule 103 (sumexp -> mulexp .)
    LPAREN          reduce using rule 103 (sumexp -> mulexp .)
    ID              reduce using rule 103 (sumexp -> mulexp .)
    MUL             reduce using rule 103 (sumexp -> mulexp .)
    DIV             reduce using rule 103 (sumexp -> mulexp .)
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103

  ! PLUS            [ reduce using rule 103 (sumexp -> mulexp .) ]
  ! MINUS           [ reduce using rule 103 (sumexp -> mulexp .) ]


state 73

    (112) mulexp -> pexp .
    (113) mulexp -> pexp . MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> pexp . DIV addOperadorName pexp genera_mul_quad

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    PLUS            reduce using rule 112 (mulexp -> pexp .)
    MINUS           reduce using rule 112 (mulexp -> pexp .)
    GT              reduce using rule 112 (mulexp -> pexp .)
    LT              reduce using rule 112 (mulexp -> pexp .)
    GTE             reduce using rule 112 (mulexp -> pexp .)
    LTE             reduce using rule 112 (mulexp -> pexp .)
    NE              reduce using rule 112 (mulexp -> pexp .)
    COMPARE         reduce using rule 112 (mulexp -> pexp .)
    AND             reduce using rule 112 (mulexp -> pexp .)
    OR              reduce using rule 112 (mulexp -> pexp .)
    RBRACKET        reduce using rule 112 (mulexp -> pexp .)
    RPAREN          reduce using rule 112 (mulexp -> pexp .)
    COMMA           reduce using rule 112 (mulexp -> pexp .)
    SEMICOLON       reduce using rule 112 (mulexp -> pexp .)
    TO              reduce using rule 112 (mulexp -> pexp .)
    CTEI            reduce using rule 112 (mulexp -> pexp .)
    CTEF            reduce using rule 112 (mulexp -> pexp .)
    CTEC            reduce using rule 112 (mulexp -> pexp .)
    CTESTRING       reduce using rule 112 (mulexp -> pexp .)
    LPAREN          reduce using rule 112 (mulexp -> pexp .)
    ID              reduce using rule 112 (mulexp -> pexp .)
    MUL             shift and go to state 104
    DIV             shift and go to state 105

  ! MUL             [ reduce using rule 112 (mulexp -> pexp .) ]
  ! DIV             [ reduce using rule 112 (mulexp -> pexp .) ]


state 74

    (115) pexp -> var1 . saveId
    (123) saveId -> .

    MUL             reduce using rule 123 (saveId -> .)
    DIV             reduce using rule 123 (saveId -> .)
    PLUS            reduce using rule 123 (saveId -> .)
    MINUS           reduce using rule 123 (saveId -> .)
    GT              reduce using rule 123 (saveId -> .)
    LT              reduce using rule 123 (saveId -> .)
    GTE             reduce using rule 123 (saveId -> .)
    LTE             reduce using rule 123 (saveId -> .)
    NE              reduce using rule 123 (saveId -> .)
    COMPARE         reduce using rule 123 (saveId -> .)
    AND             reduce using rule 123 (saveId -> .)
    OR              reduce using rule 123 (saveId -> .)
    RBRACKET        reduce using rule 123 (saveId -> .)
    RPAREN          reduce using rule 123 (saveId -> .)
    COMMA           reduce using rule 123 (saveId -> .)
    SEMICOLON       reduce using rule 123 (saveId -> .)
    TO              reduce using rule 123 (saveId -> .)
    CTEI            reduce using rule 123 (saveId -> .)
    CTEF            reduce using rule 123 (saveId -> .)
    CTEC            reduce using rule 123 (saveId -> .)
    CTESTRING       reduce using rule 123 (saveId -> .)
    LPAREN          reduce using rule 123 (saveId -> .)
    ID              reduce using rule 123 (saveId -> .)

    saveId                         shift and go to state 106

state 75

    (117) pexp -> CTEF . saveCTE
    (125) saveCTE -> .

    MUL             reduce using rule 125 (saveCTE -> .)
    DIV             reduce using rule 125 (saveCTE -> .)
    PLUS            reduce using rule 125 (saveCTE -> .)
    MINUS           reduce using rule 125 (saveCTE -> .)
    GT              reduce using rule 125 (saveCTE -> .)
    LT              reduce using rule 125 (saveCTE -> .)
    GTE             reduce using rule 125 (saveCTE -> .)
    LTE             reduce using rule 125 (saveCTE -> .)
    NE              reduce using rule 125 (saveCTE -> .)
    COMPARE         reduce using rule 125 (saveCTE -> .)
    AND             reduce using rule 125 (saveCTE -> .)
    OR              reduce using rule 125 (saveCTE -> .)
    RBRACKET        reduce using rule 125 (saveCTE -> .)
    RPAREN          reduce using rule 125 (saveCTE -> .)
    COMMA           reduce using rule 125 (saveCTE -> .)
    SEMICOLON       reduce using rule 125 (saveCTE -> .)
    TO              reduce using rule 125 (saveCTE -> .)
    CTEI            reduce using rule 125 (saveCTE -> .)
    CTEF            reduce using rule 125 (saveCTE -> .)
    CTEC            reduce using rule 125 (saveCTE -> .)
    CTESTRING       reduce using rule 125 (saveCTE -> .)
    LPAREN          reduce using rule 125 (saveCTE -> .)
    ID              reduce using rule 125 (saveCTE -> .)

    saveCTE                        shift and go to state 107

state 76

    (118) pexp -> CTEC . saveCTE
    (125) saveCTE -> .

    MUL             reduce using rule 125 (saveCTE -> .)
    DIV             reduce using rule 125 (saveCTE -> .)
    PLUS            reduce using rule 125 (saveCTE -> .)
    MINUS           reduce using rule 125 (saveCTE -> .)
    GT              reduce using rule 125 (saveCTE -> .)
    LT              reduce using rule 125 (saveCTE -> .)
    GTE             reduce using rule 125 (saveCTE -> .)
    LTE             reduce using rule 125 (saveCTE -> .)
    NE              reduce using rule 125 (saveCTE -> .)
    COMPARE         reduce using rule 125 (saveCTE -> .)
    AND             reduce using rule 125 (saveCTE -> .)
    OR              reduce using rule 125 (saveCTE -> .)
    RBRACKET        reduce using rule 125 (saveCTE -> .)
    RPAREN          reduce using rule 125 (saveCTE -> .)
    COMMA           reduce using rule 125 (saveCTE -> .)
    SEMICOLON       reduce using rule 125 (saveCTE -> .)
    TO              reduce using rule 125 (saveCTE -> .)
    CTEI            reduce using rule 125 (saveCTE -> .)
    CTEF            reduce using rule 125 (saveCTE -> .)
    CTEC            reduce using rule 125 (saveCTE -> .)
    CTESTRING       reduce using rule 125 (saveCTE -> .)
    LPAREN          reduce using rule 125 (saveCTE -> .)
    ID              reduce using rule 125 (saveCTE -> .)

    saveCTE                        shift and go to state 108

state 77

    (119) pexp -> CTESTRING . saveCTE
    (125) saveCTE -> .

    MUL             reduce using rule 125 (saveCTE -> .)
    DIV             reduce using rule 125 (saveCTE -> .)
    PLUS            reduce using rule 125 (saveCTE -> .)
    MINUS           reduce using rule 125 (saveCTE -> .)
    GT              reduce using rule 125 (saveCTE -> .)
    LT              reduce using rule 125 (saveCTE -> .)
    GTE             reduce using rule 125 (saveCTE -> .)
    LTE             reduce using rule 125 (saveCTE -> .)
    NE              reduce using rule 125 (saveCTE -> .)
    COMPARE         reduce using rule 125 (saveCTE -> .)
    AND             reduce using rule 125 (saveCTE -> .)
    OR              reduce using rule 125 (saveCTE -> .)
    RBRACKET        reduce using rule 125 (saveCTE -> .)
    RPAREN          reduce using rule 125 (saveCTE -> .)
    COMMA           reduce using rule 125 (saveCTE -> .)
    SEMICOLON       reduce using rule 125 (saveCTE -> .)
    TO              reduce using rule 125 (saveCTE -> .)
    CTEI            reduce using rule 125 (saveCTE -> .)
    CTEF            reduce using rule 125 (saveCTE -> .)
    CTEC            reduce using rule 125 (saveCTE -> .)
    CTESTRING       reduce using rule 125 (saveCTE -> .)
    LPAREN          reduce using rule 125 (saveCTE -> .)
    ID              reduce using rule 125 (saveCTE -> .)

    saveCTE                        shift and go to state 109

state 78

    (120) pexp -> llamada .

    MUL             reduce using rule 120 (pexp -> llamada .)
    DIV             reduce using rule 120 (pexp -> llamada .)
    PLUS            reduce using rule 120 (pexp -> llamada .)
    MINUS           reduce using rule 120 (pexp -> llamada .)
    GT              reduce using rule 120 (pexp -> llamada .)
    LT              reduce using rule 120 (pexp -> llamada .)
    GTE             reduce using rule 120 (pexp -> llamada .)
    LTE             reduce using rule 120 (pexp -> llamada .)
    NE              reduce using rule 120 (pexp -> llamada .)
    COMPARE         reduce using rule 120 (pexp -> llamada .)
    AND             reduce using rule 120 (pexp -> llamada .)
    OR              reduce using rule 120 (pexp -> llamada .)
    RBRACKET        reduce using rule 120 (pexp -> llamada .)
    RPAREN          reduce using rule 120 (pexp -> llamada .)
    COMMA           reduce using rule 120 (pexp -> llamada .)
    SEMICOLON       reduce using rule 120 (pexp -> llamada .)
    TO              reduce using rule 120 (pexp -> llamada .)
    CTEI            reduce using rule 120 (pexp -> llamada .)
    CTEF            reduce using rule 120 (pexp -> llamada .)
    CTEC            reduce using rule 120 (pexp -> llamada .)
    CTESTRING       reduce using rule 120 (pexp -> llamada .)
    LPAREN          reduce using rule 120 (pexp -> llamada .)
    ID              reduce using rule 120 (pexp -> llamada .)


state 79

    (121) pexp -> LPAREN . exp RPAREN
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)

    exp                            shift and go to state 110
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 80

    (15) var1 -> ID .
    (16) var1 -> ID . COMMA var1 addV
    (17) var1 -> ID . arr
    (18) var1 -> ID . arr COMMA var1 addV
    (19) var1 -> ID . mat COMMA var1 addV
    (20) var1 -> ID . mat
    (21) var1 -> ID . mat especial
    (70) llamada -> ID . LPAREN exp RPAREN
    (29) arr -> . LBRACKET CTEI RBRACKET
    (30) arr -> . LBRACKET exp RBRACKET
    (31) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    MUL             reduce using rule 15 (var1 -> ID .)
    DIV             reduce using rule 15 (var1 -> ID .)
    PLUS            reduce using rule 15 (var1 -> ID .)
    MINUS           reduce using rule 15 (var1 -> ID .)
    GT              reduce using rule 15 (var1 -> ID .)
    LT              reduce using rule 15 (var1 -> ID .)
    GTE             reduce using rule 15 (var1 -> ID .)
    LTE             reduce using rule 15 (var1 -> ID .)
    NE              reduce using rule 15 (var1 -> ID .)
    COMPARE         reduce using rule 15 (var1 -> ID .)
    AND             reduce using rule 15 (var1 -> ID .)
    OR              reduce using rule 15 (var1 -> ID .)
    RBRACKET        reduce using rule 15 (var1 -> ID .)
    RPAREN          reduce using rule 15 (var1 -> ID .)
    SEMICOLON       reduce using rule 15 (var1 -> ID .)
    TO              reduce using rule 15 (var1 -> ID .)
    CTEI            reduce using rule 15 (var1 -> ID .)
    CTEF            reduce using rule 15 (var1 -> ID .)
    CTEC            reduce using rule 15 (var1 -> ID .)
    CTESTRING       reduce using rule 15 (var1 -> ID .)
    ID              reduce using rule 15 (var1 -> ID .)
    COMMA           shift and go to state 50
    LPAREN          shift and go to state 111
    LBRACKET        shift and go to state 53

  ! COMMA           [ reduce using rule 15 (var1 -> ID .) ]
  ! LPAREN          [ reduce using rule 15 (var1 -> ID .) ]

    arr                            shift and go to state 51
    mat                            shift and go to state 52

state 81

    (7) main -> MAIN LPAREN param2 RPAREN LCURLY vars . statement RCURLY END
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (122) empty -> .
    (53) asignacion -> . ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion
    (54) asignacion -> . ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion
    (55) asignacion -> . ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion
    (70) llamada -> . ID LPAREN exp RPAREN
    (85) lectura -> . READ operatorRead LPAREN var1 operatorReadQuad RPAREN
    (78) escritura -> . PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN
    (75) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (71) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY
    (72) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else
    (77) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 122 (empty -> .)
    ID              shift and go to state 122
    READ            shift and go to state 123
    PRINT           shift and go to state 124
    FOR             shift and go to state 125
    IF              shift and go to state 126
    WHILE           shift and go to state 127

    statement                      shift and go to state 112
    statement1                     shift and go to state 113
    empty                          shift and go to state 114
    asignacion                     shift and go to state 115
    llamada                        shift and go to state 116
    lectura                        shift and go to state 117
    escritura                      shift and go to state 118
    for                            shift and go to state 119
    if                             shift and go to state 120
    while                          shift and go to state 121

state 82

    (68) param2 -> param2 tipo var1 addV .

    RPAREN          reduce using rule 68 (param2 -> param2 tipo var1 addV .)
    INT             reduce using rule 68 (param2 -> param2 tipo var1 addV .)
    FLOAT           reduce using rule 68 (param2 -> param2 tipo var1 addV .)
    CHAR            reduce using rule 68 (param2 -> param2 tipo var1 addV .)


state 83

    (42) function1 -> ID save_fun LPAREN param2 . RPAREN SEMICOLON LCURLY vars statement RCURLY
    (68) param2 -> param2 . tipo var1 addV
    (8) tipo -> . INT guardaTipoVar
    (9) tipo -> . FLOAT guardaTipoVar
    (10) tipo -> . CHAR guardaTipoVar

    RPAREN          shift and go to state 128
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    tipo                           shift and go to state 46

state 84

    (43) function2 -> ID save_fun LPAREN param . RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    RPAREN          shift and go to state 129


state 85

    (59) param -> empty .

    RPAREN          reduce using rule 59 (param -> empty .)


state 86

    (16) var1 -> ID COMMA var1 addV .

    SEMICOLON       reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    RPAREN          reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    INT             reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    FLOAT           reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    CHAR            reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    MUL             reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    DIV             reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    PLUS            reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    MINUS           reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    GT              reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    LT              reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    GTE             reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    LTE             reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    NE              reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    COMPARE         reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    AND             reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    OR              reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    RBRACKET        reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    COMMA           reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    TO              reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    CTEI            reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    CTEF            reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    CTEC            reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    CTESTRING       reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    LPAREN          reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    ID              reduce using rule 16 (var1 -> ID COMMA var1 addV .)


state 87

    (18) var1 -> ID arr COMMA var1 . addV
    (23) addV -> .

    SEMICOLON       reduce using rule 23 (addV -> .)
    RPAREN          reduce using rule 23 (addV -> .)
    INT             reduce using rule 23 (addV -> .)
    FLOAT           reduce using rule 23 (addV -> .)
    CHAR            reduce using rule 23 (addV -> .)
    MUL             reduce using rule 23 (addV -> .)
    DIV             reduce using rule 23 (addV -> .)
    PLUS            reduce using rule 23 (addV -> .)
    MINUS           reduce using rule 23 (addV -> .)
    GT              reduce using rule 23 (addV -> .)
    LT              reduce using rule 23 (addV -> .)
    GTE             reduce using rule 23 (addV -> .)
    LTE             reduce using rule 23 (addV -> .)
    NE              reduce using rule 23 (addV -> .)
    COMPARE         reduce using rule 23 (addV -> .)
    AND             reduce using rule 23 (addV -> .)
    OR              reduce using rule 23 (addV -> .)
    RBRACKET        reduce using rule 23 (addV -> .)
    COMMA           reduce using rule 23 (addV -> .)
    TO              reduce using rule 23 (addV -> .)
    CTEI            reduce using rule 23 (addV -> .)
    CTEF            reduce using rule 23 (addV -> .)
    CTEC            reduce using rule 23 (addV -> .)
    CTESTRING       reduce using rule 23 (addV -> .)
    LPAREN          reduce using rule 23 (addV -> .)
    ID              reduce using rule 23 (addV -> .)

    addV                           shift and go to state 130

state 88

    (19) var1 -> ID mat COMMA var1 . addV
    (23) addV -> .

    SEMICOLON       reduce using rule 23 (addV -> .)
    RPAREN          reduce using rule 23 (addV -> .)
    INT             reduce using rule 23 (addV -> .)
    FLOAT           reduce using rule 23 (addV -> .)
    CHAR            reduce using rule 23 (addV -> .)
    MUL             reduce using rule 23 (addV -> .)
    DIV             reduce using rule 23 (addV -> .)
    PLUS            reduce using rule 23 (addV -> .)
    MINUS           reduce using rule 23 (addV -> .)
    GT              reduce using rule 23 (addV -> .)
    LT              reduce using rule 23 (addV -> .)
    GTE             reduce using rule 23 (addV -> .)
    LTE             reduce using rule 23 (addV -> .)
    NE              reduce using rule 23 (addV -> .)
    COMPARE         reduce using rule 23 (addV -> .)
    AND             reduce using rule 23 (addV -> .)
    OR              reduce using rule 23 (addV -> .)
    RBRACKET        reduce using rule 23 (addV -> .)
    COMMA           reduce using rule 23 (addV -> .)
    TO              reduce using rule 23 (addV -> .)
    CTEI            reduce using rule 23 (addV -> .)
    CTEF            reduce using rule 23 (addV -> .)
    CTEC            reduce using rule 23 (addV -> .)
    CTESTRING       reduce using rule 23 (addV -> .)
    LPAREN          reduce using rule 23 (addV -> .)
    ID              reduce using rule 23 (addV -> .)

    addV                           shift and go to state 131

state 89

    (29) arr -> LBRACKET CTEI RBRACKET .
    (31) mat -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET
    (34) mat -> LBRACKET CTEI RBRACKET . LBRACKET exp RBRACKET

    COMMA           reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    INT             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    FLOAT           reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    CHAR            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    CTEI            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    CTEF            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    CTEC            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    CTESTRING       reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    ID              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 132


state 90

    (116) pexp -> CTEI saveCTE .

    MUL             reduce using rule 116 (pexp -> CTEI saveCTE .)
    DIV             reduce using rule 116 (pexp -> CTEI saveCTE .)
    PLUS            reduce using rule 116 (pexp -> CTEI saveCTE .)
    MINUS           reduce using rule 116 (pexp -> CTEI saveCTE .)
    GT              reduce using rule 116 (pexp -> CTEI saveCTE .)
    LT              reduce using rule 116 (pexp -> CTEI saveCTE .)
    GTE             reduce using rule 116 (pexp -> CTEI saveCTE .)
    LTE             reduce using rule 116 (pexp -> CTEI saveCTE .)
    NE              reduce using rule 116 (pexp -> CTEI saveCTE .)
    COMPARE         reduce using rule 116 (pexp -> CTEI saveCTE .)
    AND             reduce using rule 116 (pexp -> CTEI saveCTE .)
    OR              reduce using rule 116 (pexp -> CTEI saveCTE .)
    RBRACKET        reduce using rule 116 (pexp -> CTEI saveCTE .)
    RPAREN          reduce using rule 116 (pexp -> CTEI saveCTE .)
    COMMA           reduce using rule 116 (pexp -> CTEI saveCTE .)
    SEMICOLON       reduce using rule 116 (pexp -> CTEI saveCTE .)
    TO              reduce using rule 116 (pexp -> CTEI saveCTE .)
    CTEI            reduce using rule 116 (pexp -> CTEI saveCTE .)
    CTEF            reduce using rule 116 (pexp -> CTEI saveCTE .)
    CTEC            reduce using rule 116 (pexp -> CTEI saveCTE .)
    CTESTRING       reduce using rule 116 (pexp -> CTEI saveCTE .)
    LPAREN          reduce using rule 116 (pexp -> CTEI saveCTE .)
    ID              reduce using rule 116 (pexp -> CTEI saveCTE .)


state 91

    (30) arr -> LBRACKET exp RBRACKET .
    (32) mat -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET
    (33) mat -> LBRACKET exp RBRACKET . LBRACKET CTEI RBRACKET

    COMMA           reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    INT             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    MUL             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    DIV             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    GT              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    LT              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    GTE             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    LTE             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    NE              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    AND             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    OR              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    TO              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    CTEI            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    CTEF            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    CTEC            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    CTESTRING       reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    LPAREN          reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    ID              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 133


state 92

    (87) exp -> nexp OR . addOperadorName nexp genera_quad_or
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    GT              reduce using rule 57 (addOperadorName -> .)
    LT              reduce using rule 57 (addOperadorName -> .)
    GTE             reduce using rule 57 (addOperadorName -> .)
    LTE             reduce using rule 57 (addOperadorName -> .)
    NE              reduce using rule 57 (addOperadorName -> .)
    COMPARE         reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    RBRACKET        reduce using rule 57 (addOperadorName -> .)
    RPAREN          reduce using rule 57 (addOperadorName -> .)
    COMMA           reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 134

state 93

    (94) nexp -> compexp AND . addOperadorName compexp genera_quad_and
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    GT              reduce using rule 57 (addOperadorName -> .)
    LT              reduce using rule 57 (addOperadorName -> .)
    GTE             reduce using rule 57 (addOperadorName -> .)
    LTE             reduce using rule 57 (addOperadorName -> .)
    NE              reduce using rule 57 (addOperadorName -> .)
    COMPARE         reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    RBRACKET        reduce using rule 57 (addOperadorName -> .)
    RPAREN          reduce using rule 57 (addOperadorName -> .)
    COMMA           reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 135

state 94

    (97) compexp1 -> sumexp GT . addOperadorName sumexp compare_quad
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    RBRACKET        reduce using rule 57 (addOperadorName -> .)
    RPAREN          reduce using rule 57 (addOperadorName -> .)
    COMMA           reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 136

state 95

    (98) compexp1 -> sumexp LT . addOperadorName sumexp compare_quad
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    RBRACKET        reduce using rule 57 (addOperadorName -> .)
    RPAREN          reduce using rule 57 (addOperadorName -> .)
    COMMA           reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 137

state 96

    (99) compexp1 -> sumexp GTE . addOperadorName sumexp compare_quad
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    RBRACKET        reduce using rule 57 (addOperadorName -> .)
    RPAREN          reduce using rule 57 (addOperadorName -> .)
    COMMA           reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 138

state 97

    (100) compexp1 -> sumexp LTE . addOperadorName sumexp compare_quad
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    RBRACKET        reduce using rule 57 (addOperadorName -> .)
    RPAREN          reduce using rule 57 (addOperadorName -> .)
    COMMA           reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 139

state 98

    (101) compexp1 -> sumexp NE . addOperadorName sumexp compare_quad
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    RBRACKET        reduce using rule 57 (addOperadorName -> .)
    RPAREN          reduce using rule 57 (addOperadorName -> .)
    COMMA           reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 140

state 99

    (102) compexp1 -> sumexp COMPARE . addOperadorName sumexp compare_quad
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    RBRACKET        reduce using rule 57 (addOperadorName -> .)
    RPAREN          reduce using rule 57 (addOperadorName -> .)
    COMMA           reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 141

state 100

    (96) compexp -> compexp1 sumexp .

    AND             reduce using rule 96 (compexp -> compexp1 sumexp .)
    OR              reduce using rule 96 (compexp -> compexp1 sumexp .)
    RBRACKET        reduce using rule 96 (compexp -> compexp1 sumexp .)
    RPAREN          reduce using rule 96 (compexp -> compexp1 sumexp .)
    COMMA           reduce using rule 96 (compexp -> compexp1 sumexp .)
    SEMICOLON       reduce using rule 96 (compexp -> compexp1 sumexp .)
    TO              reduce using rule 96 (compexp -> compexp1 sumexp .)


state 101

    (116) pexp -> CTEI . saveCTE
    (125) saveCTE -> .

    MUL             reduce using rule 125 (saveCTE -> .)
    DIV             reduce using rule 125 (saveCTE -> .)
    PLUS            reduce using rule 125 (saveCTE -> .)
    MINUS           reduce using rule 125 (saveCTE -> .)
    AND             reduce using rule 125 (saveCTE -> .)
    OR              reduce using rule 125 (saveCTE -> .)
    RBRACKET        reduce using rule 125 (saveCTE -> .)
    RPAREN          reduce using rule 125 (saveCTE -> .)
    COMMA           reduce using rule 125 (saveCTE -> .)
    SEMICOLON       reduce using rule 125 (saveCTE -> .)
    TO              reduce using rule 125 (saveCTE -> .)
    GT              reduce using rule 125 (saveCTE -> .)
    LT              reduce using rule 125 (saveCTE -> .)
    GTE             reduce using rule 125 (saveCTE -> .)
    LTE             reduce using rule 125 (saveCTE -> .)
    NE              reduce using rule 125 (saveCTE -> .)
    COMPARE         reduce using rule 125 (saveCTE -> .)
    CTEI            reduce using rule 125 (saveCTE -> .)
    CTEF            reduce using rule 125 (saveCTE -> .)
    CTEC            reduce using rule 125 (saveCTE -> .)
    CTESTRING       reduce using rule 125 (saveCTE -> .)
    LPAREN          reduce using rule 125 (saveCTE -> .)
    ID              reduce using rule 125 (saveCTE -> .)

    saveCTE                        shift and go to state 90

state 102

    (104) sumexp -> mulexp PLUS . addOperadorName mulexp genera_sum_quad
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    GT              reduce using rule 57 (addOperadorName -> .)
    LT              reduce using rule 57 (addOperadorName -> .)
    GTE             reduce using rule 57 (addOperadorName -> .)
    LTE             reduce using rule 57 (addOperadorName -> .)
    NE              reduce using rule 57 (addOperadorName -> .)
    COMPARE         reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    RBRACKET        reduce using rule 57 (addOperadorName -> .)
    RPAREN          reduce using rule 57 (addOperadorName -> .)
    COMMA           reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 142

state 103

    (105) sumexp -> mulexp MINUS . addOperadorName mulexp genera_sum_quad
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    GT              reduce using rule 57 (addOperadorName -> .)
    LT              reduce using rule 57 (addOperadorName -> .)
    GTE             reduce using rule 57 (addOperadorName -> .)
    LTE             reduce using rule 57 (addOperadorName -> .)
    NE              reduce using rule 57 (addOperadorName -> .)
    COMPARE         reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    RBRACKET        reduce using rule 57 (addOperadorName -> .)
    RPAREN          reduce using rule 57 (addOperadorName -> .)
    COMMA           reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 143

state 104

    (113) mulexp -> pexp MUL . addOperadorName pexp genera_mul_quad
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    GT              reduce using rule 57 (addOperadorName -> .)
    LT              reduce using rule 57 (addOperadorName -> .)
    GTE             reduce using rule 57 (addOperadorName -> .)
    LTE             reduce using rule 57 (addOperadorName -> .)
    NE              reduce using rule 57 (addOperadorName -> .)
    COMPARE         reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    RBRACKET        reduce using rule 57 (addOperadorName -> .)
    RPAREN          reduce using rule 57 (addOperadorName -> .)
    COMMA           reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 144

state 105

    (114) mulexp -> pexp DIV . addOperadorName pexp genera_mul_quad
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    GT              reduce using rule 57 (addOperadorName -> .)
    LT              reduce using rule 57 (addOperadorName -> .)
    GTE             reduce using rule 57 (addOperadorName -> .)
    LTE             reduce using rule 57 (addOperadorName -> .)
    NE              reduce using rule 57 (addOperadorName -> .)
    COMPARE         reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    RBRACKET        reduce using rule 57 (addOperadorName -> .)
    RPAREN          reduce using rule 57 (addOperadorName -> .)
    COMMA           reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 145

state 106

    (115) pexp -> var1 saveId .

    MUL             reduce using rule 115 (pexp -> var1 saveId .)
    DIV             reduce using rule 115 (pexp -> var1 saveId .)
    PLUS            reduce using rule 115 (pexp -> var1 saveId .)
    MINUS           reduce using rule 115 (pexp -> var1 saveId .)
    GT              reduce using rule 115 (pexp -> var1 saveId .)
    LT              reduce using rule 115 (pexp -> var1 saveId .)
    GTE             reduce using rule 115 (pexp -> var1 saveId .)
    LTE             reduce using rule 115 (pexp -> var1 saveId .)
    NE              reduce using rule 115 (pexp -> var1 saveId .)
    COMPARE         reduce using rule 115 (pexp -> var1 saveId .)
    AND             reduce using rule 115 (pexp -> var1 saveId .)
    OR              reduce using rule 115 (pexp -> var1 saveId .)
    RBRACKET        reduce using rule 115 (pexp -> var1 saveId .)
    RPAREN          reduce using rule 115 (pexp -> var1 saveId .)
    COMMA           reduce using rule 115 (pexp -> var1 saveId .)
    SEMICOLON       reduce using rule 115 (pexp -> var1 saveId .)
    TO              reduce using rule 115 (pexp -> var1 saveId .)
    CTEI            reduce using rule 115 (pexp -> var1 saveId .)
    CTEF            reduce using rule 115 (pexp -> var1 saveId .)
    CTEC            reduce using rule 115 (pexp -> var1 saveId .)
    CTESTRING       reduce using rule 115 (pexp -> var1 saveId .)
    LPAREN          reduce using rule 115 (pexp -> var1 saveId .)
    ID              reduce using rule 115 (pexp -> var1 saveId .)


state 107

    (117) pexp -> CTEF saveCTE .

    MUL             reduce using rule 117 (pexp -> CTEF saveCTE .)
    DIV             reduce using rule 117 (pexp -> CTEF saveCTE .)
    PLUS            reduce using rule 117 (pexp -> CTEF saveCTE .)
    MINUS           reduce using rule 117 (pexp -> CTEF saveCTE .)
    GT              reduce using rule 117 (pexp -> CTEF saveCTE .)
    LT              reduce using rule 117 (pexp -> CTEF saveCTE .)
    GTE             reduce using rule 117 (pexp -> CTEF saveCTE .)
    LTE             reduce using rule 117 (pexp -> CTEF saveCTE .)
    NE              reduce using rule 117 (pexp -> CTEF saveCTE .)
    COMPARE         reduce using rule 117 (pexp -> CTEF saveCTE .)
    AND             reduce using rule 117 (pexp -> CTEF saveCTE .)
    OR              reduce using rule 117 (pexp -> CTEF saveCTE .)
    RBRACKET        reduce using rule 117 (pexp -> CTEF saveCTE .)
    RPAREN          reduce using rule 117 (pexp -> CTEF saveCTE .)
    COMMA           reduce using rule 117 (pexp -> CTEF saveCTE .)
    SEMICOLON       reduce using rule 117 (pexp -> CTEF saveCTE .)
    TO              reduce using rule 117 (pexp -> CTEF saveCTE .)
    CTEI            reduce using rule 117 (pexp -> CTEF saveCTE .)
    CTEF            reduce using rule 117 (pexp -> CTEF saveCTE .)
    CTEC            reduce using rule 117 (pexp -> CTEF saveCTE .)
    CTESTRING       reduce using rule 117 (pexp -> CTEF saveCTE .)
    LPAREN          reduce using rule 117 (pexp -> CTEF saveCTE .)
    ID              reduce using rule 117 (pexp -> CTEF saveCTE .)


state 108

    (118) pexp -> CTEC saveCTE .

    MUL             reduce using rule 118 (pexp -> CTEC saveCTE .)
    DIV             reduce using rule 118 (pexp -> CTEC saveCTE .)
    PLUS            reduce using rule 118 (pexp -> CTEC saveCTE .)
    MINUS           reduce using rule 118 (pexp -> CTEC saveCTE .)
    GT              reduce using rule 118 (pexp -> CTEC saveCTE .)
    LT              reduce using rule 118 (pexp -> CTEC saveCTE .)
    GTE             reduce using rule 118 (pexp -> CTEC saveCTE .)
    LTE             reduce using rule 118 (pexp -> CTEC saveCTE .)
    NE              reduce using rule 118 (pexp -> CTEC saveCTE .)
    COMPARE         reduce using rule 118 (pexp -> CTEC saveCTE .)
    AND             reduce using rule 118 (pexp -> CTEC saveCTE .)
    OR              reduce using rule 118 (pexp -> CTEC saveCTE .)
    RBRACKET        reduce using rule 118 (pexp -> CTEC saveCTE .)
    RPAREN          reduce using rule 118 (pexp -> CTEC saveCTE .)
    COMMA           reduce using rule 118 (pexp -> CTEC saveCTE .)
    SEMICOLON       reduce using rule 118 (pexp -> CTEC saveCTE .)
    TO              reduce using rule 118 (pexp -> CTEC saveCTE .)
    CTEI            reduce using rule 118 (pexp -> CTEC saveCTE .)
    CTEF            reduce using rule 118 (pexp -> CTEC saveCTE .)
    CTEC            reduce using rule 118 (pexp -> CTEC saveCTE .)
    CTESTRING       reduce using rule 118 (pexp -> CTEC saveCTE .)
    LPAREN          reduce using rule 118 (pexp -> CTEC saveCTE .)
    ID              reduce using rule 118 (pexp -> CTEC saveCTE .)


state 109

    (119) pexp -> CTESTRING saveCTE .

    MUL             reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    DIV             reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    PLUS            reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    MINUS           reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    GT              reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    LT              reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    GTE             reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    LTE             reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    NE              reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    COMPARE         reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    AND             reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    OR              reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    RBRACKET        reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    RPAREN          reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    COMMA           reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    SEMICOLON       reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    TO              reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    CTEI            reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    CTEF            reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    CTEC            reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    CTESTRING       reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    LPAREN          reduce using rule 119 (pexp -> CTESTRING saveCTE .)
    ID              reduce using rule 119 (pexp -> CTESTRING saveCTE .)


state 110

    (121) pexp -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 146


state 111

    (70) llamada -> ID LPAREN . exp RPAREN
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)

    exp                            shift and go to state 147
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 112

    (7) main -> MAIN LPAREN param2 RPAREN LCURLY vars statement . RCURLY END

    RCURLY          shift and go to state 148


state 113

    (44) statement -> statement1 . statement
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (122) empty -> .
    (53) asignacion -> . ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion
    (54) asignacion -> . ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion
    (55) asignacion -> . ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion
    (70) llamada -> . ID LPAREN exp RPAREN
    (85) lectura -> . READ operatorRead LPAREN var1 operatorReadQuad RPAREN
    (78) escritura -> . PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN
    (75) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (71) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY
    (72) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else
    (77) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)
    ID              shift and go to state 122
    READ            shift and go to state 123
    PRINT           shift and go to state 124
    FOR             shift and go to state 125
    IF              shift and go to state 126
    WHILE           shift and go to state 127

    statement1                     shift and go to state 113
    statement                      shift and go to state 149
    empty                          shift and go to state 114
    asignacion                     shift and go to state 115
    llamada                        shift and go to state 116
    lectura                        shift and go to state 117
    escritura                      shift and go to state 118
    for                            shift and go to state 119
    if                             shift and go to state 120
    while                          shift and go to state 121

state 114

    (45) statement -> empty .

    RCURLY          reduce using rule 45 (statement -> empty .)
    RETURN          reduce using rule 45 (statement -> empty .)


state 115

    (46) statement1 -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 150


state 116

    (47) statement1 -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 151


state 117

    (48) statement1 -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 152


state 118

    (49) statement1 -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 153


state 119

    (50) statement1 -> for .

    ID              reduce using rule 50 (statement1 -> for .)
    READ            reduce using rule 50 (statement1 -> for .)
    PRINT           reduce using rule 50 (statement1 -> for .)
    FOR             reduce using rule 50 (statement1 -> for .)
    IF              reduce using rule 50 (statement1 -> for .)
    WHILE           reduce using rule 50 (statement1 -> for .)
    RCURLY          reduce using rule 50 (statement1 -> for .)
    RETURN          reduce using rule 50 (statement1 -> for .)


state 120

    (51) statement1 -> if .

    ID              reduce using rule 51 (statement1 -> if .)
    READ            reduce using rule 51 (statement1 -> if .)
    PRINT           reduce using rule 51 (statement1 -> if .)
    FOR             reduce using rule 51 (statement1 -> if .)
    IF              reduce using rule 51 (statement1 -> if .)
    WHILE           reduce using rule 51 (statement1 -> if .)
    RCURLY          reduce using rule 51 (statement1 -> if .)
    RETURN          reduce using rule 51 (statement1 -> if .)


state 121

    (52) statement1 -> while .

    ID              reduce using rule 52 (statement1 -> while .)
    READ            reduce using rule 52 (statement1 -> while .)
    PRINT           reduce using rule 52 (statement1 -> while .)
    FOR             reduce using rule 52 (statement1 -> while .)
    IF              reduce using rule 52 (statement1 -> while .)
    WHILE           reduce using rule 52 (statement1 -> while .)
    RCURLY          reduce using rule 52 (statement1 -> while .)
    RETURN          reduce using rule 52 (statement1 -> while .)


state 122

    (53) asignacion -> ID . saveId2 EQUALS addOperadorName exp genera_quad_asignacion
    (54) asignacion -> ID . saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion
    (55) asignacion -> ID . saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion
    (70) llamada -> ID . LPAREN exp RPAREN
    (124) saveId2 -> .

    LPAREN          shift and go to state 111
    EQUALS          reduce using rule 124 (saveId2 -> .)
    LBRACKET        reduce using rule 124 (saveId2 -> .)

    saveId2                        shift and go to state 154

state 123

    (85) lectura -> READ . operatorRead LPAREN var1 operatorReadQuad RPAREN
    (110) operatorRead -> .

    LPAREN          reduce using rule 110 (operatorRead -> .)

    operatorRead                   shift and go to state 155

state 124

    (78) escritura -> PRINT . LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN

    LPAREN          shift and go to state 156


state 125

    (75) for -> FOR . LPAREN for1 RPAREN LCURLY statement RCURLY

    LPAREN          shift and go to state 157


state 126

    (71) if -> IF . LPAREN exp RPAREN if_quad LCURLY statement RCURLY
    (72) if -> IF . LPAREN exp RPAREN if_quad LCURLY statement RCURLY else

    LPAREN          shift and go to state 158


state 127

    (77) while -> WHILE . LPAREN exp RPAREN LCURLY statement RCURLY

    LPAREN          shift and go to state 159


state 128

    (42) function1 -> ID save_fun LPAREN param2 RPAREN . SEMICOLON LCURLY vars statement RCURLY

    SEMICOLON       shift and go to state 160


state 129

    (43) function2 -> ID save_fun LPAREN param RPAREN . SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    SEMICOLON       shift and go to state 161


state 130

    (18) var1 -> ID arr COMMA var1 addV .

    SEMICOLON       reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    RPAREN          reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    INT             reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    FLOAT           reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    CHAR            reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    MUL             reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    DIV             reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    PLUS            reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    MINUS           reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    GT              reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    LT              reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    GTE             reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    LTE             reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    NE              reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    COMPARE         reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    AND             reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    OR              reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    RBRACKET        reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    COMMA           reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    TO              reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    CTEI            reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    CTEF            reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    CTEC            reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    CTESTRING       reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    LPAREN          reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    ID              reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)


state 131

    (19) var1 -> ID mat COMMA var1 addV .

    SEMICOLON       reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    RPAREN          reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    INT             reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    FLOAT           reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    CHAR            reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    MUL             reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    DIV             reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    PLUS            reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    MINUS           reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    GT              reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    LT              reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    GTE             reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    LTE             reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    NE              reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    COMPARE         reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    AND             reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    OR              reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    RBRACKET        reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    COMMA           reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    TO              reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    CTEI            reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    CTEF            reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    CTEC            reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    CTESTRING       reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    LPAREN          reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    ID              reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)


state 132

    (31) mat -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET
    (34) mat -> LBRACKET CTEI RBRACKET LBRACKET . exp RBRACKET
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 162
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)

    exp                            shift and go to state 163
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 133

    (32) mat -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (33) mat -> LBRACKET exp RBRACKET LBRACKET . CTEI RBRACKET
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 165
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)

    exp                            shift and go to state 164
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 134

    (87) exp -> nexp OR addOperadorName . nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)

    nexp                           shift and go to state 166
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 135

    (94) nexp -> compexp AND addOperadorName . compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)

    compexp                        shift and go to state 167
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 136

    (97) compexp1 -> sumexp GT addOperadorName . sumexp compare_quad
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)

  ! CTEI            [ reduce using rule 122 (empty -> .) ]
  ! CTEF            [ reduce using rule 122 (empty -> .) ]
  ! CTEC            [ reduce using rule 122 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 122 (empty -> .) ]
  ! LPAREN          [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]

    sumexp                         shift and go to state 168
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 137

    (98) compexp1 -> sumexp LT addOperadorName . sumexp compare_quad
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)

  ! CTEI            [ reduce using rule 122 (empty -> .) ]
  ! CTEF            [ reduce using rule 122 (empty -> .) ]
  ! CTEC            [ reduce using rule 122 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 122 (empty -> .) ]
  ! LPAREN          [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]

    sumexp                         shift and go to state 169
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 138

    (99) compexp1 -> sumexp GTE addOperadorName . sumexp compare_quad
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)

  ! CTEI            [ reduce using rule 122 (empty -> .) ]
  ! CTEF            [ reduce using rule 122 (empty -> .) ]
  ! CTEC            [ reduce using rule 122 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 122 (empty -> .) ]
  ! LPAREN          [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]

    sumexp                         shift and go to state 170
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 139

    (100) compexp1 -> sumexp LTE addOperadorName . sumexp compare_quad
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)

  ! CTEI            [ reduce using rule 122 (empty -> .) ]
  ! CTEF            [ reduce using rule 122 (empty -> .) ]
  ! CTEC            [ reduce using rule 122 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 122 (empty -> .) ]
  ! LPAREN          [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]

    sumexp                         shift and go to state 171
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 140

    (101) compexp1 -> sumexp NE addOperadorName . sumexp compare_quad
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)

  ! CTEI            [ reduce using rule 122 (empty -> .) ]
  ! CTEF            [ reduce using rule 122 (empty -> .) ]
  ! CTEC            [ reduce using rule 122 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 122 (empty -> .) ]
  ! LPAREN          [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]

    sumexp                         shift and go to state 172
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 141

    (102) compexp1 -> sumexp COMPARE addOperadorName . sumexp compare_quad
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)

  ! CTEI            [ reduce using rule 122 (empty -> .) ]
  ! CTEF            [ reduce using rule 122 (empty -> .) ]
  ! CTEC            [ reduce using rule 122 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 122 (empty -> .) ]
  ! LPAREN          [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]

    sumexp                         shift and go to state 173
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 142

    (104) sumexp -> mulexp PLUS addOperadorName . mulexp genera_sum_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)

  ! CTEI            [ reduce using rule 122 (empty -> .) ]
  ! CTEF            [ reduce using rule 122 (empty -> .) ]
  ! CTEC            [ reduce using rule 122 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 122 (empty -> .) ]
  ! LPAREN          [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]

    mulexp                         shift and go to state 174
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 143

    (105) sumexp -> mulexp MINUS addOperadorName . mulexp genera_sum_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)

  ! CTEI            [ reduce using rule 122 (empty -> .) ]
  ! CTEF            [ reduce using rule 122 (empty -> .) ]
  ! CTEC            [ reduce using rule 122 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 122 (empty -> .) ]
  ! LPAREN          [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]

    mulexp                         shift and go to state 175
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 144

    (113) mulexp -> pexp MUL addOperadorName . pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)

  ! CTEI            [ reduce using rule 122 (empty -> .) ]
  ! CTEF            [ reduce using rule 122 (empty -> .) ]
  ! CTEC            [ reduce using rule 122 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 122 (empty -> .) ]
  ! LPAREN          [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]

    pexp                           shift and go to state 176
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 145

    (114) mulexp -> pexp DIV addOperadorName . pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RBRACKET        reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)

  ! CTEI            [ reduce using rule 122 (empty -> .) ]
  ! CTEF            [ reduce using rule 122 (empty -> .) ]
  ! CTEC            [ reduce using rule 122 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 122 (empty -> .) ]
  ! LPAREN          [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]

    pexp                           shift and go to state 177
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 146

    (121) pexp -> LPAREN exp RPAREN .

    MUL             reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    DIV             reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    GT              reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    LT              reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    GTE             reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    LTE             reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    NE              reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    COMPARE         reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    AND             reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    OR              reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    TO              reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    CTEI            reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    CTEF            reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    CTEC            reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    CTESTRING       reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    LPAREN          reduce using rule 121 (pexp -> LPAREN exp RPAREN .)
    ID              reduce using rule 121 (pexp -> LPAREN exp RPAREN .)


state 147

    (70) llamada -> ID LPAREN exp . RPAREN

    RPAREN          shift and go to state 178


state 148

    (7) main -> MAIN LPAREN param2 RPAREN LCURLY vars statement RCURLY . END

    END             shift and go to state 179


state 149

    (44) statement -> statement1 statement .

    RCURLY          reduce using rule 44 (statement -> statement1 statement .)
    RETURN          reduce using rule 44 (statement -> statement1 statement .)


state 150

    (46) statement1 -> asignacion SEMICOLON .

    ID              reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    READ            reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    PRINT           reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    FOR             reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    IF              reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    WHILE           reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    RCURLY          reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    RETURN          reduce using rule 46 (statement1 -> asignacion SEMICOLON .)


state 151

    (47) statement1 -> llamada SEMICOLON .

    ID              reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    READ            reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    PRINT           reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    FOR             reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    IF              reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    WHILE           reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    RCURLY          reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    RETURN          reduce using rule 47 (statement1 -> llamada SEMICOLON .)


state 152

    (48) statement1 -> lectura SEMICOLON .

    ID              reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    READ            reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    PRINT           reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    FOR             reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    IF              reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    WHILE           reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    RCURLY          reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    RETURN          reduce using rule 48 (statement1 -> lectura SEMICOLON .)


state 153

    (49) statement1 -> escritura SEMICOLON .

    ID              reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    READ            reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    PRINT           reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    FOR             reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    IF              reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    WHILE           reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    RCURLY          reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    RETURN          reduce using rule 49 (statement1 -> escritura SEMICOLON .)


state 154

    (53) asignacion -> ID saveId2 . EQUALS addOperadorName exp genera_quad_asignacion
    (54) asignacion -> ID saveId2 . arr EQUALS addOperadorName exp genera_quad_asignacion
    (55) asignacion -> ID saveId2 . mat EQUALS addOperadorName exp genera_quad_asignacion
    (29) arr -> . LBRACKET CTEI RBRACKET
    (30) arr -> . LBRACKET exp RBRACKET
    (31) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

    EQUALS          shift and go to state 180
    LBRACKET        shift and go to state 53

    arr                            shift and go to state 181
    mat                            shift and go to state 182

state 155

    (85) lectura -> READ operatorRead . LPAREN var1 operatorReadQuad RPAREN

    LPAREN          shift and go to state 183


state 156

    (78) escritura -> PRINT LPAREN . operadorPrint escritura1 operatorPrintQuad RPAREN
    (108) operadorPrint -> .

    COMILLA         reduce using rule 108 (operadorPrint -> .)
    CTEI            reduce using rule 108 (operadorPrint -> .)
    CTEF            reduce using rule 108 (operadorPrint -> .)
    CTEC            reduce using rule 108 (operadorPrint -> .)
    CTESTRING       reduce using rule 108 (operadorPrint -> .)
    LPAREN          reduce using rule 108 (operadorPrint -> .)
    ID              reduce using rule 108 (operadorPrint -> .)
    RPAREN          reduce using rule 108 (operadorPrint -> .)
    COMMA           reduce using rule 108 (operadorPrint -> .)
    OR              reduce using rule 108 (operadorPrint -> .)
    AND             reduce using rule 108 (operadorPrint -> .)
    GT              reduce using rule 108 (operadorPrint -> .)
    LT              reduce using rule 108 (operadorPrint -> .)
    GTE             reduce using rule 108 (operadorPrint -> .)
    LTE             reduce using rule 108 (operadorPrint -> .)
    NE              reduce using rule 108 (operadorPrint -> .)
    COMPARE         reduce using rule 108 (operadorPrint -> .)
    PLUS            reduce using rule 108 (operadorPrint -> .)
    MINUS           reduce using rule 108 (operadorPrint -> .)
    MUL             reduce using rule 108 (operadorPrint -> .)
    DIV             reduce using rule 108 (operadorPrint -> .)

    operadorPrint                  shift and go to state 184

state 157

    (75) for -> FOR LPAREN . for1 RPAREN LCURLY statement RCURLY
    (76) for1 -> . FROM asignacion TO exp

    FROM            shift and go to state 186

    for1                           shift and go to state 185

state 158

    (71) if -> IF LPAREN . exp RPAREN if_quad LCURLY statement RCURLY
    (72) if -> IF LPAREN . exp RPAREN if_quad LCURLY statement RCURLY else
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)

    exp                            shift and go to state 187
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 159

    (77) while -> WHILE LPAREN . exp RPAREN LCURLY statement RCURLY
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)

    exp                            shift and go to state 188
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 160

    (42) function1 -> ID save_fun LPAREN param2 RPAREN SEMICOLON . LCURLY vars statement RCURLY

    LCURLY          shift and go to state 189


state 161

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON . LCURLY vars statement RETURN exp SEMICOLON RCURLY

    LCURLY          shift and go to state 190


state 162

    (31) mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET
    (116) pexp -> CTEI . saveCTE
    (125) saveCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 191
    MUL             reduce using rule 125 (saveCTE -> .)
    DIV             reduce using rule 125 (saveCTE -> .)
    PLUS            reduce using rule 125 (saveCTE -> .)
    MINUS           reduce using rule 125 (saveCTE -> .)
    GT              reduce using rule 125 (saveCTE -> .)
    LT              reduce using rule 125 (saveCTE -> .)
    GTE             reduce using rule 125 (saveCTE -> .)
    LTE             reduce using rule 125 (saveCTE -> .)
    NE              reduce using rule 125 (saveCTE -> .)
    COMPARE         reduce using rule 125 (saveCTE -> .)
    AND             reduce using rule 125 (saveCTE -> .)
    OR              reduce using rule 125 (saveCTE -> .)

  ! RBRACKET        [ reduce using rule 125 (saveCTE -> .) ]

    saveCTE                        shift and go to state 90

state 163

    (34) mat -> LBRACKET CTEI RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 192


state 164

    (32) mat -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 193


state 165

    (33) mat -> LBRACKET exp RBRACKET LBRACKET CTEI . RBRACKET
    (116) pexp -> CTEI . saveCTE
    (125) saveCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 194
    MUL             reduce using rule 125 (saveCTE -> .)
    DIV             reduce using rule 125 (saveCTE -> .)
    PLUS            reduce using rule 125 (saveCTE -> .)
    MINUS           reduce using rule 125 (saveCTE -> .)
    GT              reduce using rule 125 (saveCTE -> .)
    LT              reduce using rule 125 (saveCTE -> .)
    GTE             reduce using rule 125 (saveCTE -> .)
    LTE             reduce using rule 125 (saveCTE -> .)
    NE              reduce using rule 125 (saveCTE -> .)
    COMPARE         reduce using rule 125 (saveCTE -> .)
    AND             reduce using rule 125 (saveCTE -> .)
    OR              reduce using rule 125 (saveCTE -> .)

  ! RBRACKET        [ reduce using rule 125 (saveCTE -> .) ]

    saveCTE                        shift and go to state 90

state 166

    (87) exp -> nexp OR addOperadorName nexp . genera_quad_or
    (88) genera_quad_or -> .

    RBRACKET        reduce using rule 88 (genera_quad_or -> .)
    RPAREN          reduce using rule 88 (genera_quad_or -> .)
    COMMA           reduce using rule 88 (genera_quad_or -> .)
    SEMICOLON       reduce using rule 88 (genera_quad_or -> .)
    TO              reduce using rule 88 (genera_quad_or -> .)

    genera_quad_or                 shift and go to state 195

state 167

    (94) nexp -> compexp AND addOperadorName compexp . genera_quad_and
    (89) genera_quad_and -> .

    OR              reduce using rule 89 (genera_quad_and -> .)
    RBRACKET        reduce using rule 89 (genera_quad_and -> .)
    RPAREN          reduce using rule 89 (genera_quad_and -> .)
    COMMA           reduce using rule 89 (genera_quad_and -> .)
    SEMICOLON       reduce using rule 89 (genera_quad_and -> .)
    TO              reduce using rule 89 (genera_quad_and -> .)

    genera_quad_and                shift and go to state 196

state 168

    (97) compexp1 -> sumexp GT addOperadorName sumexp . compare_quad
    (90) compare_quad -> .

    CTEI            reduce using rule 90 (compare_quad -> .)
    CTEF            reduce using rule 90 (compare_quad -> .)
    CTEC            reduce using rule 90 (compare_quad -> .)
    CTESTRING       reduce using rule 90 (compare_quad -> .)
    LPAREN          reduce using rule 90 (compare_quad -> .)
    ID              reduce using rule 90 (compare_quad -> .)
    PLUS            reduce using rule 90 (compare_quad -> .)
    MINUS           reduce using rule 90 (compare_quad -> .)
    MUL             reduce using rule 90 (compare_quad -> .)
    DIV             reduce using rule 90 (compare_quad -> .)
    AND             reduce using rule 90 (compare_quad -> .)
    OR              reduce using rule 90 (compare_quad -> .)
    RBRACKET        reduce using rule 90 (compare_quad -> .)
    RPAREN          reduce using rule 90 (compare_quad -> .)
    COMMA           reduce using rule 90 (compare_quad -> .)
    SEMICOLON       reduce using rule 90 (compare_quad -> .)
    TO              reduce using rule 90 (compare_quad -> .)

    compare_quad                   shift and go to state 197

state 169

    (98) compexp1 -> sumexp LT addOperadorName sumexp . compare_quad
    (90) compare_quad -> .

    CTEI            reduce using rule 90 (compare_quad -> .)
    CTEF            reduce using rule 90 (compare_quad -> .)
    CTEC            reduce using rule 90 (compare_quad -> .)
    CTESTRING       reduce using rule 90 (compare_quad -> .)
    LPAREN          reduce using rule 90 (compare_quad -> .)
    ID              reduce using rule 90 (compare_quad -> .)
    PLUS            reduce using rule 90 (compare_quad -> .)
    MINUS           reduce using rule 90 (compare_quad -> .)
    MUL             reduce using rule 90 (compare_quad -> .)
    DIV             reduce using rule 90 (compare_quad -> .)
    AND             reduce using rule 90 (compare_quad -> .)
    OR              reduce using rule 90 (compare_quad -> .)
    RBRACKET        reduce using rule 90 (compare_quad -> .)
    RPAREN          reduce using rule 90 (compare_quad -> .)
    COMMA           reduce using rule 90 (compare_quad -> .)
    SEMICOLON       reduce using rule 90 (compare_quad -> .)
    TO              reduce using rule 90 (compare_quad -> .)

    compare_quad                   shift and go to state 198

state 170

    (99) compexp1 -> sumexp GTE addOperadorName sumexp . compare_quad
    (90) compare_quad -> .

    CTEI            reduce using rule 90 (compare_quad -> .)
    CTEF            reduce using rule 90 (compare_quad -> .)
    CTEC            reduce using rule 90 (compare_quad -> .)
    CTESTRING       reduce using rule 90 (compare_quad -> .)
    LPAREN          reduce using rule 90 (compare_quad -> .)
    ID              reduce using rule 90 (compare_quad -> .)
    PLUS            reduce using rule 90 (compare_quad -> .)
    MINUS           reduce using rule 90 (compare_quad -> .)
    MUL             reduce using rule 90 (compare_quad -> .)
    DIV             reduce using rule 90 (compare_quad -> .)
    AND             reduce using rule 90 (compare_quad -> .)
    OR              reduce using rule 90 (compare_quad -> .)
    RBRACKET        reduce using rule 90 (compare_quad -> .)
    RPAREN          reduce using rule 90 (compare_quad -> .)
    COMMA           reduce using rule 90 (compare_quad -> .)
    SEMICOLON       reduce using rule 90 (compare_quad -> .)
    TO              reduce using rule 90 (compare_quad -> .)

    compare_quad                   shift and go to state 199

state 171

    (100) compexp1 -> sumexp LTE addOperadorName sumexp . compare_quad
    (90) compare_quad -> .

    CTEI            reduce using rule 90 (compare_quad -> .)
    CTEF            reduce using rule 90 (compare_quad -> .)
    CTEC            reduce using rule 90 (compare_quad -> .)
    CTESTRING       reduce using rule 90 (compare_quad -> .)
    LPAREN          reduce using rule 90 (compare_quad -> .)
    ID              reduce using rule 90 (compare_quad -> .)
    PLUS            reduce using rule 90 (compare_quad -> .)
    MINUS           reduce using rule 90 (compare_quad -> .)
    MUL             reduce using rule 90 (compare_quad -> .)
    DIV             reduce using rule 90 (compare_quad -> .)
    AND             reduce using rule 90 (compare_quad -> .)
    OR              reduce using rule 90 (compare_quad -> .)
    RBRACKET        reduce using rule 90 (compare_quad -> .)
    RPAREN          reduce using rule 90 (compare_quad -> .)
    COMMA           reduce using rule 90 (compare_quad -> .)
    SEMICOLON       reduce using rule 90 (compare_quad -> .)
    TO              reduce using rule 90 (compare_quad -> .)

    compare_quad                   shift and go to state 200

state 172

    (101) compexp1 -> sumexp NE addOperadorName sumexp . compare_quad
    (90) compare_quad -> .

    CTEI            reduce using rule 90 (compare_quad -> .)
    CTEF            reduce using rule 90 (compare_quad -> .)
    CTEC            reduce using rule 90 (compare_quad -> .)
    CTESTRING       reduce using rule 90 (compare_quad -> .)
    LPAREN          reduce using rule 90 (compare_quad -> .)
    ID              reduce using rule 90 (compare_quad -> .)
    PLUS            reduce using rule 90 (compare_quad -> .)
    MINUS           reduce using rule 90 (compare_quad -> .)
    MUL             reduce using rule 90 (compare_quad -> .)
    DIV             reduce using rule 90 (compare_quad -> .)
    AND             reduce using rule 90 (compare_quad -> .)
    OR              reduce using rule 90 (compare_quad -> .)
    RBRACKET        reduce using rule 90 (compare_quad -> .)
    RPAREN          reduce using rule 90 (compare_quad -> .)
    COMMA           reduce using rule 90 (compare_quad -> .)
    SEMICOLON       reduce using rule 90 (compare_quad -> .)
    TO              reduce using rule 90 (compare_quad -> .)

    compare_quad                   shift and go to state 201

state 173

    (102) compexp1 -> sumexp COMPARE addOperadorName sumexp . compare_quad
    (90) compare_quad -> .

    CTEI            reduce using rule 90 (compare_quad -> .)
    CTEF            reduce using rule 90 (compare_quad -> .)
    CTEC            reduce using rule 90 (compare_quad -> .)
    CTESTRING       reduce using rule 90 (compare_quad -> .)
    LPAREN          reduce using rule 90 (compare_quad -> .)
    ID              reduce using rule 90 (compare_quad -> .)
    PLUS            reduce using rule 90 (compare_quad -> .)
    MINUS           reduce using rule 90 (compare_quad -> .)
    MUL             reduce using rule 90 (compare_quad -> .)
    DIV             reduce using rule 90 (compare_quad -> .)
    AND             reduce using rule 90 (compare_quad -> .)
    OR              reduce using rule 90 (compare_quad -> .)
    RBRACKET        reduce using rule 90 (compare_quad -> .)
    RPAREN          reduce using rule 90 (compare_quad -> .)
    COMMA           reduce using rule 90 (compare_quad -> .)
    SEMICOLON       reduce using rule 90 (compare_quad -> .)
    TO              reduce using rule 90 (compare_quad -> .)

    compare_quad                   shift and go to state 202

state 174

    (104) sumexp -> mulexp PLUS addOperadorName mulexp . genera_sum_quad
    (106) genera_sum_quad -> .

    GT              reduce using rule 106 (genera_sum_quad -> .)
    LT              reduce using rule 106 (genera_sum_quad -> .)
    GTE             reduce using rule 106 (genera_sum_quad -> .)
    LTE             reduce using rule 106 (genera_sum_quad -> .)
    NE              reduce using rule 106 (genera_sum_quad -> .)
    COMPARE         reduce using rule 106 (genera_sum_quad -> .)
    AND             reduce using rule 106 (genera_sum_quad -> .)
    OR              reduce using rule 106 (genera_sum_quad -> .)
    RBRACKET        reduce using rule 106 (genera_sum_quad -> .)
    RPAREN          reduce using rule 106 (genera_sum_quad -> .)
    COMMA           reduce using rule 106 (genera_sum_quad -> .)
    SEMICOLON       reduce using rule 106 (genera_sum_quad -> .)
    TO              reduce using rule 106 (genera_sum_quad -> .)
    CTEI            reduce using rule 106 (genera_sum_quad -> .)
    CTEF            reduce using rule 106 (genera_sum_quad -> .)
    CTEC            reduce using rule 106 (genera_sum_quad -> .)
    CTESTRING       reduce using rule 106 (genera_sum_quad -> .)
    LPAREN          reduce using rule 106 (genera_sum_quad -> .)
    ID              reduce using rule 106 (genera_sum_quad -> .)
    PLUS            reduce using rule 106 (genera_sum_quad -> .)
    MINUS           reduce using rule 106 (genera_sum_quad -> .)
    MUL             reduce using rule 106 (genera_sum_quad -> .)
    DIV             reduce using rule 106 (genera_sum_quad -> .)

    genera_sum_quad                shift and go to state 203

state 175

    (105) sumexp -> mulexp MINUS addOperadorName mulexp . genera_sum_quad
    (106) genera_sum_quad -> .

    GT              reduce using rule 106 (genera_sum_quad -> .)
    LT              reduce using rule 106 (genera_sum_quad -> .)
    GTE             reduce using rule 106 (genera_sum_quad -> .)
    LTE             reduce using rule 106 (genera_sum_quad -> .)
    NE              reduce using rule 106 (genera_sum_quad -> .)
    COMPARE         reduce using rule 106 (genera_sum_quad -> .)
    AND             reduce using rule 106 (genera_sum_quad -> .)
    OR              reduce using rule 106 (genera_sum_quad -> .)
    RBRACKET        reduce using rule 106 (genera_sum_quad -> .)
    RPAREN          reduce using rule 106 (genera_sum_quad -> .)
    COMMA           reduce using rule 106 (genera_sum_quad -> .)
    SEMICOLON       reduce using rule 106 (genera_sum_quad -> .)
    TO              reduce using rule 106 (genera_sum_quad -> .)
    CTEI            reduce using rule 106 (genera_sum_quad -> .)
    CTEF            reduce using rule 106 (genera_sum_quad -> .)
    CTEC            reduce using rule 106 (genera_sum_quad -> .)
    CTESTRING       reduce using rule 106 (genera_sum_quad -> .)
    LPAREN          reduce using rule 106 (genera_sum_quad -> .)
    ID              reduce using rule 106 (genera_sum_quad -> .)
    PLUS            reduce using rule 106 (genera_sum_quad -> .)
    MINUS           reduce using rule 106 (genera_sum_quad -> .)
    MUL             reduce using rule 106 (genera_sum_quad -> .)
    DIV             reduce using rule 106 (genera_sum_quad -> .)

    genera_sum_quad                shift and go to state 204

state 176

    (113) mulexp -> pexp MUL addOperadorName pexp . genera_mul_quad
    (107) genera_mul_quad -> .

    PLUS            reduce using rule 107 (genera_mul_quad -> .)
    MINUS           reduce using rule 107 (genera_mul_quad -> .)
    GT              reduce using rule 107 (genera_mul_quad -> .)
    LT              reduce using rule 107 (genera_mul_quad -> .)
    GTE             reduce using rule 107 (genera_mul_quad -> .)
    LTE             reduce using rule 107 (genera_mul_quad -> .)
    NE              reduce using rule 107 (genera_mul_quad -> .)
    COMPARE         reduce using rule 107 (genera_mul_quad -> .)
    AND             reduce using rule 107 (genera_mul_quad -> .)
    OR              reduce using rule 107 (genera_mul_quad -> .)
    RBRACKET        reduce using rule 107 (genera_mul_quad -> .)
    RPAREN          reduce using rule 107 (genera_mul_quad -> .)
    COMMA           reduce using rule 107 (genera_mul_quad -> .)
    SEMICOLON       reduce using rule 107 (genera_mul_quad -> .)
    TO              reduce using rule 107 (genera_mul_quad -> .)
    CTEI            reduce using rule 107 (genera_mul_quad -> .)
    CTEF            reduce using rule 107 (genera_mul_quad -> .)
    CTEC            reduce using rule 107 (genera_mul_quad -> .)
    CTESTRING       reduce using rule 107 (genera_mul_quad -> .)
    LPAREN          reduce using rule 107 (genera_mul_quad -> .)
    ID              reduce using rule 107 (genera_mul_quad -> .)
    MUL             reduce using rule 107 (genera_mul_quad -> .)
    DIV             reduce using rule 107 (genera_mul_quad -> .)

    genera_mul_quad                shift and go to state 205

state 177

    (114) mulexp -> pexp DIV addOperadorName pexp . genera_mul_quad
    (107) genera_mul_quad -> .

    PLUS            reduce using rule 107 (genera_mul_quad -> .)
    MINUS           reduce using rule 107 (genera_mul_quad -> .)
    GT              reduce using rule 107 (genera_mul_quad -> .)
    LT              reduce using rule 107 (genera_mul_quad -> .)
    GTE             reduce using rule 107 (genera_mul_quad -> .)
    LTE             reduce using rule 107 (genera_mul_quad -> .)
    NE              reduce using rule 107 (genera_mul_quad -> .)
    COMPARE         reduce using rule 107 (genera_mul_quad -> .)
    AND             reduce using rule 107 (genera_mul_quad -> .)
    OR              reduce using rule 107 (genera_mul_quad -> .)
    RBRACKET        reduce using rule 107 (genera_mul_quad -> .)
    RPAREN          reduce using rule 107 (genera_mul_quad -> .)
    COMMA           reduce using rule 107 (genera_mul_quad -> .)
    SEMICOLON       reduce using rule 107 (genera_mul_quad -> .)
    TO              reduce using rule 107 (genera_mul_quad -> .)
    CTEI            reduce using rule 107 (genera_mul_quad -> .)
    CTEF            reduce using rule 107 (genera_mul_quad -> .)
    CTEC            reduce using rule 107 (genera_mul_quad -> .)
    CTESTRING       reduce using rule 107 (genera_mul_quad -> .)
    LPAREN          reduce using rule 107 (genera_mul_quad -> .)
    ID              reduce using rule 107 (genera_mul_quad -> .)
    MUL             reduce using rule 107 (genera_mul_quad -> .)
    DIV             reduce using rule 107 (genera_mul_quad -> .)

    genera_mul_quad                shift and go to state 206

state 178

    (70) llamada -> ID LPAREN exp RPAREN .

    MUL             reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    DIV             reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    PLUS            reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    MINUS           reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    GT              reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    LT              reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    GTE             reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    LTE             reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    NE              reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    COMPARE         reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    AND             reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    OR              reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    RPAREN          reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    COMMA           reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    TO              reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    CTEI            reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    CTEF            reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    CTEC            reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    CTESTRING       reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    LPAREN          reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)
    ID              reduce using rule 70 (llamada -> ID LPAREN exp RPAREN .)


state 179

    (7) main -> MAIN LPAREN param2 RPAREN LCURLY vars statement RCURLY END .

    $end            reduce using rule 7 (main -> MAIN LPAREN param2 RPAREN LCURLY vars statement RCURLY END .)


state 180

    (53) asignacion -> ID saveId2 EQUALS . addOperadorName exp genera_quad_asignacion
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    GT              reduce using rule 57 (addOperadorName -> .)
    LT              reduce using rule 57 (addOperadorName -> .)
    GTE             reduce using rule 57 (addOperadorName -> .)
    LTE             reduce using rule 57 (addOperadorName -> .)
    NE              reduce using rule 57 (addOperadorName -> .)
    COMPARE         reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 207

state 181

    (54) asignacion -> ID saveId2 arr . EQUALS addOperadorName exp genera_quad_asignacion

    EQUALS          shift and go to state 208


state 182

    (55) asignacion -> ID saveId2 mat . EQUALS addOperadorName exp genera_quad_asignacion

    EQUALS          shift and go to state 209


state 183

    (85) lectura -> READ operatorRead LPAREN . var1 operatorReadQuad RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (122) empty -> .

    ID              shift and go to state 40
    RPAREN          reduce using rule 122 (empty -> .)

    var1                           shift and go to state 210
    empty                          shift and go to state 41

state 184

    (78) escritura -> PRINT LPAREN operadorPrint . escritura1 operatorPrintQuad RPAREN
    (79) escritura1 -> . escritura2 COMMA escritura2
    (80) escritura1 -> . escritura2
    (81) escritura2 -> . COMILLA CTESTRING COMILLA
    (82) escritura2 -> . CTEI saveCTE operatorPrintQuad
    (83) escritura2 -> . CTEF saveCTE operatorPrintQuad
    (84) escritura2 -> . exp
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    COMILLA         shift and go to state 213
    CTEI            shift and go to state 214
    CTEF            shift and go to state 215
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)

    escritura1                     shift and go to state 211
    escritura2                     shift and go to state 212
    exp                            shift and go to state 216
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 185

    (75) for -> FOR LPAREN for1 . RPAREN LCURLY statement RCURLY

    RPAREN          shift and go to state 217


state 186

    (76) for1 -> FROM . asignacion TO exp
    (53) asignacion -> . ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion
    (54) asignacion -> . ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion
    (55) asignacion -> . ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion

    ID              shift and go to state 219

    asignacion                     shift and go to state 218

state 187

    (71) if -> IF LPAREN exp . RPAREN if_quad LCURLY statement RCURLY
    (72) if -> IF LPAREN exp . RPAREN if_quad LCURLY statement RCURLY else

    RPAREN          shift and go to state 220


state 188

    (77) while -> WHILE LPAREN exp . RPAREN LCURLY statement RCURLY

    RPAREN          shift and go to state 221


state 189

    (42) function1 -> ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY . vars statement RCURLY
    (12) vars -> . var
    (13) vars -> . empty
    (14) var -> . VAR var2
    (122) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 122 (empty -> .)
    READ            reduce using rule 122 (empty -> .)
    PRINT           reduce using rule 122 (empty -> .)
    FOR             reduce using rule 122 (empty -> .)
    IF              reduce using rule 122 (empty -> .)
    WHILE           reduce using rule 122 (empty -> .)
    RCURLY          reduce using rule 122 (empty -> .)

    vars                           shift and go to state 222
    var                            shift and go to state 9
    empty                          shift and go to state 10

state 190

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY . vars statement RETURN exp SEMICOLON RCURLY
    (12) vars -> . var
    (13) vars -> . empty
    (14) var -> . VAR var2
    (122) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 122 (empty -> .)
    READ            reduce using rule 122 (empty -> .)
    PRINT           reduce using rule 122 (empty -> .)
    FOR             reduce using rule 122 (empty -> .)
    IF              reduce using rule 122 (empty -> .)
    WHILE           reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)

    vars                           shift and go to state 223
    var                            shift and go to state 9
    empty                          shift and go to state 10

state 191

    (31) mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    TRANSPUESTA     reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    INVERSA         reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    DETERMINANTE    reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    INT             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    FLOAT           reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CHAR            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTEI            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTEF            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTEC            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTESTRING       reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    ID              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 192

    (34) mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .

    COMMA           reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    TRANSPUESTA     reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    INVERSA         reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    DETERMINANTE    reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    INT             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    MUL             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    DIV             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    GTE             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LTE             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    TO              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTEI            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTEF            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTEC            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTESTRING       reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LPAREN          reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    ID              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)


state 193

    (32) mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    COMMA           reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TRANSPUESTA     reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    INVERSA         reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DETERMINANTE    reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    INT             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MUL             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIV             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GTE             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LTE             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TO              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTEI            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTEF            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTEC            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTESTRING       reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LPAREN          reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    ID              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 194

    (33) mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    TRANSPUESTA     reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    INVERSA         reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    DETERMINANTE    reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    INT             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    FLOAT           reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CHAR            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTEI            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTEF            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTEC            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTESTRING       reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    ID              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)


state 195

    (87) exp -> nexp OR addOperadorName nexp genera_quad_or .

    RBRACKET        reduce using rule 87 (exp -> nexp OR addOperadorName nexp genera_quad_or .)
    RPAREN          reduce using rule 87 (exp -> nexp OR addOperadorName nexp genera_quad_or .)
    COMMA           reduce using rule 87 (exp -> nexp OR addOperadorName nexp genera_quad_or .)
    SEMICOLON       reduce using rule 87 (exp -> nexp OR addOperadorName nexp genera_quad_or .)
    TO              reduce using rule 87 (exp -> nexp OR addOperadorName nexp genera_quad_or .)


state 196

    (94) nexp -> compexp AND addOperadorName compexp genera_quad_and .

    OR              reduce using rule 94 (nexp -> compexp AND addOperadorName compexp genera_quad_and .)
    RBRACKET        reduce using rule 94 (nexp -> compexp AND addOperadorName compexp genera_quad_and .)
    RPAREN          reduce using rule 94 (nexp -> compexp AND addOperadorName compexp genera_quad_and .)
    COMMA           reduce using rule 94 (nexp -> compexp AND addOperadorName compexp genera_quad_and .)
    SEMICOLON       reduce using rule 94 (nexp -> compexp AND addOperadorName compexp genera_quad_and .)
    TO              reduce using rule 94 (nexp -> compexp AND addOperadorName compexp genera_quad_and .)


state 197

    (97) compexp1 -> sumexp GT addOperadorName sumexp compare_quad .

    CTEI            reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    CTEF            reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    CTEC            reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    CTESTRING       reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    LPAREN          reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    ID              reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    PLUS            reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    MINUS           reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    MUL             reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    DIV             reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    AND             reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    OR              reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    RBRACKET        reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    RPAREN          reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    COMMA           reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    SEMICOLON       reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)
    TO              reduce using rule 97 (compexp1 -> sumexp GT addOperadorName sumexp compare_quad .)


state 198

    (98) compexp1 -> sumexp LT addOperadorName sumexp compare_quad .

    CTEI            reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    CTEF            reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    CTEC            reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    CTESTRING       reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    LPAREN          reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    ID              reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    PLUS            reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    MINUS           reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    MUL             reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    DIV             reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    AND             reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    OR              reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    RBRACKET        reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    RPAREN          reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    COMMA           reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    SEMICOLON       reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)
    TO              reduce using rule 98 (compexp1 -> sumexp LT addOperadorName sumexp compare_quad .)


state 199

    (99) compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .

    CTEI            reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    CTEF            reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    CTEC            reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    CTESTRING       reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    LPAREN          reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    ID              reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    PLUS            reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    MINUS           reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    MUL             reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    DIV             reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    AND             reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    OR              reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    RBRACKET        reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    RPAREN          reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    COMMA           reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    SEMICOLON       reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)
    TO              reduce using rule 99 (compexp1 -> sumexp GTE addOperadorName sumexp compare_quad .)


state 200

    (100) compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .

    CTEI            reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    CTEF            reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    CTEC            reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    CTESTRING       reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    LPAREN          reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    ID              reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    PLUS            reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    MINUS           reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    MUL             reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    DIV             reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    AND             reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    OR              reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    RBRACKET        reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    RPAREN          reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    COMMA           reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    SEMICOLON       reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)
    TO              reduce using rule 100 (compexp1 -> sumexp LTE addOperadorName sumexp compare_quad .)


state 201

    (101) compexp1 -> sumexp NE addOperadorName sumexp compare_quad .

    CTEI            reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    CTEF            reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    CTEC            reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    CTESTRING       reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    LPAREN          reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    ID              reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    PLUS            reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    MINUS           reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    MUL             reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    DIV             reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    AND             reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    OR              reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    RBRACKET        reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    RPAREN          reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    COMMA           reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    SEMICOLON       reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)
    TO              reduce using rule 101 (compexp1 -> sumexp NE addOperadorName sumexp compare_quad .)


state 202

    (102) compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .

    CTEI            reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    CTEF            reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    CTEC            reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    CTESTRING       reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    LPAREN          reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    ID              reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    PLUS            reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    MINUS           reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    MUL             reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    DIV             reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    AND             reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    OR              reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    RBRACKET        reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    RPAREN          reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    COMMA           reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    SEMICOLON       reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)
    TO              reduce using rule 102 (compexp1 -> sumexp COMPARE addOperadorName sumexp compare_quad .)


state 203

    (104) sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .

    GT              reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    LT              reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    GTE             reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    LTE             reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    NE              reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    COMPARE         reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    AND             reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    OR              reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    RBRACKET        reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    RPAREN          reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    COMMA           reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    SEMICOLON       reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    TO              reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    CTEI            reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    CTEF            reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    CTEC            reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    CTESTRING       reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    LPAREN          reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    ID              reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    PLUS            reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    MINUS           reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    MUL             reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)
    DIV             reduce using rule 104 (sumexp -> mulexp PLUS addOperadorName mulexp genera_sum_quad .)


state 204

    (105) sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .

    GT              reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    LT              reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    GTE             reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    LTE             reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    NE              reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    COMPARE         reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    AND             reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    OR              reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    RBRACKET        reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    RPAREN          reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    COMMA           reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    SEMICOLON       reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    TO              reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    CTEI            reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    CTEF            reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    CTEC            reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    CTESTRING       reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    LPAREN          reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    ID              reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    PLUS            reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    MINUS           reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    MUL             reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)
    DIV             reduce using rule 105 (sumexp -> mulexp MINUS addOperadorName mulexp genera_sum_quad .)


state 205

    (113) mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .

    PLUS            reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    MINUS           reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    GT              reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    LT              reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    GTE             reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    LTE             reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    NE              reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    COMPARE         reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    AND             reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    OR              reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    RBRACKET        reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    RPAREN          reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    COMMA           reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    SEMICOLON       reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    TO              reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    CTEI            reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    CTEF            reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    CTEC            reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    CTESTRING       reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    LPAREN          reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    ID              reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    MUL             reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)
    DIV             reduce using rule 113 (mulexp -> pexp MUL addOperadorName pexp genera_mul_quad .)


state 206

    (114) mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .

    PLUS            reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    MINUS           reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    GT              reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    LT              reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    GTE             reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    LTE             reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    NE              reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    COMPARE         reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    AND             reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    OR              reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    RBRACKET        reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    RPAREN          reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    COMMA           reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    SEMICOLON       reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    TO              reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    CTEI            reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    CTEF            reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    CTEC            reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    CTESTRING       reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    LPAREN          reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    ID              reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    MUL             reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)
    DIV             reduce using rule 114 (mulexp -> pexp DIV addOperadorName pexp genera_mul_quad .)


state 207

    (53) asignacion -> ID saveId2 EQUALS addOperadorName . exp genera_quad_asignacion
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)

    exp                            shift and go to state 224
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 208

    (54) asignacion -> ID saveId2 arr EQUALS . addOperadorName exp genera_quad_asignacion
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    GT              reduce using rule 57 (addOperadorName -> .)
    LT              reduce using rule 57 (addOperadorName -> .)
    GTE             reduce using rule 57 (addOperadorName -> .)
    LTE             reduce using rule 57 (addOperadorName -> .)
    NE              reduce using rule 57 (addOperadorName -> .)
    COMPARE         reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 225

state 209

    (55) asignacion -> ID saveId2 mat EQUALS . addOperadorName exp genera_quad_asignacion
    (57) addOperadorName -> .

    CTEI            reduce using rule 57 (addOperadorName -> .)
    CTEF            reduce using rule 57 (addOperadorName -> .)
    CTEC            reduce using rule 57 (addOperadorName -> .)
    CTESTRING       reduce using rule 57 (addOperadorName -> .)
    LPAREN          reduce using rule 57 (addOperadorName -> .)
    ID              reduce using rule 57 (addOperadorName -> .)
    OR              reduce using rule 57 (addOperadorName -> .)
    AND             reduce using rule 57 (addOperadorName -> .)
    GT              reduce using rule 57 (addOperadorName -> .)
    LT              reduce using rule 57 (addOperadorName -> .)
    GTE             reduce using rule 57 (addOperadorName -> .)
    LTE             reduce using rule 57 (addOperadorName -> .)
    NE              reduce using rule 57 (addOperadorName -> .)
    COMPARE         reduce using rule 57 (addOperadorName -> .)
    PLUS            reduce using rule 57 (addOperadorName -> .)
    MINUS           reduce using rule 57 (addOperadorName -> .)
    MUL             reduce using rule 57 (addOperadorName -> .)
    DIV             reduce using rule 57 (addOperadorName -> .)
    SEMICOLON       reduce using rule 57 (addOperadorName -> .)
    TO              reduce using rule 57 (addOperadorName -> .)

    addOperadorName                shift and go to state 226

state 210

    (85) lectura -> READ operatorRead LPAREN var1 . operatorReadQuad RPAREN
    (111) operatorReadQuad -> .

    RPAREN          reduce using rule 111 (operatorReadQuad -> .)

    operatorReadQuad               shift and go to state 227

state 211

    (78) escritura -> PRINT LPAREN operadorPrint escritura1 . operatorPrintQuad RPAREN
    (109) operatorPrintQuad -> .

    RPAREN          reduce using rule 109 (operatorPrintQuad -> .)

    operatorPrintQuad              shift and go to state 228

state 212

    (79) escritura1 -> escritura2 . COMMA escritura2
    (80) escritura1 -> escritura2 .

    COMMA           shift and go to state 229
    RPAREN          reduce using rule 80 (escritura1 -> escritura2 .)


state 213

    (81) escritura2 -> COMILLA . CTESTRING COMILLA

    CTESTRING       shift and go to state 230


state 214

    (82) escritura2 -> CTEI . saveCTE operatorPrintQuad
    (116) pexp -> CTEI . saveCTE
    (125) saveCTE -> .

    COMMA           reduce using rule 125 (saveCTE -> .)
    RPAREN          reduce using rule 125 (saveCTE -> .)
    MUL             reduce using rule 125 (saveCTE -> .)
    DIV             reduce using rule 125 (saveCTE -> .)
    PLUS            reduce using rule 125 (saveCTE -> .)
    MINUS           reduce using rule 125 (saveCTE -> .)
    GT              reduce using rule 125 (saveCTE -> .)
    LT              reduce using rule 125 (saveCTE -> .)
    GTE             reduce using rule 125 (saveCTE -> .)
    LTE             reduce using rule 125 (saveCTE -> .)
    NE              reduce using rule 125 (saveCTE -> .)
    COMPARE         reduce using rule 125 (saveCTE -> .)
    AND             reduce using rule 125 (saveCTE -> .)
    OR              reduce using rule 125 (saveCTE -> .)

    saveCTE                        shift and go to state 231

state 215

    (83) escritura2 -> CTEF . saveCTE operatorPrintQuad
    (117) pexp -> CTEF . saveCTE
    (125) saveCTE -> .

    COMMA           reduce using rule 125 (saveCTE -> .)
    RPAREN          reduce using rule 125 (saveCTE -> .)
    MUL             reduce using rule 125 (saveCTE -> .)
    DIV             reduce using rule 125 (saveCTE -> .)
    PLUS            reduce using rule 125 (saveCTE -> .)
    MINUS           reduce using rule 125 (saveCTE -> .)
    GT              reduce using rule 125 (saveCTE -> .)
    LT              reduce using rule 125 (saveCTE -> .)
    GTE             reduce using rule 125 (saveCTE -> .)
    LTE             reduce using rule 125 (saveCTE -> .)
    NE              reduce using rule 125 (saveCTE -> .)
    COMPARE         reduce using rule 125 (saveCTE -> .)
    AND             reduce using rule 125 (saveCTE -> .)
    OR              reduce using rule 125 (saveCTE -> .)

    saveCTE                        shift and go to state 232

state 216

    (84) escritura2 -> exp .

    COMMA           reduce using rule 84 (escritura2 -> exp .)
    RPAREN          reduce using rule 84 (escritura2 -> exp .)


state 217

    (75) for -> FOR LPAREN for1 RPAREN . LCURLY statement RCURLY

    LCURLY          shift and go to state 233


state 218

    (76) for1 -> FROM asignacion . TO exp

    TO              shift and go to state 234


state 219

    (53) asignacion -> ID . saveId2 EQUALS addOperadorName exp genera_quad_asignacion
    (54) asignacion -> ID . saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion
    (55) asignacion -> ID . saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion
    (124) saveId2 -> .

    EQUALS          reduce using rule 124 (saveId2 -> .)
    LBRACKET        reduce using rule 124 (saveId2 -> .)

    saveId2                        shift and go to state 154

state 220

    (71) if -> IF LPAREN exp RPAREN . if_quad LCURLY statement RCURLY
    (72) if -> IF LPAREN exp RPAREN . if_quad LCURLY statement RCURLY else
    (91) if_quad -> .

    LCURLY          reduce using rule 91 (if_quad -> .)

    if_quad                        shift and go to state 235

state 221

    (77) while -> WHILE LPAREN exp RPAREN . LCURLY statement RCURLY

    LCURLY          shift and go to state 236


state 222

    (42) function1 -> ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars . statement RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (122) empty -> .
    (53) asignacion -> . ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion
    (54) asignacion -> . ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion
    (55) asignacion -> . ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion
    (70) llamada -> . ID LPAREN exp RPAREN
    (85) lectura -> . READ operatorRead LPAREN var1 operatorReadQuad RPAREN
    (78) escritura -> . PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN
    (75) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (71) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY
    (72) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else
    (77) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 122 (empty -> .)
    ID              shift and go to state 122
    READ            shift and go to state 123
    PRINT           shift and go to state 124
    FOR             shift and go to state 125
    IF              shift and go to state 126
    WHILE           shift and go to state 127

    statement                      shift and go to state 237
    statement1                     shift and go to state 113
    empty                          shift and go to state 114
    asignacion                     shift and go to state 115
    llamada                        shift and go to state 116
    lectura                        shift and go to state 117
    escritura                      shift and go to state 118
    for                            shift and go to state 119
    if                             shift and go to state 120
    while                          shift and go to state 121

state 223

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars . statement RETURN exp SEMICOLON RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (122) empty -> .
    (53) asignacion -> . ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion
    (54) asignacion -> . ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion
    (55) asignacion -> . ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion
    (70) llamada -> . ID LPAREN exp RPAREN
    (85) lectura -> . READ operatorRead LPAREN var1 operatorReadQuad RPAREN
    (78) escritura -> . PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN
    (75) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (71) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY
    (72) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else
    (77) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RETURN          reduce using rule 122 (empty -> .)
    ID              shift and go to state 122
    READ            shift and go to state 123
    PRINT           shift and go to state 124
    FOR             shift and go to state 125
    IF              shift and go to state 126
    WHILE           shift and go to state 127

    statement                      shift and go to state 238
    statement1                     shift and go to state 113
    empty                          shift and go to state 114
    asignacion                     shift and go to state 115
    llamada                        shift and go to state 116
    lectura                        shift and go to state 117
    escritura                      shift and go to state 118
    for                            shift and go to state 119
    if                             shift and go to state 120
    while                          shift and go to state 121

state 224

    (53) asignacion -> ID saveId2 EQUALS addOperadorName exp . genera_quad_asignacion
    (56) genera_quad_asignacion -> .

    SEMICOLON       reduce using rule 56 (genera_quad_asignacion -> .)
    TO              reduce using rule 56 (genera_quad_asignacion -> .)

    genera_quad_asignacion         shift and go to state 239

state 225

    (54) asignacion -> ID saveId2 arr EQUALS addOperadorName . exp genera_quad_asignacion
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)

    exp                            shift and go to state 240
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 226

    (55) asignacion -> ID saveId2 mat EQUALS addOperadorName . exp genera_quad_asignacion
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)
    TO              reduce using rule 122 (empty -> .)

    exp                            shift and go to state 241
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 227

    (85) lectura -> READ operatorRead LPAREN var1 operatorReadQuad . RPAREN

    RPAREN          shift and go to state 242


state 228

    (78) escritura -> PRINT LPAREN operadorPrint escritura1 operatorPrintQuad . RPAREN

    RPAREN          shift and go to state 243


state 229

    (79) escritura1 -> escritura2 COMMA . escritura2
    (81) escritura2 -> . COMILLA CTESTRING COMILLA
    (82) escritura2 -> . CTEI saveCTE operatorPrintQuad
    (83) escritura2 -> . CTEF saveCTE operatorPrintQuad
    (84) escritura2 -> . exp
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    COMILLA         shift and go to state 213
    CTEI            shift and go to state 214
    CTEF            shift and go to state 215
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)

    escritura2                     shift and go to state 244
    exp                            shift and go to state 216
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 230

    (81) escritura2 -> COMILLA CTESTRING . COMILLA

    COMILLA         shift and go to state 245


state 231

    (82) escritura2 -> CTEI saveCTE . operatorPrintQuad
    (116) pexp -> CTEI saveCTE .
    (109) operatorPrintQuad -> .

  ! reduce/reduce conflict for COMMA resolved using rule 109 (operatorPrintQuad -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 109 (operatorPrintQuad -> .)
    MUL             reduce using rule 116 (pexp -> CTEI saveCTE .)
    DIV             reduce using rule 116 (pexp -> CTEI saveCTE .)
    PLUS            reduce using rule 116 (pexp -> CTEI saveCTE .)
    MINUS           reduce using rule 116 (pexp -> CTEI saveCTE .)
    GT              reduce using rule 116 (pexp -> CTEI saveCTE .)
    LT              reduce using rule 116 (pexp -> CTEI saveCTE .)
    GTE             reduce using rule 116 (pexp -> CTEI saveCTE .)
    LTE             reduce using rule 116 (pexp -> CTEI saveCTE .)
    NE              reduce using rule 116 (pexp -> CTEI saveCTE .)
    COMPARE         reduce using rule 116 (pexp -> CTEI saveCTE .)
    AND             reduce using rule 116 (pexp -> CTEI saveCTE .)
    OR              reduce using rule 116 (pexp -> CTEI saveCTE .)
    COMMA           reduce using rule 109 (operatorPrintQuad -> .)
    RPAREN          reduce using rule 109 (operatorPrintQuad -> .)

  ! COMMA           [ reduce using rule 116 (pexp -> CTEI saveCTE .) ]
  ! RPAREN          [ reduce using rule 116 (pexp -> CTEI saveCTE .) ]

    operatorPrintQuad              shift and go to state 246

state 232

    (83) escritura2 -> CTEF saveCTE . operatorPrintQuad
    (117) pexp -> CTEF saveCTE .
    (109) operatorPrintQuad -> .

  ! reduce/reduce conflict for COMMA resolved using rule 109 (operatorPrintQuad -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 109 (operatorPrintQuad -> .)
    MUL             reduce using rule 117 (pexp -> CTEF saveCTE .)
    DIV             reduce using rule 117 (pexp -> CTEF saveCTE .)
    PLUS            reduce using rule 117 (pexp -> CTEF saveCTE .)
    MINUS           reduce using rule 117 (pexp -> CTEF saveCTE .)
    GT              reduce using rule 117 (pexp -> CTEF saveCTE .)
    LT              reduce using rule 117 (pexp -> CTEF saveCTE .)
    GTE             reduce using rule 117 (pexp -> CTEF saveCTE .)
    LTE             reduce using rule 117 (pexp -> CTEF saveCTE .)
    NE              reduce using rule 117 (pexp -> CTEF saveCTE .)
    COMPARE         reduce using rule 117 (pexp -> CTEF saveCTE .)
    AND             reduce using rule 117 (pexp -> CTEF saveCTE .)
    OR              reduce using rule 117 (pexp -> CTEF saveCTE .)
    COMMA           reduce using rule 109 (operatorPrintQuad -> .)
    RPAREN          reduce using rule 109 (operatorPrintQuad -> .)

  ! COMMA           [ reduce using rule 117 (pexp -> CTEF saveCTE .) ]
  ! RPAREN          [ reduce using rule 117 (pexp -> CTEF saveCTE .) ]

    operatorPrintQuad              shift and go to state 247

state 233

    (75) for -> FOR LPAREN for1 RPAREN LCURLY . statement RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (122) empty -> .
    (53) asignacion -> . ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion
    (54) asignacion -> . ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion
    (55) asignacion -> . ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion
    (70) llamada -> . ID LPAREN exp RPAREN
    (85) lectura -> . READ operatorRead LPAREN var1 operatorReadQuad RPAREN
    (78) escritura -> . PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN
    (75) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (71) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY
    (72) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else
    (77) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 122 (empty -> .)
    ID              shift and go to state 122
    READ            shift and go to state 123
    PRINT           shift and go to state 124
    FOR             shift and go to state 125
    IF              shift and go to state 126
    WHILE           shift and go to state 127

    statement                      shift and go to state 248
    statement1                     shift and go to state 113
    empty                          shift and go to state 114
    asignacion                     shift and go to state 115
    llamada                        shift and go to state 116
    lectura                        shift and go to state 117
    escritura                      shift and go to state 118
    for                            shift and go to state 119
    if                             shift and go to state 120
    while                          shift and go to state 121

state 234

    (76) for1 -> FROM asignacion TO . exp
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    RPAREN          reduce using rule 122 (empty -> .)

    exp                            shift and go to state 249
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 235

    (71) if -> IF LPAREN exp RPAREN if_quad . LCURLY statement RCURLY
    (72) if -> IF LPAREN exp RPAREN if_quad . LCURLY statement RCURLY else

    LCURLY          shift and go to state 250


state 236

    (77) while -> WHILE LPAREN exp RPAREN LCURLY . statement RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (122) empty -> .
    (53) asignacion -> . ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion
    (54) asignacion -> . ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion
    (55) asignacion -> . ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion
    (70) llamada -> . ID LPAREN exp RPAREN
    (85) lectura -> . READ operatorRead LPAREN var1 operatorReadQuad RPAREN
    (78) escritura -> . PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN
    (75) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (71) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY
    (72) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else
    (77) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 122 (empty -> .)
    ID              shift and go to state 122
    READ            shift and go to state 123
    PRINT           shift and go to state 124
    FOR             shift and go to state 125
    IF              shift and go to state 126
    WHILE           shift and go to state 127

    statement                      shift and go to state 251
    statement1                     shift and go to state 113
    empty                          shift and go to state 114
    asignacion                     shift and go to state 115
    llamada                        shift and go to state 116
    lectura                        shift and go to state 117
    escritura                      shift and go to state 118
    for                            shift and go to state 119
    if                             shift and go to state 120
    while                          shift and go to state 121

state 237

    (42) function1 -> ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars statement . RCURLY

    RCURLY          shift and go to state 252


state 238

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement . RETURN exp SEMICOLON RCURLY

    RETURN          shift and go to state 253


state 239

    (53) asignacion -> ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion .

    SEMICOLON       reduce using rule 53 (asignacion -> ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion .)
    TO              reduce using rule 53 (asignacion -> ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion .)


state 240

    (54) asignacion -> ID saveId2 arr EQUALS addOperadorName exp . genera_quad_asignacion
    (56) genera_quad_asignacion -> .

    SEMICOLON       reduce using rule 56 (genera_quad_asignacion -> .)
    TO              reduce using rule 56 (genera_quad_asignacion -> .)

    genera_quad_asignacion         shift and go to state 254

state 241

    (55) asignacion -> ID saveId2 mat EQUALS addOperadorName exp . genera_quad_asignacion
    (56) genera_quad_asignacion -> .

    SEMICOLON       reduce using rule 56 (genera_quad_asignacion -> .)
    TO              reduce using rule 56 (genera_quad_asignacion -> .)

    genera_quad_asignacion         shift and go to state 255

state 242

    (85) lectura -> READ operatorRead LPAREN var1 operatorReadQuad RPAREN .

    SEMICOLON       reduce using rule 85 (lectura -> READ operatorRead LPAREN var1 operatorReadQuad RPAREN .)


state 243

    (78) escritura -> PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN .

    SEMICOLON       reduce using rule 78 (escritura -> PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN .)


state 244

    (79) escritura1 -> escritura2 COMMA escritura2 .

    RPAREN          reduce using rule 79 (escritura1 -> escritura2 COMMA escritura2 .)


state 245

    (81) escritura2 -> COMILLA CTESTRING COMILLA .

    COMMA           reduce using rule 81 (escritura2 -> COMILLA CTESTRING COMILLA .)
    RPAREN          reduce using rule 81 (escritura2 -> COMILLA CTESTRING COMILLA .)


state 246

    (82) escritura2 -> CTEI saveCTE operatorPrintQuad .

    COMMA           reduce using rule 82 (escritura2 -> CTEI saveCTE operatorPrintQuad .)
    RPAREN          reduce using rule 82 (escritura2 -> CTEI saveCTE operatorPrintQuad .)


state 247

    (83) escritura2 -> CTEF saveCTE operatorPrintQuad .

    COMMA           reduce using rule 83 (escritura2 -> CTEF saveCTE operatorPrintQuad .)
    RPAREN          reduce using rule 83 (escritura2 -> CTEF saveCTE operatorPrintQuad .)


state 248

    (75) for -> FOR LPAREN for1 RPAREN LCURLY statement . RCURLY

    RCURLY          shift and go to state 256


state 249

    (76) for1 -> FROM asignacion TO exp .

    RPAREN          reduce using rule 76 (for1 -> FROM asignacion TO exp .)


state 250

    (71) if -> IF LPAREN exp RPAREN if_quad LCURLY . statement RCURLY
    (72) if -> IF LPAREN exp RPAREN if_quad LCURLY . statement RCURLY else
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (122) empty -> .
    (53) asignacion -> . ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion
    (54) asignacion -> . ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion
    (55) asignacion -> . ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion
    (70) llamada -> . ID LPAREN exp RPAREN
    (85) lectura -> . READ operatorRead LPAREN var1 operatorReadQuad RPAREN
    (78) escritura -> . PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN
    (75) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (71) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY
    (72) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else
    (77) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 122 (empty -> .)
    ID              shift and go to state 122
    READ            shift and go to state 123
    PRINT           shift and go to state 124
    FOR             shift and go to state 125
    IF              shift and go to state 126
    WHILE           shift and go to state 127

    statement                      shift and go to state 257
    statement1                     shift and go to state 113
    empty                          shift and go to state 114
    asignacion                     shift and go to state 115
    llamada                        shift and go to state 116
    lectura                        shift and go to state 117
    escritura                      shift and go to state 118
    for                            shift and go to state 119
    if                             shift and go to state 120
    while                          shift and go to state 121

state 251

    (77) while -> WHILE LPAREN exp RPAREN LCURLY statement . RCURLY

    RCURLY          shift and go to state 258


state 252

    (42) function1 -> ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars statement RCURLY .

    FUN             reduce using rule 42 (function1 -> ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars statement RCURLY .)
    MAIN            reduce using rule 42 (function1 -> ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars statement RCURLY .)
    $end            reduce using rule 42 (function1 -> ID save_fun LPAREN param2 RPAREN SEMICOLON LCURLY vars statement RCURLY .)


state 253

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN . exp SEMICOLON RCURLY
    (86) exp -> . nexp
    (87) exp -> . nexp OR addOperadorName nexp genera_quad_or
    (93) nexp -> . compexp
    (94) nexp -> . compexp AND addOperadorName compexp genera_quad_and
    (95) compexp -> . sumexp
    (96) compexp -> . compexp1 sumexp
    (103) sumexp -> . mulexp
    (104) sumexp -> . mulexp PLUS addOperadorName mulexp genera_sum_quad
    (105) sumexp -> . mulexp MINUS addOperadorName mulexp genera_sum_quad
    (97) compexp1 -> . sumexp GT addOperadorName sumexp compare_quad
    (98) compexp1 -> . sumexp LT addOperadorName sumexp compare_quad
    (99) compexp1 -> . sumexp GTE addOperadorName sumexp compare_quad
    (100) compexp1 -> . sumexp LTE addOperadorName sumexp compare_quad
    (101) compexp1 -> . sumexp NE addOperadorName sumexp compare_quad
    (102) compexp1 -> . sumexp COMPARE addOperadorName sumexp compare_quad
    (112) mulexp -> . pexp
    (113) mulexp -> . pexp MUL addOperadorName pexp genera_mul_quad
    (114) mulexp -> . pexp DIV addOperadorName pexp genera_mul_quad
    (115) pexp -> . var1 saveId
    (116) pexp -> . CTEI saveCTE
    (117) pexp -> . CTEF saveCTE
    (118) pexp -> . CTEC saveCTE
    (119) pexp -> . CTESTRING saveCTE
    (120) pexp -> . llamada
    (121) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (70) llamada -> . ID LPAREN exp RPAREN
    (122) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 75
    CTEC            shift and go to state 76
    CTESTRING       shift and go to state 77
    LPAREN          shift and go to state 79
    ID              shift and go to state 80
    MUL             reduce using rule 122 (empty -> .)
    DIV             reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    GT              reduce using rule 122 (empty -> .)
    LT              reduce using rule 122 (empty -> .)
    GTE             reduce using rule 122 (empty -> .)
    LTE             reduce using rule 122 (empty -> .)
    NE              reduce using rule 122 (empty -> .)
    COMPARE         reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    SEMICOLON       reduce using rule 122 (empty -> .)

    exp                            shift and go to state 259
    nexp                           shift and go to state 68
    compexp                        shift and go to state 69
    sumexp                         shift and go to state 70
    compexp1                       shift and go to state 71
    mulexp                         shift and go to state 72
    pexp                           shift and go to state 73
    var1                           shift and go to state 74
    llamada                        shift and go to state 78
    empty                          shift and go to state 41

state 254

    (54) asignacion -> ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion .

    SEMICOLON       reduce using rule 54 (asignacion -> ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion .)
    TO              reduce using rule 54 (asignacion -> ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion .)


state 255

    (55) asignacion -> ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion .

    SEMICOLON       reduce using rule 55 (asignacion -> ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion .)
    TO              reduce using rule 55 (asignacion -> ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion .)


state 256

    (75) for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .

    ID              reduce using rule 75 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    READ            reduce using rule 75 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    PRINT           reduce using rule 75 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    FOR             reduce using rule 75 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    IF              reduce using rule 75 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    WHILE           reduce using rule 75 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    RCURLY          reduce using rule 75 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    RETURN          reduce using rule 75 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)


state 257

    (71) if -> IF LPAREN exp RPAREN if_quad LCURLY statement . RCURLY
    (72) if -> IF LPAREN exp RPAREN if_quad LCURLY statement . RCURLY else

    RCURLY          shift and go to state 260


state 258

    (77) while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .

    ID              reduce using rule 77 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    READ            reduce using rule 77 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    PRINT           reduce using rule 77 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    FOR             reduce using rule 77 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    IF              reduce using rule 77 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    WHILE           reduce using rule 77 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    RCURLY          reduce using rule 77 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    RETURN          reduce using rule 77 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)


state 259

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp . SEMICOLON RCURLY

    SEMICOLON       shift and go to state 261


state 260

    (71) if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .
    (72) if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY . else
    (73) else -> . ELSE else_quad LCURLY statement RCURLY
    (74) else -> . empty
    (122) empty -> .

  ! reduce/reduce conflict for ID resolved using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
  ! reduce/reduce conflict for READ resolved using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
  ! reduce/reduce conflict for PRINT resolved using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
  ! reduce/reduce conflict for FOR resolved using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
  ! reduce/reduce conflict for IF resolved using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
  ! reduce/reduce conflict for WHILE resolved using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
  ! reduce/reduce conflict for RCURLY resolved using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
  ! reduce/reduce conflict for RETURN resolved using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
    ID              reduce using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
    READ            reduce using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
    PRINT           reduce using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
    FOR             reduce using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
    IF              reduce using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
    WHILE           reduce using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
    RCURLY          reduce using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
    RETURN          reduce using rule 71 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY .)
    ELSE            shift and go to state 263

  ! ID              [ reduce using rule 122 (empty -> .) ]
  ! READ            [ reduce using rule 122 (empty -> .) ]
  ! PRINT           [ reduce using rule 122 (empty -> .) ]
  ! FOR             [ reduce using rule 122 (empty -> .) ]
  ! IF              [ reduce using rule 122 (empty -> .) ]
  ! WHILE           [ reduce using rule 122 (empty -> .) ]
  ! RCURLY          [ reduce using rule 122 (empty -> .) ]
  ! RETURN          [ reduce using rule 122 (empty -> .) ]

    else                           shift and go to state 262
    empty                          shift and go to state 264

state 261

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON . RCURLY

    RCURLY          shift and go to state 265


state 262

    (72) if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else .

    ID              reduce using rule 72 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else .)
    READ            reduce using rule 72 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else .)
    PRINT           reduce using rule 72 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else .)
    FOR             reduce using rule 72 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else .)
    IF              reduce using rule 72 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else .)
    WHILE           reduce using rule 72 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else .)
    RCURLY          reduce using rule 72 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else .)
    RETURN          reduce using rule 72 (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else .)


state 263

    (73) else -> ELSE . else_quad LCURLY statement RCURLY
    (92) else_quad -> .

    LCURLY          reduce using rule 92 (else_quad -> .)

    else_quad                      shift and go to state 266

state 264

    (74) else -> empty .

    ID              reduce using rule 74 (else -> empty .)
    READ            reduce using rule 74 (else -> empty .)
    PRINT           reduce using rule 74 (else -> empty .)
    FOR             reduce using rule 74 (else -> empty .)
    IF              reduce using rule 74 (else -> empty .)
    WHILE           reduce using rule 74 (else -> empty .)
    RCURLY          reduce using rule 74 (else -> empty .)
    RETURN          reduce using rule 74 (else -> empty .)


state 265

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY .

    FUN             reduce using rule 43 (function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY .)
    MAIN            reduce using rule 43 (function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY .)
    $end            reduce using rule 43 (function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY .)


state 266

    (73) else -> ELSE else_quad . LCURLY statement RCURLY

    LCURLY          shift and go to state 267


state 267

    (73) else -> ELSE else_quad LCURLY . statement RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (122) empty -> .
    (53) asignacion -> . ID saveId2 EQUALS addOperadorName exp genera_quad_asignacion
    (54) asignacion -> . ID saveId2 arr EQUALS addOperadorName exp genera_quad_asignacion
    (55) asignacion -> . ID saveId2 mat EQUALS addOperadorName exp genera_quad_asignacion
    (70) llamada -> . ID LPAREN exp RPAREN
    (85) lectura -> . READ operatorRead LPAREN var1 operatorReadQuad RPAREN
    (78) escritura -> . PRINT LPAREN operadorPrint escritura1 operatorPrintQuad RPAREN
    (75) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (71) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY
    (72) if -> . IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY else
    (77) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 122 (empty -> .)
    ID              shift and go to state 122
    READ            shift and go to state 123
    PRINT           shift and go to state 124
    FOR             shift and go to state 125
    IF              shift and go to state 126
    WHILE           shift and go to state 127

    statement                      shift and go to state 268
    statement1                     shift and go to state 113
    empty                          shift and go to state 114
    asignacion                     shift and go to state 115
    llamada                        shift and go to state 116
    lectura                        shift and go to state 117
    escritura                      shift and go to state 118
    for                            shift and go to state 119
    if                             shift and go to state 120
    while                          shift and go to state 121

state 268

    (73) else -> ELSE else_quad LCURLY statement . RCURLY

    RCURLY          shift and go to state 269


state 269

    (73) else -> ELSE else_quad LCURLY statement RCURLY .

    ID              reduce using rule 73 (else -> ELSE else_quad LCURLY statement RCURLY .)
    READ            reduce using rule 73 (else -> ELSE else_quad LCURLY statement RCURLY .)
    PRINT           reduce using rule 73 (else -> ELSE else_quad LCURLY statement RCURLY .)
    FOR             reduce using rule 73 (else -> ELSE else_quad LCURLY statement RCURLY .)
    IF              reduce using rule 73 (else -> ELSE else_quad LCURLY statement RCURLY .)
    WHILE           reduce using rule 73 (else -> ELSE else_quad LCURLY statement RCURLY .)
    RCURLY          reduce using rule 73 (else -> ELSE else_quad LCURLY statement RCURLY .)
    RETURN          reduce using rule 73 (else -> ELSE else_quad LCURLY statement RCURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAIN in state 5 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 40 resolved as shift
WARNING: shift/reduce conflict for ID in state 50 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 51 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 52 resolved as shift
WARNING: shift/reduce conflict for ID in state 60 resolved as shift
WARNING: shift/reduce conflict for ID in state 61 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MUL in state 73 resolved as shift
WARNING: shift/reduce conflict for DIV in state 73 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 80 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 80 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 136 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 136 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 136 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 136 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 136 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 137 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 137 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 137 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 137 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 137 resolved as shift
WARNING: shift/reduce conflict for ID in state 137 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 138 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 138 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 138 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 138 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 138 resolved as shift
WARNING: shift/reduce conflict for ID in state 138 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 139 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 139 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 139 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 139 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 139 resolved as shift
WARNING: shift/reduce conflict for ID in state 139 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 140 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 140 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 140 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 140 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 140 resolved as shift
WARNING: shift/reduce conflict for ID in state 140 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 141 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 141 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 141 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 141 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 141 resolved as shift
WARNING: shift/reduce conflict for ID in state 141 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 142 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 142 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 142 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 142 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 142 resolved as shift
WARNING: shift/reduce conflict for ID in state 142 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 143 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 143 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 143 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 143 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 143 resolved as shift
WARNING: shift/reduce conflict for ID in state 143 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 144 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 144 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 144 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 144 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 144 resolved as shift
WARNING: shift/reduce conflict for ID in state 144 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 145 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 145 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 145 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 145 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 145 resolved as shift
WARNING: shift/reduce conflict for ID in state 145 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 162 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 165 resolved as shift
WARNING: reduce/reduce conflict in state 57 resolved using rule (param -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 57
WARNING: reduce/reduce conflict in state 231 resolved using rule (operatorPrintQuad -> <empty>)
WARNING: rejected rule (pexp -> CTEI saveCTE) in state 231
WARNING: reduce/reduce conflict in state 232 resolved using rule (operatorPrintQuad -> <empty>)
WARNING: rejected rule (pexp -> CTEF saveCTE) in state 232
WARNING: reduce/reduce conflict in state 260 resolved using rule (if -> IF LPAREN exp RPAREN if_quad LCURLY statement RCURLY)
WARNING: rejected rule (empty -> <empty>) in state 260
