Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON addP programa1
Rule 2     addP -> <empty>
Rule 3     programa1 -> vars modules programa2
Rule 4     programa1 -> vars modules
Rule 5     programa1 -> programa2
Rule 6     programa2 -> main
Rule 7     main -> MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END
Rule 8     tipo -> INT guardaTipoVar
Rule 9     tipo -> FLOAT guardaTipoVar
Rule 10    tipo -> CHAR guardaTipoVar
Rule 11    guardaTipoVar -> <empty>
Rule 12    vars -> var
Rule 13    vars -> empty
Rule 14    var -> VAR var2
Rule 15    var1 -> ID
Rule 16    var1 -> ID COMMA var1 addV
Rule 17    var1 -> ID arr
Rule 18    var1 -> ID arr COMMA var1 addV
Rule 19    var1 -> ID mat COMMA var1 addV
Rule 20    var1 -> ID mat
Rule 21    var1 -> ID mat especial
Rule 22    var1 -> empty
Rule 23    addV -> <empty>
Rule 24    var2 -> var2 tipo var1 SEMICOLON addV
Rule 25    var2 -> empty
Rule 26    especial -> TRANSPUESTA
Rule 27    especial -> INVERSA
Rule 28    especial -> DETERMINANTE
Rule 29    arr -> LBRACKET CTEI RBRACKET
Rule 30    arr -> LBRACKET exp RBRACKET
Rule 31    mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 32    mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 33    mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
Rule 34    mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET
Rule 35    modules -> function modules
Rule 36    modules -> empty
Rule 37    save_fun -> <empty>
Rule 38    function -> FUN VOID function1
Rule 39    function -> FUN INT function2
Rule 40    function -> FUN CHAR function2
Rule 41    function -> FUN FLOAT function2
Rule 42    function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY
Rule 43    function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY
Rule 44    statement -> statement1 statement
Rule 45    statement -> empty
Rule 46    statement1 -> asignacion SEMICOLON
Rule 47    statement1 -> llamada SEMICOLON
Rule 48    statement1 -> lectura SEMICOLON
Rule 49    statement1 -> escritura SEMICOLON
Rule 50    statement1 -> for
Rule 51    statement1 -> if
Rule 52    statement1 -> while
Rule 53    asignacion -> ID EQUALS exp
Rule 54    asignacion -> ID arr EQUALS exp
Rule 55    asignacion -> ID mat EQUALS exp
Rule 56    genera_quad_asignacion -> <empty>
Rule 57    param -> tipo param1
Rule 58    param -> empty
Rule 59    param1 -> ID
Rule 60    param1 -> ID COMMA param1
Rule 61    param1 -> empty
Rule 62    llamada -> ID LPAREN exp RPAREN
Rule 63    if -> IF LPAREN exp RPAREN LCURLY statement RCURLY
Rule 64    if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else
Rule 65    else -> ELSE LCURLY statement RCURLY
Rule 66    else -> empty
Rule 67    for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY
Rule 68    for1 -> FROM asignacion TO exp
Rule 69    while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY
Rule 70    escritura -> PRINT LPAREN escritura1 RPAREN
Rule 71    escritura1 -> escritura2 COMMA escritura2
Rule 72    escritura1 -> escritura2
Rule 73    escritura2 -> COMILLA CTESTRING COMILLA
Rule 74    escritura2 -> CTEI saveCTE
Rule 75    escritura2 -> CTEF saveCTE
Rule 76    escritura2 -> exp
Rule 77    lectura -> READ LPAREN var1 RPAREN
Rule 78    exp -> nexp
Rule 79    exp -> nexp OR saveOperator nexp
Rule 80    genera_quad_or -> <empty>
Rule 81    genera_quad_and -> <empty>
Rule 82    nexp -> compexp
Rule 83    nexp -> compexp AND saveOperator compexp
Rule 84    compexp -> sumexp
Rule 85    compexp -> compexp1 sumexp
Rule 86    compexp1 -> sumexp GT saveOperator sumexp
Rule 87    compexp1 -> sumexp LT saveOperator sumexp
Rule 88    compexp1 -> sumexp GTE saveOperator sumexp
Rule 89    compexp1 -> sumexp LTE saveOperator sumexp
Rule 90    compexp1 -> sumexp NE saveOperator sumexp
Rule 91    compexp1 -> sumexp COMPARE saveOperator sumexp
Rule 92    sumexp -> mulexp
Rule 93    sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp
Rule 94    sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp
Rule 95    genera_sum_quad -> <empty>
Rule 96    genera_mul_quad -> <empty>
Rule 97    mulexp -> pexp
Rule 98    mulexp -> pexp MUL saveOperator pexp
Rule 99    mulexp -> pexp DIV saveOperator pexp
Rule 100   pexp -> var1 saveId
Rule 101   pexp -> CTEI saveCTE
Rule 102   pexp -> CTEF saveCTE
Rule 103   pexp -> CTEC saveCTE
Rule 104   pexp -> CTESTRING saveCTE
Rule 105   pexp -> llamada
Rule 106   pexp -> LPAREN exp RPAREN
Rule 107   empty -> <empty>
Rule 108   saveId -> <empty>
Rule 109   saveCTE -> <empty>
Rule 110   saveOperator -> <empty>

Terminals, with rules where they appear

AND                  : 83
CHAR                 : 10 40
COMILLA              : 73 73
COMMA                : 16 18 19 60 71
COMPARE              : 91
CTEC                 : 103
CTEF                 : 75 102
CTEI                 : 29 31 31 33 34 74 101
CTESTRING            : 73 104
DETERMINANTE         : 28
DIV                  : 99
ELSE                 : 65
END                  : 7
EQUALS               : 53 54 55
FLOAT                : 9 41
FOR                  : 67
FROM                 : 68
FUN                  : 38 39 40 41
GT                   : 86
GTE                  : 88
ID                   : 1 15 16 17 18 19 20 21 42 43 53 54 55 59 60 62
IF                   : 63 64
INT                  : 8 39
INVERSA              : 27
LBRACKET             : 29 30 31 31 32 32 33 33 34 34
LCURLY               : 7 42 43 63 64 65 67 69
LPAREN               : 7 42 43 62 63 64 67 69 70 77 106
LT                   : 87
LTE                  : 89
MAIN                 : 7
MINUS                : 94
MUL                  : 98
NE                   : 90
OR                   : 79
PLUS                 : 93
PRINT                : 70
PROGRAM              : 1
RBRACKET             : 29 30 31 31 32 32 33 33 34 34
RCURLY               : 7 42 43 63 64 65 67 69
READ                 : 77
RETURN               : 43
RPAREN               : 7 42 43 62 63 64 67 69 70 77 106
SEMICOLON            : 1 24 42 43 43 46 47 48 49
TO                   : 68
TRANSPUESTA          : 26
VAR                  : 14
VOID                 : 38
WHILE                : 69
error                : 

Nonterminals, with rules where they appear

addP                 : 1
addV                 : 16 18 19 24
arr                  : 17 18 54
asignacion           : 46 68
compexp              : 82 83 83
compexp1             : 85
else                 : 64
empty                : 13 22 25 36 45 58 61 66
escritura            : 49
escritura1           : 70
escritura2           : 71 71 72
especial             : 21
exp                  : 30 32 32 33 34 43 53 54 55 62 63 64 68 69 76 106
for                  : 50
for1                 : 67
function             : 35
function1            : 38
function2            : 39 40 41
genera_mul_quad      : 
genera_quad_and      : 
genera_quad_asignacion : 
genera_quad_or       : 
genera_sum_quad      : 93 94
guardaTipoVar        : 8 9 10
if                   : 51
lectura              : 48
llamada              : 47 105
main                 : 6
mat                  : 19 20 21 55
modules              : 3 4 35
mulexp               : 92 93 93 94 94
nexp                 : 78 79 79
param                : 7 42 43
param1               : 57 60
pexp                 : 97 98 98 99 99
programa             : 0
programa1            : 1
programa2            : 3 5
saveCTE              : 74 75 101 102 103 104
saveId               : 100
saveOperator         : 79 83 86 87 88 89 90 91 93 94 98 99
save_fun             : 42 43
statement            : 7 42 43 44 63 64 65 67 69
statement1           : 44
sumexp               : 84 85 86 86 87 87 88 88 89 89 90 90 91 91
tipo                 : 24 57
var                  : 12
var1                 : 16 18 19 24 77 100
var2                 : 14 24
vars                 : 3 4 7 42 43
while                : 52

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON addP programa1

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON addP programa1

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON addP programa1

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . addP programa1
    (2) addP -> .

    VAR             reduce using rule 2 (addP -> .)
    MAIN            reduce using rule 2 (addP -> .)
    FUN             reduce using rule 2 (addP -> .)
    $end            reduce using rule 2 (addP -> .)

    addP                           shift and go to state 5

state 5

    (1) programa -> PROGRAM ID SEMICOLON addP . programa1
    (3) programa1 -> . vars modules programa2
    (4) programa1 -> . vars modules
    (5) programa1 -> . programa2
    (12) vars -> . var
    (13) vars -> . empty
    (6) programa2 -> . main
    (14) var -> . VAR var2
    (107) empty -> .
    (7) main -> . MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END

  ! shift/reduce conflict for MAIN resolved as shift
    VAR             shift and go to state 12
    FUN             reduce using rule 107 (empty -> .)
    $end            reduce using rule 107 (empty -> .)
    MAIN            shift and go to state 13

  ! MAIN            [ reduce using rule 107 (empty -> .) ]

    programa1                      shift and go to state 6
    vars                           shift and go to state 7
    programa2                      shift and go to state 8
    var                            shift and go to state 9
    empty                          shift and go to state 10
    main                           shift and go to state 11

state 6

    (1) programa -> PROGRAM ID SEMICOLON addP programa1 .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON addP programa1 .)


state 7

    (3) programa1 -> vars . modules programa2
    (4) programa1 -> vars . modules
    (35) modules -> . function modules
    (36) modules -> . empty
    (38) function -> . FUN VOID function1
    (39) function -> . FUN INT function2
    (40) function -> . FUN CHAR function2
    (41) function -> . FUN FLOAT function2
    (107) empty -> .

    FUN             shift and go to state 17
    MAIN            reduce using rule 107 (empty -> .)
    $end            reduce using rule 107 (empty -> .)

    modules                        shift and go to state 14
    function                       shift and go to state 15
    empty                          shift and go to state 16

state 8

    (5) programa1 -> programa2 .

    $end            reduce using rule 5 (programa1 -> programa2 .)


state 9

    (12) vars -> var .

    FUN             reduce using rule 12 (vars -> var .)
    MAIN            reduce using rule 12 (vars -> var .)
    $end            reduce using rule 12 (vars -> var .)
    ID              reduce using rule 12 (vars -> var .)
    READ            reduce using rule 12 (vars -> var .)
    PRINT           reduce using rule 12 (vars -> var .)
    FOR             reduce using rule 12 (vars -> var .)
    IF              reduce using rule 12 (vars -> var .)
    WHILE           reduce using rule 12 (vars -> var .)
    RCURLY          reduce using rule 12 (vars -> var .)
    RETURN          reduce using rule 12 (vars -> var .)


state 10

    (13) vars -> empty .

    FUN             reduce using rule 13 (vars -> empty .)
    MAIN            reduce using rule 13 (vars -> empty .)
    $end            reduce using rule 13 (vars -> empty .)
    ID              reduce using rule 13 (vars -> empty .)
    READ            reduce using rule 13 (vars -> empty .)
    PRINT           reduce using rule 13 (vars -> empty .)
    FOR             reduce using rule 13 (vars -> empty .)
    IF              reduce using rule 13 (vars -> empty .)
    WHILE           reduce using rule 13 (vars -> empty .)
    RCURLY          reduce using rule 13 (vars -> empty .)
    RETURN          reduce using rule 13 (vars -> empty .)


state 11

    (6) programa2 -> main .

    $end            reduce using rule 6 (programa2 -> main .)


state 12

    (14) var -> VAR . var2
    (24) var2 -> . var2 tipo var1 SEMICOLON addV
    (25) var2 -> . empty
    (107) empty -> .

    INT             reduce using rule 107 (empty -> .)
    FLOAT           reduce using rule 107 (empty -> .)
    CHAR            reduce using rule 107 (empty -> .)
    FUN             reduce using rule 107 (empty -> .)
    MAIN            reduce using rule 107 (empty -> .)
    $end            reduce using rule 107 (empty -> .)
    ID              reduce using rule 107 (empty -> .)
    READ            reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    FOR             reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    RCURLY          reduce using rule 107 (empty -> .)
    RETURN          reduce using rule 107 (empty -> .)

    var2                           shift and go to state 18
    empty                          shift and go to state 19

state 13

    (7) main -> MAIN . LPAREN param RPAREN LCURLY vars statement RCURLY END

    LPAREN          shift and go to state 20


state 14

    (3) programa1 -> vars modules . programa2
    (4) programa1 -> vars modules .
    (6) programa2 -> . main
    (7) main -> . MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END

    $end            reduce using rule 4 (programa1 -> vars modules .)
    MAIN            shift and go to state 13

    programa2                      shift and go to state 21
    main                           shift and go to state 11

state 15

    (35) modules -> function . modules
    (35) modules -> . function modules
    (36) modules -> . empty
    (38) function -> . FUN VOID function1
    (39) function -> . FUN INT function2
    (40) function -> . FUN CHAR function2
    (41) function -> . FUN FLOAT function2
    (107) empty -> .

    FUN             shift and go to state 17
    MAIN            reduce using rule 107 (empty -> .)
    $end            reduce using rule 107 (empty -> .)

    function                       shift and go to state 15
    modules                        shift and go to state 22
    empty                          shift and go to state 16

state 16

    (36) modules -> empty .

    MAIN            reduce using rule 36 (modules -> empty .)
    $end            reduce using rule 36 (modules -> empty .)


state 17

    (38) function -> FUN . VOID function1
    (39) function -> FUN . INT function2
    (40) function -> FUN . CHAR function2
    (41) function -> FUN . FLOAT function2

    VOID            shift and go to state 23
    INT             shift and go to state 24
    CHAR            shift and go to state 25
    FLOAT           shift and go to state 26


state 18

    (14) var -> VAR var2 .
    (24) var2 -> var2 . tipo var1 SEMICOLON addV
    (8) tipo -> . INT guardaTipoVar
    (9) tipo -> . FLOAT guardaTipoVar
    (10) tipo -> . CHAR guardaTipoVar

    FUN             reduce using rule 14 (var -> VAR var2 .)
    MAIN            reduce using rule 14 (var -> VAR var2 .)
    $end            reduce using rule 14 (var -> VAR var2 .)
    ID              reduce using rule 14 (var -> VAR var2 .)
    READ            reduce using rule 14 (var -> VAR var2 .)
    PRINT           reduce using rule 14 (var -> VAR var2 .)
    FOR             reduce using rule 14 (var -> VAR var2 .)
    IF              reduce using rule 14 (var -> VAR var2 .)
    WHILE           reduce using rule 14 (var -> VAR var2 .)
    RCURLY          reduce using rule 14 (var -> VAR var2 .)
    RETURN          reduce using rule 14 (var -> VAR var2 .)
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    tipo                           shift and go to state 27

state 19

    (25) var2 -> empty .

    INT             reduce using rule 25 (var2 -> empty .)
    FLOAT           reduce using rule 25 (var2 -> empty .)
    CHAR            reduce using rule 25 (var2 -> empty .)
    FUN             reduce using rule 25 (var2 -> empty .)
    MAIN            reduce using rule 25 (var2 -> empty .)
    $end            reduce using rule 25 (var2 -> empty .)
    ID              reduce using rule 25 (var2 -> empty .)
    READ            reduce using rule 25 (var2 -> empty .)
    PRINT           reduce using rule 25 (var2 -> empty .)
    FOR             reduce using rule 25 (var2 -> empty .)
    IF              reduce using rule 25 (var2 -> empty .)
    WHILE           reduce using rule 25 (var2 -> empty .)
    RCURLY          reduce using rule 25 (var2 -> empty .)
    RETURN          reduce using rule 25 (var2 -> empty .)


state 20

    (7) main -> MAIN LPAREN . param RPAREN LCURLY vars statement RCURLY END
    (57) param -> . tipo param1
    (58) param -> . empty
    (8) tipo -> . INT guardaTipoVar
    (9) tipo -> . FLOAT guardaTipoVar
    (10) tipo -> . CHAR guardaTipoVar
    (107) empty -> .

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    RPAREN          reduce using rule 107 (empty -> .)

    param                          shift and go to state 31
    tipo                           shift and go to state 32
    empty                          shift and go to state 33

state 21

    (3) programa1 -> vars modules programa2 .

    $end            reduce using rule 3 (programa1 -> vars modules programa2 .)


state 22

    (35) modules -> function modules .

    MAIN            reduce using rule 35 (modules -> function modules .)
    $end            reduce using rule 35 (modules -> function modules .)


state 23

    (38) function -> FUN VOID . function1
    (42) function1 -> . ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY

    ID              shift and go to state 35

    function1                      shift and go to state 34

state 24

    (39) function -> FUN INT . function2
    (43) function2 -> . ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    ID              shift and go to state 37

    function2                      shift and go to state 36

state 25

    (40) function -> FUN CHAR . function2
    (43) function2 -> . ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    ID              shift and go to state 37

    function2                      shift and go to state 38

state 26

    (41) function -> FUN FLOAT . function2
    (43) function2 -> . ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    ID              shift and go to state 37

    function2                      shift and go to state 39

state 27

    (24) var2 -> var2 tipo . var1 SEMICOLON addV
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (107) empty -> .

    ID              shift and go to state 41
    SEMICOLON       reduce using rule 107 (empty -> .)

    var1                           shift and go to state 40
    empty                          shift and go to state 42

state 28

    (8) tipo -> INT . guardaTipoVar
    (11) guardaTipoVar -> .

    ID              reduce using rule 11 (guardaTipoVar -> .)
    SEMICOLON       reduce using rule 11 (guardaTipoVar -> .)
    RPAREN          reduce using rule 11 (guardaTipoVar -> .)

    guardaTipoVar                  shift and go to state 43

state 29

    (9) tipo -> FLOAT . guardaTipoVar
    (11) guardaTipoVar -> .

    ID              reduce using rule 11 (guardaTipoVar -> .)
    SEMICOLON       reduce using rule 11 (guardaTipoVar -> .)
    RPAREN          reduce using rule 11 (guardaTipoVar -> .)

    guardaTipoVar                  shift and go to state 44

state 30

    (10) tipo -> CHAR . guardaTipoVar
    (11) guardaTipoVar -> .

    ID              reduce using rule 11 (guardaTipoVar -> .)
    SEMICOLON       reduce using rule 11 (guardaTipoVar -> .)
    RPAREN          reduce using rule 11 (guardaTipoVar -> .)

    guardaTipoVar                  shift and go to state 45

state 31

    (7) main -> MAIN LPAREN param . RPAREN LCURLY vars statement RCURLY END

    RPAREN          shift and go to state 46


state 32

    (57) param -> tipo . param1
    (59) param1 -> . ID
    (60) param1 -> . ID COMMA param1
    (61) param1 -> . empty
    (107) empty -> .

    ID              shift and go to state 48
    RPAREN          reduce using rule 107 (empty -> .)

    param1                         shift and go to state 47
    empty                          shift and go to state 49

state 33

    (58) param -> empty .

    RPAREN          reduce using rule 58 (param -> empty .)


state 34

    (38) function -> FUN VOID function1 .

    FUN             reduce using rule 38 (function -> FUN VOID function1 .)
    MAIN            reduce using rule 38 (function -> FUN VOID function1 .)
    $end            reduce using rule 38 (function -> FUN VOID function1 .)


state 35

    (42) function1 -> ID . save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY
    (37) save_fun -> .

    LPAREN          reduce using rule 37 (save_fun -> .)

    save_fun                       shift and go to state 50

state 36

    (39) function -> FUN INT function2 .

    FUN             reduce using rule 39 (function -> FUN INT function2 .)
    MAIN            reduce using rule 39 (function -> FUN INT function2 .)
    $end            reduce using rule 39 (function -> FUN INT function2 .)


state 37

    (43) function2 -> ID . save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY
    (37) save_fun -> .

    LPAREN          reduce using rule 37 (save_fun -> .)

    save_fun                       shift and go to state 51

state 38

    (40) function -> FUN CHAR function2 .

    FUN             reduce using rule 40 (function -> FUN CHAR function2 .)
    MAIN            reduce using rule 40 (function -> FUN CHAR function2 .)
    $end            reduce using rule 40 (function -> FUN CHAR function2 .)


state 39

    (41) function -> FUN FLOAT function2 .

    FUN             reduce using rule 41 (function -> FUN FLOAT function2 .)
    MAIN            reduce using rule 41 (function -> FUN FLOAT function2 .)
    $end            reduce using rule 41 (function -> FUN FLOAT function2 .)


state 40

    (24) var2 -> var2 tipo var1 . SEMICOLON addV

    SEMICOLON       shift and go to state 52


state 41

    (15) var1 -> ID .
    (16) var1 -> ID . COMMA var1 addV
    (17) var1 -> ID . arr
    (18) var1 -> ID . arr COMMA var1 addV
    (19) var1 -> ID . mat COMMA var1 addV
    (20) var1 -> ID . mat
    (21) var1 -> ID . mat especial
    (29) arr -> . LBRACKET CTEI RBRACKET
    (30) arr -> . LBRACKET exp RBRACKET
    (31) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 15 (var1 -> ID .)
    MUL             reduce using rule 15 (var1 -> ID .)
    DIV             reduce using rule 15 (var1 -> ID .)
    PLUS            reduce using rule 15 (var1 -> ID .)
    MINUS           reduce using rule 15 (var1 -> ID .)
    GT              reduce using rule 15 (var1 -> ID .)
    LT              reduce using rule 15 (var1 -> ID .)
    GTE             reduce using rule 15 (var1 -> ID .)
    LTE             reduce using rule 15 (var1 -> ID .)
    NE              reduce using rule 15 (var1 -> ID .)
    COMPARE         reduce using rule 15 (var1 -> ID .)
    AND             reduce using rule 15 (var1 -> ID .)
    OR              reduce using rule 15 (var1 -> ID .)
    RBRACKET        reduce using rule 15 (var1 -> ID .)
    RPAREN          reduce using rule 15 (var1 -> ID .)
    TO              reduce using rule 15 (var1 -> ID .)
    CTEI            reduce using rule 15 (var1 -> ID .)
    CTEF            reduce using rule 15 (var1 -> ID .)
    CTEC            reduce using rule 15 (var1 -> ID .)
    CTESTRING       reduce using rule 15 (var1 -> ID .)
    LPAREN          reduce using rule 15 (var1 -> ID .)
    ID              reduce using rule 15 (var1 -> ID .)
    COMMA           shift and go to state 53
    LBRACKET        shift and go to state 56

  ! COMMA           [ reduce using rule 15 (var1 -> ID .) ]

    arr                            shift and go to state 54
    mat                            shift and go to state 55

state 42

    (22) var1 -> empty .

    SEMICOLON       reduce using rule 22 (var1 -> empty .)
    MUL             reduce using rule 22 (var1 -> empty .)
    DIV             reduce using rule 22 (var1 -> empty .)
    PLUS            reduce using rule 22 (var1 -> empty .)
    MINUS           reduce using rule 22 (var1 -> empty .)
    GT              reduce using rule 22 (var1 -> empty .)
    LT              reduce using rule 22 (var1 -> empty .)
    GTE             reduce using rule 22 (var1 -> empty .)
    LTE             reduce using rule 22 (var1 -> empty .)
    NE              reduce using rule 22 (var1 -> empty .)
    COMPARE         reduce using rule 22 (var1 -> empty .)
    AND             reduce using rule 22 (var1 -> empty .)
    OR              reduce using rule 22 (var1 -> empty .)
    RBRACKET        reduce using rule 22 (var1 -> empty .)
    RPAREN          reduce using rule 22 (var1 -> empty .)
    TO              reduce using rule 22 (var1 -> empty .)
    COMMA           reduce using rule 22 (var1 -> empty .)
    CTEI            reduce using rule 22 (var1 -> empty .)
    CTEF            reduce using rule 22 (var1 -> empty .)
    CTEC            reduce using rule 22 (var1 -> empty .)
    CTESTRING       reduce using rule 22 (var1 -> empty .)
    LPAREN          reduce using rule 22 (var1 -> empty .)
    ID              reduce using rule 22 (var1 -> empty .)


state 43

    (8) tipo -> INT guardaTipoVar .

    ID              reduce using rule 8 (tipo -> INT guardaTipoVar .)
    SEMICOLON       reduce using rule 8 (tipo -> INT guardaTipoVar .)
    RPAREN          reduce using rule 8 (tipo -> INT guardaTipoVar .)


state 44

    (9) tipo -> FLOAT guardaTipoVar .

    ID              reduce using rule 9 (tipo -> FLOAT guardaTipoVar .)
    SEMICOLON       reduce using rule 9 (tipo -> FLOAT guardaTipoVar .)
    RPAREN          reduce using rule 9 (tipo -> FLOAT guardaTipoVar .)


state 45

    (10) tipo -> CHAR guardaTipoVar .

    ID              reduce using rule 10 (tipo -> CHAR guardaTipoVar .)
    SEMICOLON       reduce using rule 10 (tipo -> CHAR guardaTipoVar .)
    RPAREN          reduce using rule 10 (tipo -> CHAR guardaTipoVar .)


state 46

    (7) main -> MAIN LPAREN param RPAREN . LCURLY vars statement RCURLY END

    LCURLY          shift and go to state 57


state 47

    (57) param -> tipo param1 .

    RPAREN          reduce using rule 57 (param -> tipo param1 .)


state 48

    (59) param1 -> ID .
    (60) param1 -> ID . COMMA param1

    RPAREN          reduce using rule 59 (param1 -> ID .)
    COMMA           shift and go to state 58


state 49

    (61) param1 -> empty .

    RPAREN          reduce using rule 61 (param1 -> empty .)


state 50

    (42) function1 -> ID save_fun . LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY

    LPAREN          shift and go to state 59


state 51

    (43) function2 -> ID save_fun . LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    LPAREN          shift and go to state 60


state 52

    (24) var2 -> var2 tipo var1 SEMICOLON . addV
    (23) addV -> .

    INT             reduce using rule 23 (addV -> .)
    FLOAT           reduce using rule 23 (addV -> .)
    CHAR            reduce using rule 23 (addV -> .)
    FUN             reduce using rule 23 (addV -> .)
    MAIN            reduce using rule 23 (addV -> .)
    $end            reduce using rule 23 (addV -> .)
    ID              reduce using rule 23 (addV -> .)
    READ            reduce using rule 23 (addV -> .)
    PRINT           reduce using rule 23 (addV -> .)
    FOR             reduce using rule 23 (addV -> .)
    IF              reduce using rule 23 (addV -> .)
    WHILE           reduce using rule 23 (addV -> .)
    RCURLY          reduce using rule 23 (addV -> .)
    RETURN          reduce using rule 23 (addV -> .)

    addV                           shift and go to state 61

state 53

    (16) var1 -> ID COMMA . var1 addV
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (107) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 41
    SEMICOLON       reduce using rule 107 (empty -> .)
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    CTEI            reduce using rule 107 (empty -> .)
    CTEF            reduce using rule 107 (empty -> .)
    CTEC            reduce using rule 107 (empty -> .)
    CTESTRING       reduce using rule 107 (empty -> .)
    LPAREN          reduce using rule 107 (empty -> .)

  ! ID              [ reduce using rule 107 (empty -> .) ]

    var1                           shift and go to state 62
    empty                          shift and go to state 42

state 54

    (17) var1 -> ID arr .
    (18) var1 -> ID arr . COMMA var1 addV

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 17 (var1 -> ID arr .)
    MUL             reduce using rule 17 (var1 -> ID arr .)
    DIV             reduce using rule 17 (var1 -> ID arr .)
    PLUS            reduce using rule 17 (var1 -> ID arr .)
    MINUS           reduce using rule 17 (var1 -> ID arr .)
    GT              reduce using rule 17 (var1 -> ID arr .)
    LT              reduce using rule 17 (var1 -> ID arr .)
    GTE             reduce using rule 17 (var1 -> ID arr .)
    LTE             reduce using rule 17 (var1 -> ID arr .)
    NE              reduce using rule 17 (var1 -> ID arr .)
    COMPARE         reduce using rule 17 (var1 -> ID arr .)
    AND             reduce using rule 17 (var1 -> ID arr .)
    OR              reduce using rule 17 (var1 -> ID arr .)
    RBRACKET        reduce using rule 17 (var1 -> ID arr .)
    RPAREN          reduce using rule 17 (var1 -> ID arr .)
    TO              reduce using rule 17 (var1 -> ID arr .)
    CTEI            reduce using rule 17 (var1 -> ID arr .)
    CTEF            reduce using rule 17 (var1 -> ID arr .)
    CTEC            reduce using rule 17 (var1 -> ID arr .)
    CTESTRING       reduce using rule 17 (var1 -> ID arr .)
    LPAREN          reduce using rule 17 (var1 -> ID arr .)
    ID              reduce using rule 17 (var1 -> ID arr .)
    COMMA           shift and go to state 63

  ! COMMA           [ reduce using rule 17 (var1 -> ID arr .) ]


state 55

    (19) var1 -> ID mat . COMMA var1 addV
    (20) var1 -> ID mat .
    (21) var1 -> ID mat . especial
    (26) especial -> . TRANSPUESTA
    (27) especial -> . INVERSA
    (28) especial -> . DETERMINANTE

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 64
    SEMICOLON       reduce using rule 20 (var1 -> ID mat .)
    MUL             reduce using rule 20 (var1 -> ID mat .)
    DIV             reduce using rule 20 (var1 -> ID mat .)
    PLUS            reduce using rule 20 (var1 -> ID mat .)
    MINUS           reduce using rule 20 (var1 -> ID mat .)
    GT              reduce using rule 20 (var1 -> ID mat .)
    LT              reduce using rule 20 (var1 -> ID mat .)
    GTE             reduce using rule 20 (var1 -> ID mat .)
    LTE             reduce using rule 20 (var1 -> ID mat .)
    NE              reduce using rule 20 (var1 -> ID mat .)
    COMPARE         reduce using rule 20 (var1 -> ID mat .)
    AND             reduce using rule 20 (var1 -> ID mat .)
    OR              reduce using rule 20 (var1 -> ID mat .)
    RBRACKET        reduce using rule 20 (var1 -> ID mat .)
    RPAREN          reduce using rule 20 (var1 -> ID mat .)
    TO              reduce using rule 20 (var1 -> ID mat .)
    CTEI            reduce using rule 20 (var1 -> ID mat .)
    CTEF            reduce using rule 20 (var1 -> ID mat .)
    CTEC            reduce using rule 20 (var1 -> ID mat .)
    CTESTRING       reduce using rule 20 (var1 -> ID mat .)
    LPAREN          reduce using rule 20 (var1 -> ID mat .)
    ID              reduce using rule 20 (var1 -> ID mat .)
    TRANSPUESTA     shift and go to state 66
    INVERSA         shift and go to state 67
    DETERMINANTE    shift and go to state 68

  ! COMMA           [ reduce using rule 20 (var1 -> ID mat .) ]

    especial                       shift and go to state 65

state 56

    (29) arr -> LBRACKET . CTEI RBRACKET
    (30) arr -> LBRACKET . exp RBRACKET
    (31) mat -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> LBRACKET . exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> LBRACKET . CTEI RBRACKET LBRACKET exp RBRACKET
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 69
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)

    exp                            shift and go to state 70
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 57

    (7) main -> MAIN LPAREN param RPAREN LCURLY . vars statement RCURLY END
    (12) vars -> . var
    (13) vars -> . empty
    (14) var -> . VAR var2
    (107) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 107 (empty -> .)
    READ            reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    FOR             reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    RCURLY          reduce using rule 107 (empty -> .)

    vars                           shift and go to state 84
    var                            shift and go to state 9
    empty                          shift and go to state 10

state 58

    (60) param1 -> ID COMMA . param1
    (59) param1 -> . ID
    (60) param1 -> . ID COMMA param1
    (61) param1 -> . empty
    (107) empty -> .

    ID              shift and go to state 48
    RPAREN          reduce using rule 107 (empty -> .)

    param1                         shift and go to state 85
    empty                          shift and go to state 49

state 59

    (42) function1 -> ID save_fun LPAREN . param RPAREN SEMICOLON LCURLY vars statement RCURLY
    (57) param -> . tipo param1
    (58) param -> . empty
    (8) tipo -> . INT guardaTipoVar
    (9) tipo -> . FLOAT guardaTipoVar
    (10) tipo -> . CHAR guardaTipoVar
    (107) empty -> .

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    RPAREN          reduce using rule 107 (empty -> .)

    param                          shift and go to state 86
    tipo                           shift and go to state 32
    empty                          shift and go to state 33

state 60

    (43) function2 -> ID save_fun LPAREN . param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY
    (57) param -> . tipo param1
    (58) param -> . empty
    (8) tipo -> . INT guardaTipoVar
    (9) tipo -> . FLOAT guardaTipoVar
    (10) tipo -> . CHAR guardaTipoVar
    (107) empty -> .

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    RPAREN          reduce using rule 107 (empty -> .)

    param                          shift and go to state 87
    tipo                           shift and go to state 32
    empty                          shift and go to state 33

state 61

    (24) var2 -> var2 tipo var1 SEMICOLON addV .

    INT             reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    FLOAT           reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    CHAR            reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    FUN             reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    MAIN            reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    $end            reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    ID              reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    READ            reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    PRINT           reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    FOR             reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    IF              reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    WHILE           reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    RCURLY          reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)
    RETURN          reduce using rule 24 (var2 -> var2 tipo var1 SEMICOLON addV .)


state 62

    (16) var1 -> ID COMMA var1 . addV
    (23) addV -> .

    SEMICOLON       reduce using rule 23 (addV -> .)
    MUL             reduce using rule 23 (addV -> .)
    DIV             reduce using rule 23 (addV -> .)
    PLUS            reduce using rule 23 (addV -> .)
    MINUS           reduce using rule 23 (addV -> .)
    GT              reduce using rule 23 (addV -> .)
    LT              reduce using rule 23 (addV -> .)
    GTE             reduce using rule 23 (addV -> .)
    LTE             reduce using rule 23 (addV -> .)
    NE              reduce using rule 23 (addV -> .)
    COMPARE         reduce using rule 23 (addV -> .)
    AND             reduce using rule 23 (addV -> .)
    OR              reduce using rule 23 (addV -> .)
    RBRACKET        reduce using rule 23 (addV -> .)
    RPAREN          reduce using rule 23 (addV -> .)
    TO              reduce using rule 23 (addV -> .)
    COMMA           reduce using rule 23 (addV -> .)
    CTEI            reduce using rule 23 (addV -> .)
    CTEF            reduce using rule 23 (addV -> .)
    CTEC            reduce using rule 23 (addV -> .)
    CTESTRING       reduce using rule 23 (addV -> .)
    LPAREN          reduce using rule 23 (addV -> .)
    ID              reduce using rule 23 (addV -> .)

    addV                           shift and go to state 88

state 63

    (18) var1 -> ID arr COMMA . var1 addV
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (107) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 41
    SEMICOLON       reduce using rule 107 (empty -> .)
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    CTEI            reduce using rule 107 (empty -> .)
    CTEF            reduce using rule 107 (empty -> .)
    CTEC            reduce using rule 107 (empty -> .)
    CTESTRING       reduce using rule 107 (empty -> .)
    LPAREN          reduce using rule 107 (empty -> .)

  ! ID              [ reduce using rule 107 (empty -> .) ]

    var1                           shift and go to state 89
    empty                          shift and go to state 42

state 64

    (19) var1 -> ID mat COMMA . var1 addV
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (107) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 41
    SEMICOLON       reduce using rule 107 (empty -> .)
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    CTEI            reduce using rule 107 (empty -> .)
    CTEF            reduce using rule 107 (empty -> .)
    CTEC            reduce using rule 107 (empty -> .)
    CTESTRING       reduce using rule 107 (empty -> .)
    LPAREN          reduce using rule 107 (empty -> .)

  ! ID              [ reduce using rule 107 (empty -> .) ]

    var1                           shift and go to state 90
    empty                          shift and go to state 42

state 65

    (21) var1 -> ID mat especial .

    SEMICOLON       reduce using rule 21 (var1 -> ID mat especial .)
    MUL             reduce using rule 21 (var1 -> ID mat especial .)
    DIV             reduce using rule 21 (var1 -> ID mat especial .)
    PLUS            reduce using rule 21 (var1 -> ID mat especial .)
    MINUS           reduce using rule 21 (var1 -> ID mat especial .)
    GT              reduce using rule 21 (var1 -> ID mat especial .)
    LT              reduce using rule 21 (var1 -> ID mat especial .)
    GTE             reduce using rule 21 (var1 -> ID mat especial .)
    LTE             reduce using rule 21 (var1 -> ID mat especial .)
    NE              reduce using rule 21 (var1 -> ID mat especial .)
    COMPARE         reduce using rule 21 (var1 -> ID mat especial .)
    AND             reduce using rule 21 (var1 -> ID mat especial .)
    OR              reduce using rule 21 (var1 -> ID mat especial .)
    RBRACKET        reduce using rule 21 (var1 -> ID mat especial .)
    RPAREN          reduce using rule 21 (var1 -> ID mat especial .)
    TO              reduce using rule 21 (var1 -> ID mat especial .)
    COMMA           reduce using rule 21 (var1 -> ID mat especial .)
    CTEI            reduce using rule 21 (var1 -> ID mat especial .)
    CTEF            reduce using rule 21 (var1 -> ID mat especial .)
    CTEC            reduce using rule 21 (var1 -> ID mat especial .)
    CTESTRING       reduce using rule 21 (var1 -> ID mat especial .)
    LPAREN          reduce using rule 21 (var1 -> ID mat especial .)
    ID              reduce using rule 21 (var1 -> ID mat especial .)


state 66

    (26) especial -> TRANSPUESTA .

    SEMICOLON       reduce using rule 26 (especial -> TRANSPUESTA .)
    MUL             reduce using rule 26 (especial -> TRANSPUESTA .)
    DIV             reduce using rule 26 (especial -> TRANSPUESTA .)
    PLUS            reduce using rule 26 (especial -> TRANSPUESTA .)
    MINUS           reduce using rule 26 (especial -> TRANSPUESTA .)
    GT              reduce using rule 26 (especial -> TRANSPUESTA .)
    LT              reduce using rule 26 (especial -> TRANSPUESTA .)
    GTE             reduce using rule 26 (especial -> TRANSPUESTA .)
    LTE             reduce using rule 26 (especial -> TRANSPUESTA .)
    NE              reduce using rule 26 (especial -> TRANSPUESTA .)
    COMPARE         reduce using rule 26 (especial -> TRANSPUESTA .)
    AND             reduce using rule 26 (especial -> TRANSPUESTA .)
    OR              reduce using rule 26 (especial -> TRANSPUESTA .)
    RBRACKET        reduce using rule 26 (especial -> TRANSPUESTA .)
    RPAREN          reduce using rule 26 (especial -> TRANSPUESTA .)
    TO              reduce using rule 26 (especial -> TRANSPUESTA .)
    COMMA           reduce using rule 26 (especial -> TRANSPUESTA .)
    CTEI            reduce using rule 26 (especial -> TRANSPUESTA .)
    CTEF            reduce using rule 26 (especial -> TRANSPUESTA .)
    CTEC            reduce using rule 26 (especial -> TRANSPUESTA .)
    CTESTRING       reduce using rule 26 (especial -> TRANSPUESTA .)
    LPAREN          reduce using rule 26 (especial -> TRANSPUESTA .)
    ID              reduce using rule 26 (especial -> TRANSPUESTA .)


state 67

    (27) especial -> INVERSA .

    SEMICOLON       reduce using rule 27 (especial -> INVERSA .)
    MUL             reduce using rule 27 (especial -> INVERSA .)
    DIV             reduce using rule 27 (especial -> INVERSA .)
    PLUS            reduce using rule 27 (especial -> INVERSA .)
    MINUS           reduce using rule 27 (especial -> INVERSA .)
    GT              reduce using rule 27 (especial -> INVERSA .)
    LT              reduce using rule 27 (especial -> INVERSA .)
    GTE             reduce using rule 27 (especial -> INVERSA .)
    LTE             reduce using rule 27 (especial -> INVERSA .)
    NE              reduce using rule 27 (especial -> INVERSA .)
    COMPARE         reduce using rule 27 (especial -> INVERSA .)
    AND             reduce using rule 27 (especial -> INVERSA .)
    OR              reduce using rule 27 (especial -> INVERSA .)
    RBRACKET        reduce using rule 27 (especial -> INVERSA .)
    RPAREN          reduce using rule 27 (especial -> INVERSA .)
    TO              reduce using rule 27 (especial -> INVERSA .)
    COMMA           reduce using rule 27 (especial -> INVERSA .)
    CTEI            reduce using rule 27 (especial -> INVERSA .)
    CTEF            reduce using rule 27 (especial -> INVERSA .)
    CTEC            reduce using rule 27 (especial -> INVERSA .)
    CTESTRING       reduce using rule 27 (especial -> INVERSA .)
    LPAREN          reduce using rule 27 (especial -> INVERSA .)
    ID              reduce using rule 27 (especial -> INVERSA .)


state 68

    (28) especial -> DETERMINANTE .

    SEMICOLON       reduce using rule 28 (especial -> DETERMINANTE .)
    MUL             reduce using rule 28 (especial -> DETERMINANTE .)
    DIV             reduce using rule 28 (especial -> DETERMINANTE .)
    PLUS            reduce using rule 28 (especial -> DETERMINANTE .)
    MINUS           reduce using rule 28 (especial -> DETERMINANTE .)
    GT              reduce using rule 28 (especial -> DETERMINANTE .)
    LT              reduce using rule 28 (especial -> DETERMINANTE .)
    GTE             reduce using rule 28 (especial -> DETERMINANTE .)
    LTE             reduce using rule 28 (especial -> DETERMINANTE .)
    NE              reduce using rule 28 (especial -> DETERMINANTE .)
    COMPARE         reduce using rule 28 (especial -> DETERMINANTE .)
    AND             reduce using rule 28 (especial -> DETERMINANTE .)
    OR              reduce using rule 28 (especial -> DETERMINANTE .)
    RBRACKET        reduce using rule 28 (especial -> DETERMINANTE .)
    RPAREN          reduce using rule 28 (especial -> DETERMINANTE .)
    TO              reduce using rule 28 (especial -> DETERMINANTE .)
    COMMA           reduce using rule 28 (especial -> DETERMINANTE .)
    CTEI            reduce using rule 28 (especial -> DETERMINANTE .)
    CTEF            reduce using rule 28 (especial -> DETERMINANTE .)
    CTEC            reduce using rule 28 (especial -> DETERMINANTE .)
    CTESTRING       reduce using rule 28 (especial -> DETERMINANTE .)
    LPAREN          reduce using rule 28 (especial -> DETERMINANTE .)
    ID              reduce using rule 28 (especial -> DETERMINANTE .)


state 69

    (29) arr -> LBRACKET CTEI . RBRACKET
    (31) mat -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> LBRACKET CTEI . RBRACKET LBRACKET exp RBRACKET
    (101) pexp -> CTEI . saveCTE
    (109) saveCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 91
    MUL             reduce using rule 109 (saveCTE -> .)
    DIV             reduce using rule 109 (saveCTE -> .)
    PLUS            reduce using rule 109 (saveCTE -> .)
    MINUS           reduce using rule 109 (saveCTE -> .)
    GT              reduce using rule 109 (saveCTE -> .)
    LT              reduce using rule 109 (saveCTE -> .)
    GTE             reduce using rule 109 (saveCTE -> .)
    LTE             reduce using rule 109 (saveCTE -> .)
    NE              reduce using rule 109 (saveCTE -> .)
    COMPARE         reduce using rule 109 (saveCTE -> .)
    AND             reduce using rule 109 (saveCTE -> .)
    OR              reduce using rule 109 (saveCTE -> .)

  ! RBRACKET        [ reduce using rule 109 (saveCTE -> .) ]

    saveCTE                        shift and go to state 92

state 70

    (30) arr -> LBRACKET exp . RBRACKET
    (32) mat -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET
    (33) mat -> LBRACKET exp . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 93


state 71

    (78) exp -> nexp .
    (79) exp -> nexp . OR saveOperator nexp

    RBRACKET        reduce using rule 78 (exp -> nexp .)
    RPAREN          reduce using rule 78 (exp -> nexp .)
    SEMICOLON       reduce using rule 78 (exp -> nexp .)
    TO              reduce using rule 78 (exp -> nexp .)
    COMMA           reduce using rule 78 (exp -> nexp .)
    OR              shift and go to state 94


state 72

    (82) nexp -> compexp .
    (83) nexp -> compexp . AND saveOperator compexp

    OR              reduce using rule 82 (nexp -> compexp .)
    RBRACKET        reduce using rule 82 (nexp -> compexp .)
    RPAREN          reduce using rule 82 (nexp -> compexp .)
    SEMICOLON       reduce using rule 82 (nexp -> compexp .)
    TO              reduce using rule 82 (nexp -> compexp .)
    COMMA           reduce using rule 82 (nexp -> compexp .)
    AND             shift and go to state 95


state 73

    (84) compexp -> sumexp .
    (86) compexp1 -> sumexp . GT saveOperator sumexp
    (87) compexp1 -> sumexp . LT saveOperator sumexp
    (88) compexp1 -> sumexp . GTE saveOperator sumexp
    (89) compexp1 -> sumexp . LTE saveOperator sumexp
    (90) compexp1 -> sumexp . NE saveOperator sumexp
    (91) compexp1 -> sumexp . COMPARE saveOperator sumexp

    AND             reduce using rule 84 (compexp -> sumexp .)
    OR              reduce using rule 84 (compexp -> sumexp .)
    RBRACKET        reduce using rule 84 (compexp -> sumexp .)
    RPAREN          reduce using rule 84 (compexp -> sumexp .)
    SEMICOLON       reduce using rule 84 (compexp -> sumexp .)
    TO              reduce using rule 84 (compexp -> sumexp .)
    COMMA           reduce using rule 84 (compexp -> sumexp .)
    GT              shift and go to state 96
    LT              shift and go to state 97
    GTE             shift and go to state 98
    LTE             shift and go to state 99
    NE              shift and go to state 100
    COMPARE         shift and go to state 101


state 74

    (85) compexp -> compexp1 . sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

    sumexp                         shift and go to state 102
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 75

    (92) sumexp -> mulexp .
    (93) sumexp -> mulexp . PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> mulexp . MINUS genera_sum_quad saveOperator mulexp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    GT              reduce using rule 92 (sumexp -> mulexp .)
    LT              reduce using rule 92 (sumexp -> mulexp .)
    GTE             reduce using rule 92 (sumexp -> mulexp .)
    LTE             reduce using rule 92 (sumexp -> mulexp .)
    NE              reduce using rule 92 (sumexp -> mulexp .)
    COMPARE         reduce using rule 92 (sumexp -> mulexp .)
    AND             reduce using rule 92 (sumexp -> mulexp .)
    OR              reduce using rule 92 (sumexp -> mulexp .)
    RBRACKET        reduce using rule 92 (sumexp -> mulexp .)
    RPAREN          reduce using rule 92 (sumexp -> mulexp .)
    SEMICOLON       reduce using rule 92 (sumexp -> mulexp .)
    TO              reduce using rule 92 (sumexp -> mulexp .)
    COMMA           reduce using rule 92 (sumexp -> mulexp .)
    CTEI            reduce using rule 92 (sumexp -> mulexp .)
    CTEF            reduce using rule 92 (sumexp -> mulexp .)
    CTEC            reduce using rule 92 (sumexp -> mulexp .)
    CTESTRING       reduce using rule 92 (sumexp -> mulexp .)
    LPAREN          reduce using rule 92 (sumexp -> mulexp .)
    ID              reduce using rule 92 (sumexp -> mulexp .)
    MUL             reduce using rule 92 (sumexp -> mulexp .)
    DIV             reduce using rule 92 (sumexp -> mulexp .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105

  ! PLUS            [ reduce using rule 92 (sumexp -> mulexp .) ]
  ! MINUS           [ reduce using rule 92 (sumexp -> mulexp .) ]


state 76

    (97) mulexp -> pexp .
    (98) mulexp -> pexp . MUL saveOperator pexp
    (99) mulexp -> pexp . DIV saveOperator pexp

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    PLUS            reduce using rule 97 (mulexp -> pexp .)
    MINUS           reduce using rule 97 (mulexp -> pexp .)
    GT              reduce using rule 97 (mulexp -> pexp .)
    LT              reduce using rule 97 (mulexp -> pexp .)
    GTE             reduce using rule 97 (mulexp -> pexp .)
    LTE             reduce using rule 97 (mulexp -> pexp .)
    NE              reduce using rule 97 (mulexp -> pexp .)
    COMPARE         reduce using rule 97 (mulexp -> pexp .)
    AND             reduce using rule 97 (mulexp -> pexp .)
    OR              reduce using rule 97 (mulexp -> pexp .)
    RBRACKET        reduce using rule 97 (mulexp -> pexp .)
    RPAREN          reduce using rule 97 (mulexp -> pexp .)
    SEMICOLON       reduce using rule 97 (mulexp -> pexp .)
    TO              reduce using rule 97 (mulexp -> pexp .)
    COMMA           reduce using rule 97 (mulexp -> pexp .)
    CTEI            reduce using rule 97 (mulexp -> pexp .)
    CTEF            reduce using rule 97 (mulexp -> pexp .)
    CTEC            reduce using rule 97 (mulexp -> pexp .)
    CTESTRING       reduce using rule 97 (mulexp -> pexp .)
    LPAREN          reduce using rule 97 (mulexp -> pexp .)
    ID              reduce using rule 97 (mulexp -> pexp .)
    MUL             shift and go to state 106
    DIV             shift and go to state 107

  ! MUL             [ reduce using rule 97 (mulexp -> pexp .) ]
  ! DIV             [ reduce using rule 97 (mulexp -> pexp .) ]


state 77

    (100) pexp -> var1 . saveId
    (108) saveId -> .

    MUL             reduce using rule 108 (saveId -> .)
    DIV             reduce using rule 108 (saveId -> .)
    PLUS            reduce using rule 108 (saveId -> .)
    MINUS           reduce using rule 108 (saveId -> .)
    GT              reduce using rule 108 (saveId -> .)
    LT              reduce using rule 108 (saveId -> .)
    GTE             reduce using rule 108 (saveId -> .)
    LTE             reduce using rule 108 (saveId -> .)
    NE              reduce using rule 108 (saveId -> .)
    COMPARE         reduce using rule 108 (saveId -> .)
    AND             reduce using rule 108 (saveId -> .)
    OR              reduce using rule 108 (saveId -> .)
    RBRACKET        reduce using rule 108 (saveId -> .)
    RPAREN          reduce using rule 108 (saveId -> .)
    SEMICOLON       reduce using rule 108 (saveId -> .)
    TO              reduce using rule 108 (saveId -> .)
    COMMA           reduce using rule 108 (saveId -> .)
    CTEI            reduce using rule 108 (saveId -> .)
    CTEF            reduce using rule 108 (saveId -> .)
    CTEC            reduce using rule 108 (saveId -> .)
    CTESTRING       reduce using rule 108 (saveId -> .)
    LPAREN          reduce using rule 108 (saveId -> .)
    ID              reduce using rule 108 (saveId -> .)

    saveId                         shift and go to state 108

state 78

    (102) pexp -> CTEF . saveCTE
    (109) saveCTE -> .

    MUL             reduce using rule 109 (saveCTE -> .)
    DIV             reduce using rule 109 (saveCTE -> .)
    PLUS            reduce using rule 109 (saveCTE -> .)
    MINUS           reduce using rule 109 (saveCTE -> .)
    GT              reduce using rule 109 (saveCTE -> .)
    LT              reduce using rule 109 (saveCTE -> .)
    GTE             reduce using rule 109 (saveCTE -> .)
    LTE             reduce using rule 109 (saveCTE -> .)
    NE              reduce using rule 109 (saveCTE -> .)
    COMPARE         reduce using rule 109 (saveCTE -> .)
    AND             reduce using rule 109 (saveCTE -> .)
    OR              reduce using rule 109 (saveCTE -> .)
    RBRACKET        reduce using rule 109 (saveCTE -> .)
    RPAREN          reduce using rule 109 (saveCTE -> .)
    SEMICOLON       reduce using rule 109 (saveCTE -> .)
    TO              reduce using rule 109 (saveCTE -> .)
    COMMA           reduce using rule 109 (saveCTE -> .)
    CTEI            reduce using rule 109 (saveCTE -> .)
    CTEF            reduce using rule 109 (saveCTE -> .)
    CTEC            reduce using rule 109 (saveCTE -> .)
    CTESTRING       reduce using rule 109 (saveCTE -> .)
    LPAREN          reduce using rule 109 (saveCTE -> .)
    ID              reduce using rule 109 (saveCTE -> .)

    saveCTE                        shift and go to state 109

state 79

    (103) pexp -> CTEC . saveCTE
    (109) saveCTE -> .

    MUL             reduce using rule 109 (saveCTE -> .)
    DIV             reduce using rule 109 (saveCTE -> .)
    PLUS            reduce using rule 109 (saveCTE -> .)
    MINUS           reduce using rule 109 (saveCTE -> .)
    GT              reduce using rule 109 (saveCTE -> .)
    LT              reduce using rule 109 (saveCTE -> .)
    GTE             reduce using rule 109 (saveCTE -> .)
    LTE             reduce using rule 109 (saveCTE -> .)
    NE              reduce using rule 109 (saveCTE -> .)
    COMPARE         reduce using rule 109 (saveCTE -> .)
    AND             reduce using rule 109 (saveCTE -> .)
    OR              reduce using rule 109 (saveCTE -> .)
    RBRACKET        reduce using rule 109 (saveCTE -> .)
    RPAREN          reduce using rule 109 (saveCTE -> .)
    SEMICOLON       reduce using rule 109 (saveCTE -> .)
    TO              reduce using rule 109 (saveCTE -> .)
    COMMA           reduce using rule 109 (saveCTE -> .)
    CTEI            reduce using rule 109 (saveCTE -> .)
    CTEF            reduce using rule 109 (saveCTE -> .)
    CTEC            reduce using rule 109 (saveCTE -> .)
    CTESTRING       reduce using rule 109 (saveCTE -> .)
    LPAREN          reduce using rule 109 (saveCTE -> .)
    ID              reduce using rule 109 (saveCTE -> .)

    saveCTE                        shift and go to state 110

state 80

    (104) pexp -> CTESTRING . saveCTE
    (109) saveCTE -> .

    MUL             reduce using rule 109 (saveCTE -> .)
    DIV             reduce using rule 109 (saveCTE -> .)
    PLUS            reduce using rule 109 (saveCTE -> .)
    MINUS           reduce using rule 109 (saveCTE -> .)
    GT              reduce using rule 109 (saveCTE -> .)
    LT              reduce using rule 109 (saveCTE -> .)
    GTE             reduce using rule 109 (saveCTE -> .)
    LTE             reduce using rule 109 (saveCTE -> .)
    NE              reduce using rule 109 (saveCTE -> .)
    COMPARE         reduce using rule 109 (saveCTE -> .)
    AND             reduce using rule 109 (saveCTE -> .)
    OR              reduce using rule 109 (saveCTE -> .)
    RBRACKET        reduce using rule 109 (saveCTE -> .)
    RPAREN          reduce using rule 109 (saveCTE -> .)
    SEMICOLON       reduce using rule 109 (saveCTE -> .)
    TO              reduce using rule 109 (saveCTE -> .)
    COMMA           reduce using rule 109 (saveCTE -> .)
    CTEI            reduce using rule 109 (saveCTE -> .)
    CTEF            reduce using rule 109 (saveCTE -> .)
    CTEC            reduce using rule 109 (saveCTE -> .)
    CTESTRING       reduce using rule 109 (saveCTE -> .)
    LPAREN          reduce using rule 109 (saveCTE -> .)
    ID              reduce using rule 109 (saveCTE -> .)

    saveCTE                        shift and go to state 111

state 81

    (105) pexp -> llamada .

    MUL             reduce using rule 105 (pexp -> llamada .)
    DIV             reduce using rule 105 (pexp -> llamada .)
    PLUS            reduce using rule 105 (pexp -> llamada .)
    MINUS           reduce using rule 105 (pexp -> llamada .)
    GT              reduce using rule 105 (pexp -> llamada .)
    LT              reduce using rule 105 (pexp -> llamada .)
    GTE             reduce using rule 105 (pexp -> llamada .)
    LTE             reduce using rule 105 (pexp -> llamada .)
    NE              reduce using rule 105 (pexp -> llamada .)
    COMPARE         reduce using rule 105 (pexp -> llamada .)
    AND             reduce using rule 105 (pexp -> llamada .)
    OR              reduce using rule 105 (pexp -> llamada .)
    RBRACKET        reduce using rule 105 (pexp -> llamada .)
    RPAREN          reduce using rule 105 (pexp -> llamada .)
    SEMICOLON       reduce using rule 105 (pexp -> llamada .)
    TO              reduce using rule 105 (pexp -> llamada .)
    COMMA           reduce using rule 105 (pexp -> llamada .)
    CTEI            reduce using rule 105 (pexp -> llamada .)
    CTEF            reduce using rule 105 (pexp -> llamada .)
    CTEC            reduce using rule 105 (pexp -> llamada .)
    CTESTRING       reduce using rule 105 (pexp -> llamada .)
    LPAREN          reduce using rule 105 (pexp -> llamada .)
    ID              reduce using rule 105 (pexp -> llamada .)


state 82

    (106) pexp -> LPAREN . exp RPAREN
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)

    exp                            shift and go to state 112
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 83

    (15) var1 -> ID .
    (16) var1 -> ID . COMMA var1 addV
    (17) var1 -> ID . arr
    (18) var1 -> ID . arr COMMA var1 addV
    (19) var1 -> ID . mat COMMA var1 addV
    (20) var1 -> ID . mat
    (21) var1 -> ID . mat especial
    (62) llamada -> ID . LPAREN exp RPAREN
    (29) arr -> . LBRACKET CTEI RBRACKET
    (30) arr -> . LBRACKET exp RBRACKET
    (31) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    MUL             reduce using rule 15 (var1 -> ID .)
    DIV             reduce using rule 15 (var1 -> ID .)
    PLUS            reduce using rule 15 (var1 -> ID .)
    MINUS           reduce using rule 15 (var1 -> ID .)
    GT              reduce using rule 15 (var1 -> ID .)
    LT              reduce using rule 15 (var1 -> ID .)
    GTE             reduce using rule 15 (var1 -> ID .)
    LTE             reduce using rule 15 (var1 -> ID .)
    NE              reduce using rule 15 (var1 -> ID .)
    COMPARE         reduce using rule 15 (var1 -> ID .)
    AND             reduce using rule 15 (var1 -> ID .)
    OR              reduce using rule 15 (var1 -> ID .)
    RBRACKET        reduce using rule 15 (var1 -> ID .)
    RPAREN          reduce using rule 15 (var1 -> ID .)
    SEMICOLON       reduce using rule 15 (var1 -> ID .)
    TO              reduce using rule 15 (var1 -> ID .)
    CTEI            reduce using rule 15 (var1 -> ID .)
    CTEF            reduce using rule 15 (var1 -> ID .)
    CTEC            reduce using rule 15 (var1 -> ID .)
    CTESTRING       reduce using rule 15 (var1 -> ID .)
    ID              reduce using rule 15 (var1 -> ID .)
    COMMA           shift and go to state 53
    LPAREN          shift and go to state 113
    LBRACKET        shift and go to state 56

  ! COMMA           [ reduce using rule 15 (var1 -> ID .) ]
  ! LPAREN          [ reduce using rule 15 (var1 -> ID .) ]

    arr                            shift and go to state 54
    mat                            shift and go to state 55

state 84

    (7) main -> MAIN LPAREN param RPAREN LCURLY vars . statement RCURLY END
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (107) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (62) llamada -> . ID LPAREN exp RPAREN
    (77) lectura -> . READ LPAREN var1 RPAREN
    (70) escritura -> . PRINT LPAREN escritura1 RPAREN
    (67) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (64) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (69) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 107 (empty -> .)
    ID              shift and go to state 124
    READ            shift and go to state 125
    PRINT           shift and go to state 126
    FOR             shift and go to state 127
    IF              shift and go to state 128
    WHILE           shift and go to state 129

    statement                      shift and go to state 114
    statement1                     shift and go to state 115
    empty                          shift and go to state 116
    asignacion                     shift and go to state 117
    llamada                        shift and go to state 118
    lectura                        shift and go to state 119
    escritura                      shift and go to state 120
    for                            shift and go to state 121
    if                             shift and go to state 122
    while                          shift and go to state 123

state 85

    (60) param1 -> ID COMMA param1 .

    RPAREN          reduce using rule 60 (param1 -> ID COMMA param1 .)


state 86

    (42) function1 -> ID save_fun LPAREN param . RPAREN SEMICOLON LCURLY vars statement RCURLY

    RPAREN          shift and go to state 130


state 87

    (43) function2 -> ID save_fun LPAREN param . RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    RPAREN          shift and go to state 131


state 88

    (16) var1 -> ID COMMA var1 addV .

    SEMICOLON       reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    MUL             reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    DIV             reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    PLUS            reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    MINUS           reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    GT              reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    LT              reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    GTE             reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    LTE             reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    NE              reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    COMPARE         reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    AND             reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    OR              reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    RBRACKET        reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    RPAREN          reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    TO              reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    COMMA           reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    CTEI            reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    CTEF            reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    CTEC            reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    CTESTRING       reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    LPAREN          reduce using rule 16 (var1 -> ID COMMA var1 addV .)
    ID              reduce using rule 16 (var1 -> ID COMMA var1 addV .)


state 89

    (18) var1 -> ID arr COMMA var1 . addV
    (23) addV -> .

    SEMICOLON       reduce using rule 23 (addV -> .)
    MUL             reduce using rule 23 (addV -> .)
    DIV             reduce using rule 23 (addV -> .)
    PLUS            reduce using rule 23 (addV -> .)
    MINUS           reduce using rule 23 (addV -> .)
    GT              reduce using rule 23 (addV -> .)
    LT              reduce using rule 23 (addV -> .)
    GTE             reduce using rule 23 (addV -> .)
    LTE             reduce using rule 23 (addV -> .)
    NE              reduce using rule 23 (addV -> .)
    COMPARE         reduce using rule 23 (addV -> .)
    AND             reduce using rule 23 (addV -> .)
    OR              reduce using rule 23 (addV -> .)
    RBRACKET        reduce using rule 23 (addV -> .)
    RPAREN          reduce using rule 23 (addV -> .)
    TO              reduce using rule 23 (addV -> .)
    COMMA           reduce using rule 23 (addV -> .)
    CTEI            reduce using rule 23 (addV -> .)
    CTEF            reduce using rule 23 (addV -> .)
    CTEC            reduce using rule 23 (addV -> .)
    CTESTRING       reduce using rule 23 (addV -> .)
    LPAREN          reduce using rule 23 (addV -> .)
    ID              reduce using rule 23 (addV -> .)

    addV                           shift and go to state 132

state 90

    (19) var1 -> ID mat COMMA var1 . addV
    (23) addV -> .

    SEMICOLON       reduce using rule 23 (addV -> .)
    MUL             reduce using rule 23 (addV -> .)
    DIV             reduce using rule 23 (addV -> .)
    PLUS            reduce using rule 23 (addV -> .)
    MINUS           reduce using rule 23 (addV -> .)
    GT              reduce using rule 23 (addV -> .)
    LT              reduce using rule 23 (addV -> .)
    GTE             reduce using rule 23 (addV -> .)
    LTE             reduce using rule 23 (addV -> .)
    NE              reduce using rule 23 (addV -> .)
    COMPARE         reduce using rule 23 (addV -> .)
    AND             reduce using rule 23 (addV -> .)
    OR              reduce using rule 23 (addV -> .)
    RBRACKET        reduce using rule 23 (addV -> .)
    RPAREN          reduce using rule 23 (addV -> .)
    TO              reduce using rule 23 (addV -> .)
    COMMA           reduce using rule 23 (addV -> .)
    CTEI            reduce using rule 23 (addV -> .)
    CTEF            reduce using rule 23 (addV -> .)
    CTEC            reduce using rule 23 (addV -> .)
    CTESTRING       reduce using rule 23 (addV -> .)
    LPAREN          reduce using rule 23 (addV -> .)
    ID              reduce using rule 23 (addV -> .)

    addV                           shift and go to state 133

state 91

    (29) arr -> LBRACKET CTEI RBRACKET .
    (31) mat -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET
    (34) mat -> LBRACKET CTEI RBRACKET . LBRACKET exp RBRACKET

    COMMA           reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    CTEI            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    CTEF            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    CTEC            reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    CTESTRING       reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    ID              reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 29 (arr -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 134


state 92

    (101) pexp -> CTEI saveCTE .

    MUL             reduce using rule 101 (pexp -> CTEI saveCTE .)
    DIV             reduce using rule 101 (pexp -> CTEI saveCTE .)
    PLUS            reduce using rule 101 (pexp -> CTEI saveCTE .)
    MINUS           reduce using rule 101 (pexp -> CTEI saveCTE .)
    GT              reduce using rule 101 (pexp -> CTEI saveCTE .)
    LT              reduce using rule 101 (pexp -> CTEI saveCTE .)
    GTE             reduce using rule 101 (pexp -> CTEI saveCTE .)
    LTE             reduce using rule 101 (pexp -> CTEI saveCTE .)
    NE              reduce using rule 101 (pexp -> CTEI saveCTE .)
    COMPARE         reduce using rule 101 (pexp -> CTEI saveCTE .)
    AND             reduce using rule 101 (pexp -> CTEI saveCTE .)
    OR              reduce using rule 101 (pexp -> CTEI saveCTE .)
    RBRACKET        reduce using rule 101 (pexp -> CTEI saveCTE .)
    RPAREN          reduce using rule 101 (pexp -> CTEI saveCTE .)
    SEMICOLON       reduce using rule 101 (pexp -> CTEI saveCTE .)
    TO              reduce using rule 101 (pexp -> CTEI saveCTE .)
    COMMA           reduce using rule 101 (pexp -> CTEI saveCTE .)
    CTEI            reduce using rule 101 (pexp -> CTEI saveCTE .)
    CTEF            reduce using rule 101 (pexp -> CTEI saveCTE .)
    CTEC            reduce using rule 101 (pexp -> CTEI saveCTE .)
    CTESTRING       reduce using rule 101 (pexp -> CTEI saveCTE .)
    LPAREN          reduce using rule 101 (pexp -> CTEI saveCTE .)
    ID              reduce using rule 101 (pexp -> CTEI saveCTE .)


state 93

    (30) arr -> LBRACKET exp RBRACKET .
    (32) mat -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET
    (33) mat -> LBRACKET exp RBRACKET . LBRACKET CTEI RBRACKET

    COMMA           reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    MUL             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    DIV             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    GT              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    LT              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    GTE             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    LTE             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    NE              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    AND             reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    OR              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    TO              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    CTEI            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    CTEF            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    CTEC            reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    CTESTRING       reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    LPAREN          reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    ID              reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 30 (arr -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 135


state 94

    (79) exp -> nexp OR . saveOperator nexp
    (110) saveOperator -> .

    CTEI            reduce using rule 110 (saveOperator -> .)
    CTEF            reduce using rule 110 (saveOperator -> .)
    CTEC            reduce using rule 110 (saveOperator -> .)
    CTESTRING       reduce using rule 110 (saveOperator -> .)
    LPAREN          reduce using rule 110 (saveOperator -> .)
    ID              reduce using rule 110 (saveOperator -> .)
    AND             reduce using rule 110 (saveOperator -> .)
    GT              reduce using rule 110 (saveOperator -> .)
    LT              reduce using rule 110 (saveOperator -> .)
    GTE             reduce using rule 110 (saveOperator -> .)
    LTE             reduce using rule 110 (saveOperator -> .)
    NE              reduce using rule 110 (saveOperator -> .)
    COMPARE         reduce using rule 110 (saveOperator -> .)
    PLUS            reduce using rule 110 (saveOperator -> .)
    MINUS           reduce using rule 110 (saveOperator -> .)
    MUL             reduce using rule 110 (saveOperator -> .)
    DIV             reduce using rule 110 (saveOperator -> .)
    RBRACKET        reduce using rule 110 (saveOperator -> .)
    RPAREN          reduce using rule 110 (saveOperator -> .)
    SEMICOLON       reduce using rule 110 (saveOperator -> .)
    TO              reduce using rule 110 (saveOperator -> .)
    COMMA           reduce using rule 110 (saveOperator -> .)

    saveOperator                   shift and go to state 136

state 95

    (83) nexp -> compexp AND . saveOperator compexp
    (110) saveOperator -> .

    CTEI            reduce using rule 110 (saveOperator -> .)
    CTEF            reduce using rule 110 (saveOperator -> .)
    CTEC            reduce using rule 110 (saveOperator -> .)
    CTESTRING       reduce using rule 110 (saveOperator -> .)
    LPAREN          reduce using rule 110 (saveOperator -> .)
    ID              reduce using rule 110 (saveOperator -> .)
    GT              reduce using rule 110 (saveOperator -> .)
    LT              reduce using rule 110 (saveOperator -> .)
    GTE             reduce using rule 110 (saveOperator -> .)
    LTE             reduce using rule 110 (saveOperator -> .)
    NE              reduce using rule 110 (saveOperator -> .)
    COMPARE         reduce using rule 110 (saveOperator -> .)
    PLUS            reduce using rule 110 (saveOperator -> .)
    MINUS           reduce using rule 110 (saveOperator -> .)
    MUL             reduce using rule 110 (saveOperator -> .)
    DIV             reduce using rule 110 (saveOperator -> .)
    OR              reduce using rule 110 (saveOperator -> .)
    RBRACKET        reduce using rule 110 (saveOperator -> .)
    RPAREN          reduce using rule 110 (saveOperator -> .)
    SEMICOLON       reduce using rule 110 (saveOperator -> .)
    TO              reduce using rule 110 (saveOperator -> .)
    COMMA           reduce using rule 110 (saveOperator -> .)

    saveOperator                   shift and go to state 137

state 96

    (86) compexp1 -> sumexp GT . saveOperator sumexp
    (110) saveOperator -> .

    CTEI            reduce using rule 110 (saveOperator -> .)
    CTEF            reduce using rule 110 (saveOperator -> .)
    CTEC            reduce using rule 110 (saveOperator -> .)
    CTESTRING       reduce using rule 110 (saveOperator -> .)
    LPAREN          reduce using rule 110 (saveOperator -> .)
    ID              reduce using rule 110 (saveOperator -> .)
    PLUS            reduce using rule 110 (saveOperator -> .)
    MINUS           reduce using rule 110 (saveOperator -> .)
    MUL             reduce using rule 110 (saveOperator -> .)
    DIV             reduce using rule 110 (saveOperator -> .)
    AND             reduce using rule 110 (saveOperator -> .)
    OR              reduce using rule 110 (saveOperator -> .)
    RBRACKET        reduce using rule 110 (saveOperator -> .)
    RPAREN          reduce using rule 110 (saveOperator -> .)
    SEMICOLON       reduce using rule 110 (saveOperator -> .)
    TO              reduce using rule 110 (saveOperator -> .)
    COMMA           reduce using rule 110 (saveOperator -> .)

    saveOperator                   shift and go to state 138

state 97

    (87) compexp1 -> sumexp LT . saveOperator sumexp
    (110) saveOperator -> .

    CTEI            reduce using rule 110 (saveOperator -> .)
    CTEF            reduce using rule 110 (saveOperator -> .)
    CTEC            reduce using rule 110 (saveOperator -> .)
    CTESTRING       reduce using rule 110 (saveOperator -> .)
    LPAREN          reduce using rule 110 (saveOperator -> .)
    ID              reduce using rule 110 (saveOperator -> .)
    PLUS            reduce using rule 110 (saveOperator -> .)
    MINUS           reduce using rule 110 (saveOperator -> .)
    MUL             reduce using rule 110 (saveOperator -> .)
    DIV             reduce using rule 110 (saveOperator -> .)
    AND             reduce using rule 110 (saveOperator -> .)
    OR              reduce using rule 110 (saveOperator -> .)
    RBRACKET        reduce using rule 110 (saveOperator -> .)
    RPAREN          reduce using rule 110 (saveOperator -> .)
    SEMICOLON       reduce using rule 110 (saveOperator -> .)
    TO              reduce using rule 110 (saveOperator -> .)
    COMMA           reduce using rule 110 (saveOperator -> .)

    saveOperator                   shift and go to state 139

state 98

    (88) compexp1 -> sumexp GTE . saveOperator sumexp
    (110) saveOperator -> .

    CTEI            reduce using rule 110 (saveOperator -> .)
    CTEF            reduce using rule 110 (saveOperator -> .)
    CTEC            reduce using rule 110 (saveOperator -> .)
    CTESTRING       reduce using rule 110 (saveOperator -> .)
    LPAREN          reduce using rule 110 (saveOperator -> .)
    ID              reduce using rule 110 (saveOperator -> .)
    PLUS            reduce using rule 110 (saveOperator -> .)
    MINUS           reduce using rule 110 (saveOperator -> .)
    MUL             reduce using rule 110 (saveOperator -> .)
    DIV             reduce using rule 110 (saveOperator -> .)
    AND             reduce using rule 110 (saveOperator -> .)
    OR              reduce using rule 110 (saveOperator -> .)
    RBRACKET        reduce using rule 110 (saveOperator -> .)
    RPAREN          reduce using rule 110 (saveOperator -> .)
    SEMICOLON       reduce using rule 110 (saveOperator -> .)
    TO              reduce using rule 110 (saveOperator -> .)
    COMMA           reduce using rule 110 (saveOperator -> .)

    saveOperator                   shift and go to state 140

state 99

    (89) compexp1 -> sumexp LTE . saveOperator sumexp
    (110) saveOperator -> .

    CTEI            reduce using rule 110 (saveOperator -> .)
    CTEF            reduce using rule 110 (saveOperator -> .)
    CTEC            reduce using rule 110 (saveOperator -> .)
    CTESTRING       reduce using rule 110 (saveOperator -> .)
    LPAREN          reduce using rule 110 (saveOperator -> .)
    ID              reduce using rule 110 (saveOperator -> .)
    PLUS            reduce using rule 110 (saveOperator -> .)
    MINUS           reduce using rule 110 (saveOperator -> .)
    MUL             reduce using rule 110 (saveOperator -> .)
    DIV             reduce using rule 110 (saveOperator -> .)
    AND             reduce using rule 110 (saveOperator -> .)
    OR              reduce using rule 110 (saveOperator -> .)
    RBRACKET        reduce using rule 110 (saveOperator -> .)
    RPAREN          reduce using rule 110 (saveOperator -> .)
    SEMICOLON       reduce using rule 110 (saveOperator -> .)
    TO              reduce using rule 110 (saveOperator -> .)
    COMMA           reduce using rule 110 (saveOperator -> .)

    saveOperator                   shift and go to state 141

state 100

    (90) compexp1 -> sumexp NE . saveOperator sumexp
    (110) saveOperator -> .

    CTEI            reduce using rule 110 (saveOperator -> .)
    CTEF            reduce using rule 110 (saveOperator -> .)
    CTEC            reduce using rule 110 (saveOperator -> .)
    CTESTRING       reduce using rule 110 (saveOperator -> .)
    LPAREN          reduce using rule 110 (saveOperator -> .)
    ID              reduce using rule 110 (saveOperator -> .)
    PLUS            reduce using rule 110 (saveOperator -> .)
    MINUS           reduce using rule 110 (saveOperator -> .)
    MUL             reduce using rule 110 (saveOperator -> .)
    DIV             reduce using rule 110 (saveOperator -> .)
    AND             reduce using rule 110 (saveOperator -> .)
    OR              reduce using rule 110 (saveOperator -> .)
    RBRACKET        reduce using rule 110 (saveOperator -> .)
    RPAREN          reduce using rule 110 (saveOperator -> .)
    SEMICOLON       reduce using rule 110 (saveOperator -> .)
    TO              reduce using rule 110 (saveOperator -> .)
    COMMA           reduce using rule 110 (saveOperator -> .)

    saveOperator                   shift and go to state 142

state 101

    (91) compexp1 -> sumexp COMPARE . saveOperator sumexp
    (110) saveOperator -> .

    CTEI            reduce using rule 110 (saveOperator -> .)
    CTEF            reduce using rule 110 (saveOperator -> .)
    CTEC            reduce using rule 110 (saveOperator -> .)
    CTESTRING       reduce using rule 110 (saveOperator -> .)
    LPAREN          reduce using rule 110 (saveOperator -> .)
    ID              reduce using rule 110 (saveOperator -> .)
    PLUS            reduce using rule 110 (saveOperator -> .)
    MINUS           reduce using rule 110 (saveOperator -> .)
    MUL             reduce using rule 110 (saveOperator -> .)
    DIV             reduce using rule 110 (saveOperator -> .)
    AND             reduce using rule 110 (saveOperator -> .)
    OR              reduce using rule 110 (saveOperator -> .)
    RBRACKET        reduce using rule 110 (saveOperator -> .)
    RPAREN          reduce using rule 110 (saveOperator -> .)
    SEMICOLON       reduce using rule 110 (saveOperator -> .)
    TO              reduce using rule 110 (saveOperator -> .)
    COMMA           reduce using rule 110 (saveOperator -> .)

    saveOperator                   shift and go to state 143

state 102

    (85) compexp -> compexp1 sumexp .

    AND             reduce using rule 85 (compexp -> compexp1 sumexp .)
    OR              reduce using rule 85 (compexp -> compexp1 sumexp .)
    RBRACKET        reduce using rule 85 (compexp -> compexp1 sumexp .)
    RPAREN          reduce using rule 85 (compexp -> compexp1 sumexp .)
    SEMICOLON       reduce using rule 85 (compexp -> compexp1 sumexp .)
    TO              reduce using rule 85 (compexp -> compexp1 sumexp .)
    COMMA           reduce using rule 85 (compexp -> compexp1 sumexp .)


state 103

    (101) pexp -> CTEI . saveCTE
    (109) saveCTE -> .

    MUL             reduce using rule 109 (saveCTE -> .)
    DIV             reduce using rule 109 (saveCTE -> .)
    PLUS            reduce using rule 109 (saveCTE -> .)
    MINUS           reduce using rule 109 (saveCTE -> .)
    AND             reduce using rule 109 (saveCTE -> .)
    OR              reduce using rule 109 (saveCTE -> .)
    RBRACKET        reduce using rule 109 (saveCTE -> .)
    RPAREN          reduce using rule 109 (saveCTE -> .)
    SEMICOLON       reduce using rule 109 (saveCTE -> .)
    TO              reduce using rule 109 (saveCTE -> .)
    COMMA           reduce using rule 109 (saveCTE -> .)
    GT              reduce using rule 109 (saveCTE -> .)
    LT              reduce using rule 109 (saveCTE -> .)
    GTE             reduce using rule 109 (saveCTE -> .)
    LTE             reduce using rule 109 (saveCTE -> .)
    NE              reduce using rule 109 (saveCTE -> .)
    COMPARE         reduce using rule 109 (saveCTE -> .)
    CTEI            reduce using rule 109 (saveCTE -> .)
    CTEF            reduce using rule 109 (saveCTE -> .)
    CTEC            reduce using rule 109 (saveCTE -> .)
    CTESTRING       reduce using rule 109 (saveCTE -> .)
    LPAREN          reduce using rule 109 (saveCTE -> .)
    ID              reduce using rule 109 (saveCTE -> .)

    saveCTE                        shift and go to state 92

state 104

    (93) sumexp -> mulexp PLUS . genera_sum_quad saveOperator mulexp
    (95) genera_sum_quad -> .

    CTEI            reduce using rule 95 (genera_sum_quad -> .)
    CTEF            reduce using rule 95 (genera_sum_quad -> .)
    CTEC            reduce using rule 95 (genera_sum_quad -> .)
    CTESTRING       reduce using rule 95 (genera_sum_quad -> .)
    LPAREN          reduce using rule 95 (genera_sum_quad -> .)
    ID              reduce using rule 95 (genera_sum_quad -> .)
    MUL             reduce using rule 95 (genera_sum_quad -> .)
    DIV             reduce using rule 95 (genera_sum_quad -> .)
    GT              reduce using rule 95 (genera_sum_quad -> .)
    LT              reduce using rule 95 (genera_sum_quad -> .)
    GTE             reduce using rule 95 (genera_sum_quad -> .)
    LTE             reduce using rule 95 (genera_sum_quad -> .)
    NE              reduce using rule 95 (genera_sum_quad -> .)
    COMPARE         reduce using rule 95 (genera_sum_quad -> .)
    AND             reduce using rule 95 (genera_sum_quad -> .)
    OR              reduce using rule 95 (genera_sum_quad -> .)
    RBRACKET        reduce using rule 95 (genera_sum_quad -> .)
    RPAREN          reduce using rule 95 (genera_sum_quad -> .)
    SEMICOLON       reduce using rule 95 (genera_sum_quad -> .)
    TO              reduce using rule 95 (genera_sum_quad -> .)
    COMMA           reduce using rule 95 (genera_sum_quad -> .)
    PLUS            reduce using rule 95 (genera_sum_quad -> .)
    MINUS           reduce using rule 95 (genera_sum_quad -> .)

    genera_sum_quad                shift and go to state 144

state 105

    (94) sumexp -> mulexp MINUS . genera_sum_quad saveOperator mulexp
    (95) genera_sum_quad -> .

    CTEI            reduce using rule 95 (genera_sum_quad -> .)
    CTEF            reduce using rule 95 (genera_sum_quad -> .)
    CTEC            reduce using rule 95 (genera_sum_quad -> .)
    CTESTRING       reduce using rule 95 (genera_sum_quad -> .)
    LPAREN          reduce using rule 95 (genera_sum_quad -> .)
    ID              reduce using rule 95 (genera_sum_quad -> .)
    MUL             reduce using rule 95 (genera_sum_quad -> .)
    DIV             reduce using rule 95 (genera_sum_quad -> .)
    GT              reduce using rule 95 (genera_sum_quad -> .)
    LT              reduce using rule 95 (genera_sum_quad -> .)
    GTE             reduce using rule 95 (genera_sum_quad -> .)
    LTE             reduce using rule 95 (genera_sum_quad -> .)
    NE              reduce using rule 95 (genera_sum_quad -> .)
    COMPARE         reduce using rule 95 (genera_sum_quad -> .)
    AND             reduce using rule 95 (genera_sum_quad -> .)
    OR              reduce using rule 95 (genera_sum_quad -> .)
    RBRACKET        reduce using rule 95 (genera_sum_quad -> .)
    RPAREN          reduce using rule 95 (genera_sum_quad -> .)
    SEMICOLON       reduce using rule 95 (genera_sum_quad -> .)
    TO              reduce using rule 95 (genera_sum_quad -> .)
    COMMA           reduce using rule 95 (genera_sum_quad -> .)
    PLUS            reduce using rule 95 (genera_sum_quad -> .)
    MINUS           reduce using rule 95 (genera_sum_quad -> .)

    genera_sum_quad                shift and go to state 145

state 106

    (98) mulexp -> pexp MUL . saveOperator pexp
    (110) saveOperator -> .

    CTEI            reduce using rule 110 (saveOperator -> .)
    CTEF            reduce using rule 110 (saveOperator -> .)
    CTEC            reduce using rule 110 (saveOperator -> .)
    CTESTRING       reduce using rule 110 (saveOperator -> .)
    LPAREN          reduce using rule 110 (saveOperator -> .)
    ID              reduce using rule 110 (saveOperator -> .)
    PLUS            reduce using rule 110 (saveOperator -> .)
    MINUS           reduce using rule 110 (saveOperator -> .)
    GT              reduce using rule 110 (saveOperator -> .)
    LT              reduce using rule 110 (saveOperator -> .)
    GTE             reduce using rule 110 (saveOperator -> .)
    LTE             reduce using rule 110 (saveOperator -> .)
    NE              reduce using rule 110 (saveOperator -> .)
    COMPARE         reduce using rule 110 (saveOperator -> .)
    AND             reduce using rule 110 (saveOperator -> .)
    OR              reduce using rule 110 (saveOperator -> .)
    RBRACKET        reduce using rule 110 (saveOperator -> .)
    RPAREN          reduce using rule 110 (saveOperator -> .)
    SEMICOLON       reduce using rule 110 (saveOperator -> .)
    TO              reduce using rule 110 (saveOperator -> .)
    COMMA           reduce using rule 110 (saveOperator -> .)
    MUL             reduce using rule 110 (saveOperator -> .)
    DIV             reduce using rule 110 (saveOperator -> .)

    saveOperator                   shift and go to state 146

state 107

    (99) mulexp -> pexp DIV . saveOperator pexp
    (110) saveOperator -> .

    CTEI            reduce using rule 110 (saveOperator -> .)
    CTEF            reduce using rule 110 (saveOperator -> .)
    CTEC            reduce using rule 110 (saveOperator -> .)
    CTESTRING       reduce using rule 110 (saveOperator -> .)
    LPAREN          reduce using rule 110 (saveOperator -> .)
    ID              reduce using rule 110 (saveOperator -> .)
    PLUS            reduce using rule 110 (saveOperator -> .)
    MINUS           reduce using rule 110 (saveOperator -> .)
    GT              reduce using rule 110 (saveOperator -> .)
    LT              reduce using rule 110 (saveOperator -> .)
    GTE             reduce using rule 110 (saveOperator -> .)
    LTE             reduce using rule 110 (saveOperator -> .)
    NE              reduce using rule 110 (saveOperator -> .)
    COMPARE         reduce using rule 110 (saveOperator -> .)
    AND             reduce using rule 110 (saveOperator -> .)
    OR              reduce using rule 110 (saveOperator -> .)
    RBRACKET        reduce using rule 110 (saveOperator -> .)
    RPAREN          reduce using rule 110 (saveOperator -> .)
    SEMICOLON       reduce using rule 110 (saveOperator -> .)
    TO              reduce using rule 110 (saveOperator -> .)
    COMMA           reduce using rule 110 (saveOperator -> .)
    MUL             reduce using rule 110 (saveOperator -> .)
    DIV             reduce using rule 110 (saveOperator -> .)

    saveOperator                   shift and go to state 147

state 108

    (100) pexp -> var1 saveId .

    MUL             reduce using rule 100 (pexp -> var1 saveId .)
    DIV             reduce using rule 100 (pexp -> var1 saveId .)
    PLUS            reduce using rule 100 (pexp -> var1 saveId .)
    MINUS           reduce using rule 100 (pexp -> var1 saveId .)
    GT              reduce using rule 100 (pexp -> var1 saveId .)
    LT              reduce using rule 100 (pexp -> var1 saveId .)
    GTE             reduce using rule 100 (pexp -> var1 saveId .)
    LTE             reduce using rule 100 (pexp -> var1 saveId .)
    NE              reduce using rule 100 (pexp -> var1 saveId .)
    COMPARE         reduce using rule 100 (pexp -> var1 saveId .)
    AND             reduce using rule 100 (pexp -> var1 saveId .)
    OR              reduce using rule 100 (pexp -> var1 saveId .)
    RBRACKET        reduce using rule 100 (pexp -> var1 saveId .)
    RPAREN          reduce using rule 100 (pexp -> var1 saveId .)
    SEMICOLON       reduce using rule 100 (pexp -> var1 saveId .)
    TO              reduce using rule 100 (pexp -> var1 saveId .)
    COMMA           reduce using rule 100 (pexp -> var1 saveId .)
    CTEI            reduce using rule 100 (pexp -> var1 saveId .)
    CTEF            reduce using rule 100 (pexp -> var1 saveId .)
    CTEC            reduce using rule 100 (pexp -> var1 saveId .)
    CTESTRING       reduce using rule 100 (pexp -> var1 saveId .)
    LPAREN          reduce using rule 100 (pexp -> var1 saveId .)
    ID              reduce using rule 100 (pexp -> var1 saveId .)


state 109

    (102) pexp -> CTEF saveCTE .

    MUL             reduce using rule 102 (pexp -> CTEF saveCTE .)
    DIV             reduce using rule 102 (pexp -> CTEF saveCTE .)
    PLUS            reduce using rule 102 (pexp -> CTEF saveCTE .)
    MINUS           reduce using rule 102 (pexp -> CTEF saveCTE .)
    GT              reduce using rule 102 (pexp -> CTEF saveCTE .)
    LT              reduce using rule 102 (pexp -> CTEF saveCTE .)
    GTE             reduce using rule 102 (pexp -> CTEF saveCTE .)
    LTE             reduce using rule 102 (pexp -> CTEF saveCTE .)
    NE              reduce using rule 102 (pexp -> CTEF saveCTE .)
    COMPARE         reduce using rule 102 (pexp -> CTEF saveCTE .)
    AND             reduce using rule 102 (pexp -> CTEF saveCTE .)
    OR              reduce using rule 102 (pexp -> CTEF saveCTE .)
    RBRACKET        reduce using rule 102 (pexp -> CTEF saveCTE .)
    RPAREN          reduce using rule 102 (pexp -> CTEF saveCTE .)
    SEMICOLON       reduce using rule 102 (pexp -> CTEF saveCTE .)
    TO              reduce using rule 102 (pexp -> CTEF saveCTE .)
    COMMA           reduce using rule 102 (pexp -> CTEF saveCTE .)
    CTEI            reduce using rule 102 (pexp -> CTEF saveCTE .)
    CTEF            reduce using rule 102 (pexp -> CTEF saveCTE .)
    CTEC            reduce using rule 102 (pexp -> CTEF saveCTE .)
    CTESTRING       reduce using rule 102 (pexp -> CTEF saveCTE .)
    LPAREN          reduce using rule 102 (pexp -> CTEF saveCTE .)
    ID              reduce using rule 102 (pexp -> CTEF saveCTE .)


state 110

    (103) pexp -> CTEC saveCTE .

    MUL             reduce using rule 103 (pexp -> CTEC saveCTE .)
    DIV             reduce using rule 103 (pexp -> CTEC saveCTE .)
    PLUS            reduce using rule 103 (pexp -> CTEC saveCTE .)
    MINUS           reduce using rule 103 (pexp -> CTEC saveCTE .)
    GT              reduce using rule 103 (pexp -> CTEC saveCTE .)
    LT              reduce using rule 103 (pexp -> CTEC saveCTE .)
    GTE             reduce using rule 103 (pexp -> CTEC saveCTE .)
    LTE             reduce using rule 103 (pexp -> CTEC saveCTE .)
    NE              reduce using rule 103 (pexp -> CTEC saveCTE .)
    COMPARE         reduce using rule 103 (pexp -> CTEC saveCTE .)
    AND             reduce using rule 103 (pexp -> CTEC saveCTE .)
    OR              reduce using rule 103 (pexp -> CTEC saveCTE .)
    RBRACKET        reduce using rule 103 (pexp -> CTEC saveCTE .)
    RPAREN          reduce using rule 103 (pexp -> CTEC saveCTE .)
    SEMICOLON       reduce using rule 103 (pexp -> CTEC saveCTE .)
    TO              reduce using rule 103 (pexp -> CTEC saveCTE .)
    COMMA           reduce using rule 103 (pexp -> CTEC saveCTE .)
    CTEI            reduce using rule 103 (pexp -> CTEC saveCTE .)
    CTEF            reduce using rule 103 (pexp -> CTEC saveCTE .)
    CTEC            reduce using rule 103 (pexp -> CTEC saveCTE .)
    CTESTRING       reduce using rule 103 (pexp -> CTEC saveCTE .)
    LPAREN          reduce using rule 103 (pexp -> CTEC saveCTE .)
    ID              reduce using rule 103 (pexp -> CTEC saveCTE .)


state 111

    (104) pexp -> CTESTRING saveCTE .

    MUL             reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    DIV             reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    PLUS            reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    MINUS           reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    GT              reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    LT              reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    GTE             reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    LTE             reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    NE              reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    COMPARE         reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    AND             reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    OR              reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    RBRACKET        reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    RPAREN          reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    SEMICOLON       reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    TO              reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    COMMA           reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    CTEI            reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    CTEF            reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    CTEC            reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    CTESTRING       reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    LPAREN          reduce using rule 104 (pexp -> CTESTRING saveCTE .)
    ID              reduce using rule 104 (pexp -> CTESTRING saveCTE .)


state 112

    (106) pexp -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 148


state 113

    (62) llamada -> ID LPAREN . exp RPAREN
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)

    exp                            shift and go to state 149
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 114

    (7) main -> MAIN LPAREN param RPAREN LCURLY vars statement . RCURLY END

    RCURLY          shift and go to state 150


state 115

    (44) statement -> statement1 . statement
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (107) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (62) llamada -> . ID LPAREN exp RPAREN
    (77) lectura -> . READ LPAREN var1 RPAREN
    (70) escritura -> . PRINT LPAREN escritura1 RPAREN
    (67) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (64) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (69) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 107 (empty -> .)
    RETURN          reduce using rule 107 (empty -> .)
    ID              shift and go to state 124
    READ            shift and go to state 125
    PRINT           shift and go to state 126
    FOR             shift and go to state 127
    IF              shift and go to state 128
    WHILE           shift and go to state 129

    statement1                     shift and go to state 115
    statement                      shift and go to state 151
    empty                          shift and go to state 116
    asignacion                     shift and go to state 117
    llamada                        shift and go to state 118
    lectura                        shift and go to state 119
    escritura                      shift and go to state 120
    for                            shift and go to state 121
    if                             shift and go to state 122
    while                          shift and go to state 123

state 116

    (45) statement -> empty .

    RCURLY          reduce using rule 45 (statement -> empty .)
    RETURN          reduce using rule 45 (statement -> empty .)


state 117

    (46) statement1 -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 152


state 118

    (47) statement1 -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 153


state 119

    (48) statement1 -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 154


state 120

    (49) statement1 -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 155


state 121

    (50) statement1 -> for .

    ID              reduce using rule 50 (statement1 -> for .)
    READ            reduce using rule 50 (statement1 -> for .)
    PRINT           reduce using rule 50 (statement1 -> for .)
    FOR             reduce using rule 50 (statement1 -> for .)
    IF              reduce using rule 50 (statement1 -> for .)
    WHILE           reduce using rule 50 (statement1 -> for .)
    RCURLY          reduce using rule 50 (statement1 -> for .)
    RETURN          reduce using rule 50 (statement1 -> for .)


state 122

    (51) statement1 -> if .

    ID              reduce using rule 51 (statement1 -> if .)
    READ            reduce using rule 51 (statement1 -> if .)
    PRINT           reduce using rule 51 (statement1 -> if .)
    FOR             reduce using rule 51 (statement1 -> if .)
    IF              reduce using rule 51 (statement1 -> if .)
    WHILE           reduce using rule 51 (statement1 -> if .)
    RCURLY          reduce using rule 51 (statement1 -> if .)
    RETURN          reduce using rule 51 (statement1 -> if .)


state 123

    (52) statement1 -> while .

    ID              reduce using rule 52 (statement1 -> while .)
    READ            reduce using rule 52 (statement1 -> while .)
    PRINT           reduce using rule 52 (statement1 -> while .)
    FOR             reduce using rule 52 (statement1 -> while .)
    IF              reduce using rule 52 (statement1 -> while .)
    WHILE           reduce using rule 52 (statement1 -> while .)
    RCURLY          reduce using rule 52 (statement1 -> while .)
    RETURN          reduce using rule 52 (statement1 -> while .)


state 124

    (53) asignacion -> ID . EQUALS exp
    (54) asignacion -> ID . arr EQUALS exp
    (55) asignacion -> ID . mat EQUALS exp
    (62) llamada -> ID . LPAREN exp RPAREN
    (29) arr -> . LBRACKET CTEI RBRACKET
    (30) arr -> . LBRACKET exp RBRACKET
    (31) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

    EQUALS          shift and go to state 156
    LPAREN          shift and go to state 113
    LBRACKET        shift and go to state 56

    arr                            shift and go to state 157
    mat                            shift and go to state 158

state 125

    (77) lectura -> READ . LPAREN var1 RPAREN

    LPAREN          shift and go to state 159


state 126

    (70) escritura -> PRINT . LPAREN escritura1 RPAREN

    LPAREN          shift and go to state 160


state 127

    (67) for -> FOR . LPAREN for1 RPAREN LCURLY statement RCURLY

    LPAREN          shift and go to state 161


state 128

    (63) if -> IF . LPAREN exp RPAREN LCURLY statement RCURLY
    (64) if -> IF . LPAREN exp RPAREN LCURLY statement RCURLY else

    LPAREN          shift and go to state 162


state 129

    (69) while -> WHILE . LPAREN exp RPAREN LCURLY statement RCURLY

    LPAREN          shift and go to state 163


state 130

    (42) function1 -> ID save_fun LPAREN param RPAREN . SEMICOLON LCURLY vars statement RCURLY

    SEMICOLON       shift and go to state 164


state 131

    (43) function2 -> ID save_fun LPAREN param RPAREN . SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY

    SEMICOLON       shift and go to state 165


state 132

    (18) var1 -> ID arr COMMA var1 addV .

    SEMICOLON       reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    MUL             reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    DIV             reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    PLUS            reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    MINUS           reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    GT              reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    LT              reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    GTE             reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    LTE             reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    NE              reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    COMPARE         reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    AND             reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    OR              reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    RBRACKET        reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    RPAREN          reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    TO              reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    COMMA           reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    CTEI            reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    CTEF            reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    CTEC            reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    CTESTRING       reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    LPAREN          reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)
    ID              reduce using rule 18 (var1 -> ID arr COMMA var1 addV .)


state 133

    (19) var1 -> ID mat COMMA var1 addV .

    SEMICOLON       reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    MUL             reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    DIV             reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    PLUS            reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    MINUS           reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    GT              reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    LT              reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    GTE             reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    LTE             reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    NE              reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    COMPARE         reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    AND             reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    OR              reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    RBRACKET        reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    RPAREN          reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    TO              reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    COMMA           reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    CTEI            reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    CTEF            reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    CTEC            reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    CTESTRING       reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    LPAREN          reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)
    ID              reduce using rule 19 (var1 -> ID mat COMMA var1 addV .)


state 134

    (31) mat -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET
    (34) mat -> LBRACKET CTEI RBRACKET LBRACKET . exp RBRACKET
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 166
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)

    exp                            shift and go to state 167
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 135

    (32) mat -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (33) mat -> LBRACKET exp RBRACKET LBRACKET . CTEI RBRACKET
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 169
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)

    exp                            shift and go to state 168
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 136

    (79) exp -> nexp OR saveOperator . nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

    nexp                           shift and go to state 170
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 137

    (83) nexp -> compexp AND saveOperator . compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

    compexp                        shift and go to state 171
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 138

    (86) compexp1 -> sumexp GT saveOperator . sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

  ! CTEI            [ reduce using rule 107 (empty -> .) ]
  ! CTEF            [ reduce using rule 107 (empty -> .) ]
  ! CTEC            [ reduce using rule 107 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 107 (empty -> .) ]
  ! LPAREN          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]

    sumexp                         shift and go to state 172
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 139

    (87) compexp1 -> sumexp LT saveOperator . sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

  ! CTEI            [ reduce using rule 107 (empty -> .) ]
  ! CTEF            [ reduce using rule 107 (empty -> .) ]
  ! CTEC            [ reduce using rule 107 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 107 (empty -> .) ]
  ! LPAREN          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]

    sumexp                         shift and go to state 173
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 140

    (88) compexp1 -> sumexp GTE saveOperator . sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

  ! CTEI            [ reduce using rule 107 (empty -> .) ]
  ! CTEF            [ reduce using rule 107 (empty -> .) ]
  ! CTEC            [ reduce using rule 107 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 107 (empty -> .) ]
  ! LPAREN          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]

    sumexp                         shift and go to state 174
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 141

    (89) compexp1 -> sumexp LTE saveOperator . sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

  ! CTEI            [ reduce using rule 107 (empty -> .) ]
  ! CTEF            [ reduce using rule 107 (empty -> .) ]
  ! CTEC            [ reduce using rule 107 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 107 (empty -> .) ]
  ! LPAREN          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]

    sumexp                         shift and go to state 175
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 142

    (90) compexp1 -> sumexp NE saveOperator . sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

  ! CTEI            [ reduce using rule 107 (empty -> .) ]
  ! CTEF            [ reduce using rule 107 (empty -> .) ]
  ! CTEC            [ reduce using rule 107 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 107 (empty -> .) ]
  ! LPAREN          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]

    sumexp                         shift and go to state 176
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 143

    (91) compexp1 -> sumexp COMPARE saveOperator . sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

  ! CTEI            [ reduce using rule 107 (empty -> .) ]
  ! CTEF            [ reduce using rule 107 (empty -> .) ]
  ! CTEC            [ reduce using rule 107 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 107 (empty -> .) ]
  ! LPAREN          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]

    sumexp                         shift and go to state 177
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 144

    (93) sumexp -> mulexp PLUS genera_sum_quad . saveOperator mulexp
    (110) saveOperator -> .

    CTEI            reduce using rule 110 (saveOperator -> .)
    CTEF            reduce using rule 110 (saveOperator -> .)
    CTEC            reduce using rule 110 (saveOperator -> .)
    CTESTRING       reduce using rule 110 (saveOperator -> .)
    LPAREN          reduce using rule 110 (saveOperator -> .)
    ID              reduce using rule 110 (saveOperator -> .)
    MUL             reduce using rule 110 (saveOperator -> .)
    DIV             reduce using rule 110 (saveOperator -> .)
    GT              reduce using rule 110 (saveOperator -> .)
    LT              reduce using rule 110 (saveOperator -> .)
    GTE             reduce using rule 110 (saveOperator -> .)
    LTE             reduce using rule 110 (saveOperator -> .)
    NE              reduce using rule 110 (saveOperator -> .)
    COMPARE         reduce using rule 110 (saveOperator -> .)
    AND             reduce using rule 110 (saveOperator -> .)
    OR              reduce using rule 110 (saveOperator -> .)
    RBRACKET        reduce using rule 110 (saveOperator -> .)
    RPAREN          reduce using rule 110 (saveOperator -> .)
    SEMICOLON       reduce using rule 110 (saveOperator -> .)
    TO              reduce using rule 110 (saveOperator -> .)
    COMMA           reduce using rule 110 (saveOperator -> .)
    PLUS            reduce using rule 110 (saveOperator -> .)
    MINUS           reduce using rule 110 (saveOperator -> .)

    saveOperator                   shift and go to state 178

state 145

    (94) sumexp -> mulexp MINUS genera_sum_quad . saveOperator mulexp
    (110) saveOperator -> .

    CTEI            reduce using rule 110 (saveOperator -> .)
    CTEF            reduce using rule 110 (saveOperator -> .)
    CTEC            reduce using rule 110 (saveOperator -> .)
    CTESTRING       reduce using rule 110 (saveOperator -> .)
    LPAREN          reduce using rule 110 (saveOperator -> .)
    ID              reduce using rule 110 (saveOperator -> .)
    MUL             reduce using rule 110 (saveOperator -> .)
    DIV             reduce using rule 110 (saveOperator -> .)
    GT              reduce using rule 110 (saveOperator -> .)
    LT              reduce using rule 110 (saveOperator -> .)
    GTE             reduce using rule 110 (saveOperator -> .)
    LTE             reduce using rule 110 (saveOperator -> .)
    NE              reduce using rule 110 (saveOperator -> .)
    COMPARE         reduce using rule 110 (saveOperator -> .)
    AND             reduce using rule 110 (saveOperator -> .)
    OR              reduce using rule 110 (saveOperator -> .)
    RBRACKET        reduce using rule 110 (saveOperator -> .)
    RPAREN          reduce using rule 110 (saveOperator -> .)
    SEMICOLON       reduce using rule 110 (saveOperator -> .)
    TO              reduce using rule 110 (saveOperator -> .)
    COMMA           reduce using rule 110 (saveOperator -> .)
    PLUS            reduce using rule 110 (saveOperator -> .)
    MINUS           reduce using rule 110 (saveOperator -> .)

    saveOperator                   shift and go to state 179

state 146

    (98) mulexp -> pexp MUL saveOperator . pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)

  ! CTEI            [ reduce using rule 107 (empty -> .) ]
  ! CTEF            [ reduce using rule 107 (empty -> .) ]
  ! CTEC            [ reduce using rule 107 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 107 (empty -> .) ]
  ! LPAREN          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]

    pexp                           shift and go to state 180
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 147

    (99) mulexp -> pexp DIV saveOperator . pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)

  ! CTEI            [ reduce using rule 107 (empty -> .) ]
  ! CTEF            [ reduce using rule 107 (empty -> .) ]
  ! CTEC            [ reduce using rule 107 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 107 (empty -> .) ]
  ! LPAREN          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]

    pexp                           shift and go to state 181
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 148

    (106) pexp -> LPAREN exp RPAREN .

    MUL             reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    DIV             reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    GT              reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    LT              reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    GTE             reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    LTE             reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    NE              reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    COMPARE         reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    AND             reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    OR              reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    TO              reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    CTEI            reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    CTEF            reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    CTEC            reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    CTESTRING       reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    LPAREN          reduce using rule 106 (pexp -> LPAREN exp RPAREN .)
    ID              reduce using rule 106 (pexp -> LPAREN exp RPAREN .)


state 149

    (62) llamada -> ID LPAREN exp . RPAREN

    RPAREN          shift and go to state 182


state 150

    (7) main -> MAIN LPAREN param RPAREN LCURLY vars statement RCURLY . END

    END             shift and go to state 183


state 151

    (44) statement -> statement1 statement .

    RCURLY          reduce using rule 44 (statement -> statement1 statement .)
    RETURN          reduce using rule 44 (statement -> statement1 statement .)


state 152

    (46) statement1 -> asignacion SEMICOLON .

    ID              reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    READ            reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    PRINT           reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    FOR             reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    IF              reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    WHILE           reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    RCURLY          reduce using rule 46 (statement1 -> asignacion SEMICOLON .)
    RETURN          reduce using rule 46 (statement1 -> asignacion SEMICOLON .)


state 153

    (47) statement1 -> llamada SEMICOLON .

    ID              reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    READ            reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    PRINT           reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    FOR             reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    IF              reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    WHILE           reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    RCURLY          reduce using rule 47 (statement1 -> llamada SEMICOLON .)
    RETURN          reduce using rule 47 (statement1 -> llamada SEMICOLON .)


state 154

    (48) statement1 -> lectura SEMICOLON .

    ID              reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    READ            reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    PRINT           reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    FOR             reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    IF              reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    WHILE           reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    RCURLY          reduce using rule 48 (statement1 -> lectura SEMICOLON .)
    RETURN          reduce using rule 48 (statement1 -> lectura SEMICOLON .)


state 155

    (49) statement1 -> escritura SEMICOLON .

    ID              reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    READ            reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    PRINT           reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    FOR             reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    IF              reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    WHILE           reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    RCURLY          reduce using rule 49 (statement1 -> escritura SEMICOLON .)
    RETURN          reduce using rule 49 (statement1 -> escritura SEMICOLON .)


state 156

    (53) asignacion -> ID EQUALS . exp
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)

    exp                            shift and go to state 184
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 157

    (54) asignacion -> ID arr . EQUALS exp

    EQUALS          shift and go to state 185


state 158

    (55) asignacion -> ID mat . EQUALS exp

    EQUALS          shift and go to state 186


state 159

    (77) lectura -> READ LPAREN . var1 RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (107) empty -> .

    ID              shift and go to state 41
    RPAREN          reduce using rule 107 (empty -> .)

    var1                           shift and go to state 187
    empty                          shift and go to state 42

state 160

    (70) escritura -> PRINT LPAREN . escritura1 RPAREN
    (71) escritura1 -> . escritura2 COMMA escritura2
    (72) escritura1 -> . escritura2
    (73) escritura2 -> . COMILLA CTESTRING COMILLA
    (74) escritura2 -> . CTEI saveCTE
    (75) escritura2 -> . CTEF saveCTE
    (76) escritura2 -> . exp
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    COMILLA         shift and go to state 190
    CTEI            shift and go to state 191
    CTEF            shift and go to state 192
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)

    escritura1                     shift and go to state 188
    escritura2                     shift and go to state 189
    exp                            shift and go to state 193
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 161

    (67) for -> FOR LPAREN . for1 RPAREN LCURLY statement RCURLY
    (68) for1 -> . FROM asignacion TO exp

    FROM            shift and go to state 195

    for1                           shift and go to state 194

state 162

    (63) if -> IF LPAREN . exp RPAREN LCURLY statement RCURLY
    (64) if -> IF LPAREN . exp RPAREN LCURLY statement RCURLY else
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)

    exp                            shift and go to state 196
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 163

    (69) while -> WHILE LPAREN . exp RPAREN LCURLY statement RCURLY
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)

    exp                            shift and go to state 197
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 164

    (42) function1 -> ID save_fun LPAREN param RPAREN SEMICOLON . LCURLY vars statement RCURLY

    LCURLY          shift and go to state 198


state 165

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON . LCURLY vars statement RETURN exp SEMICOLON RCURLY

    LCURLY          shift and go to state 199


state 166

    (31) mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET
    (101) pexp -> CTEI . saveCTE
    (109) saveCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 200
    MUL             reduce using rule 109 (saveCTE -> .)
    DIV             reduce using rule 109 (saveCTE -> .)
    PLUS            reduce using rule 109 (saveCTE -> .)
    MINUS           reduce using rule 109 (saveCTE -> .)
    GT              reduce using rule 109 (saveCTE -> .)
    LT              reduce using rule 109 (saveCTE -> .)
    GTE             reduce using rule 109 (saveCTE -> .)
    LTE             reduce using rule 109 (saveCTE -> .)
    NE              reduce using rule 109 (saveCTE -> .)
    COMPARE         reduce using rule 109 (saveCTE -> .)
    AND             reduce using rule 109 (saveCTE -> .)
    OR              reduce using rule 109 (saveCTE -> .)

  ! RBRACKET        [ reduce using rule 109 (saveCTE -> .) ]

    saveCTE                        shift and go to state 92

state 167

    (34) mat -> LBRACKET CTEI RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 201


state 168

    (32) mat -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 202


state 169

    (33) mat -> LBRACKET exp RBRACKET LBRACKET CTEI . RBRACKET
    (101) pexp -> CTEI . saveCTE
    (109) saveCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 203
    MUL             reduce using rule 109 (saveCTE -> .)
    DIV             reduce using rule 109 (saveCTE -> .)
    PLUS            reduce using rule 109 (saveCTE -> .)
    MINUS           reduce using rule 109 (saveCTE -> .)
    GT              reduce using rule 109 (saveCTE -> .)
    LT              reduce using rule 109 (saveCTE -> .)
    GTE             reduce using rule 109 (saveCTE -> .)
    LTE             reduce using rule 109 (saveCTE -> .)
    NE              reduce using rule 109 (saveCTE -> .)
    COMPARE         reduce using rule 109 (saveCTE -> .)
    AND             reduce using rule 109 (saveCTE -> .)
    OR              reduce using rule 109 (saveCTE -> .)

  ! RBRACKET        [ reduce using rule 109 (saveCTE -> .) ]

    saveCTE                        shift and go to state 92

state 170

    (79) exp -> nexp OR saveOperator nexp .

    RBRACKET        reduce using rule 79 (exp -> nexp OR saveOperator nexp .)
    RPAREN          reduce using rule 79 (exp -> nexp OR saveOperator nexp .)
    SEMICOLON       reduce using rule 79 (exp -> nexp OR saveOperator nexp .)
    TO              reduce using rule 79 (exp -> nexp OR saveOperator nexp .)
    COMMA           reduce using rule 79 (exp -> nexp OR saveOperator nexp .)


state 171

    (83) nexp -> compexp AND saveOperator compexp .

    OR              reduce using rule 83 (nexp -> compexp AND saveOperator compexp .)
    RBRACKET        reduce using rule 83 (nexp -> compexp AND saveOperator compexp .)
    RPAREN          reduce using rule 83 (nexp -> compexp AND saveOperator compexp .)
    SEMICOLON       reduce using rule 83 (nexp -> compexp AND saveOperator compexp .)
    TO              reduce using rule 83 (nexp -> compexp AND saveOperator compexp .)
    COMMA           reduce using rule 83 (nexp -> compexp AND saveOperator compexp .)


state 172

    (86) compexp1 -> sumexp GT saveOperator sumexp .

    CTEI            reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    CTEF            reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    CTEC            reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    CTESTRING       reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    LPAREN          reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    ID              reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    PLUS            reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    MINUS           reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    MUL             reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    DIV             reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    AND             reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    OR              reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    RBRACKET        reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    RPAREN          reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    SEMICOLON       reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    TO              reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)
    COMMA           reduce using rule 86 (compexp1 -> sumexp GT saveOperator sumexp .)


state 173

    (87) compexp1 -> sumexp LT saveOperator sumexp .

    CTEI            reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    CTEF            reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    CTEC            reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    CTESTRING       reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    LPAREN          reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    ID              reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    PLUS            reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    MINUS           reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    MUL             reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    DIV             reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    AND             reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    OR              reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    RBRACKET        reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    RPAREN          reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    SEMICOLON       reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    TO              reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)
    COMMA           reduce using rule 87 (compexp1 -> sumexp LT saveOperator sumexp .)


state 174

    (88) compexp1 -> sumexp GTE saveOperator sumexp .

    CTEI            reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    CTEF            reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    CTEC            reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    CTESTRING       reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    LPAREN          reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    ID              reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    PLUS            reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    MINUS           reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    MUL             reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    DIV             reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    AND             reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    OR              reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    RBRACKET        reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    RPAREN          reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    SEMICOLON       reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    TO              reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)
    COMMA           reduce using rule 88 (compexp1 -> sumexp GTE saveOperator sumexp .)


state 175

    (89) compexp1 -> sumexp LTE saveOperator sumexp .

    CTEI            reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    CTEF            reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    CTEC            reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    CTESTRING       reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    LPAREN          reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    ID              reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    PLUS            reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    MINUS           reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    MUL             reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    DIV             reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    AND             reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    OR              reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    RBRACKET        reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    RPAREN          reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    SEMICOLON       reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    TO              reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)
    COMMA           reduce using rule 89 (compexp1 -> sumexp LTE saveOperator sumexp .)


state 176

    (90) compexp1 -> sumexp NE saveOperator sumexp .

    CTEI            reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    CTEF            reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    CTEC            reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    CTESTRING       reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    LPAREN          reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    ID              reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    PLUS            reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    MINUS           reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    MUL             reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    DIV             reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    AND             reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    OR              reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    RBRACKET        reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    RPAREN          reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    SEMICOLON       reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    TO              reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)
    COMMA           reduce using rule 90 (compexp1 -> sumexp NE saveOperator sumexp .)


state 177

    (91) compexp1 -> sumexp COMPARE saveOperator sumexp .

    CTEI            reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    CTEF            reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    CTEC            reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    CTESTRING       reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    LPAREN          reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    ID              reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    PLUS            reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    MINUS           reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    MUL             reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    DIV             reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    AND             reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    OR              reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    RBRACKET        reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    RPAREN          reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    SEMICOLON       reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    TO              reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)
    COMMA           reduce using rule 91 (compexp1 -> sumexp COMPARE saveOperator sumexp .)


state 178

    (93) sumexp -> mulexp PLUS genera_sum_quad saveOperator . mulexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)

  ! CTEI            [ reduce using rule 107 (empty -> .) ]
  ! CTEF            [ reduce using rule 107 (empty -> .) ]
  ! CTEC            [ reduce using rule 107 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 107 (empty -> .) ]
  ! LPAREN          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]

    mulexp                         shift and go to state 204
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 179

    (94) sumexp -> mulexp MINUS genera_sum_quad saveOperator . mulexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)

  ! CTEI            [ reduce using rule 107 (empty -> .) ]
  ! CTEF            [ reduce using rule 107 (empty -> .) ]
  ! CTEC            [ reduce using rule 107 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 107 (empty -> .) ]
  ! LPAREN          [ reduce using rule 107 (empty -> .) ]
  ! ID              [ reduce using rule 107 (empty -> .) ]

    mulexp                         shift and go to state 205
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 180

    (98) mulexp -> pexp MUL saveOperator pexp .

    PLUS            reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    MINUS           reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    GT              reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    LT              reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    GTE             reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    LTE             reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    NE              reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    COMPARE         reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    AND             reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    OR              reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    RBRACKET        reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    RPAREN          reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    SEMICOLON       reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    TO              reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    COMMA           reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    CTEI            reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    CTEF            reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    CTEC            reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    CTESTRING       reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    LPAREN          reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    ID              reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    MUL             reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)
    DIV             reduce using rule 98 (mulexp -> pexp MUL saveOperator pexp .)


state 181

    (99) mulexp -> pexp DIV saveOperator pexp .

    PLUS            reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    MINUS           reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    GT              reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    LT              reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    GTE             reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    LTE             reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    NE              reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    COMPARE         reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    AND             reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    OR              reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    RBRACKET        reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    RPAREN          reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    SEMICOLON       reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    TO              reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    COMMA           reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    CTEI            reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    CTEF            reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    CTEC            reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    CTESTRING       reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    LPAREN          reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    ID              reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    MUL             reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)
    DIV             reduce using rule 99 (mulexp -> pexp DIV saveOperator pexp .)


state 182

    (62) llamada -> ID LPAREN exp RPAREN .

    MUL             reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    DIV             reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    PLUS            reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    MINUS           reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    GT              reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    LT              reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    GTE             reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    LTE             reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    NE              reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    COMPARE         reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    AND             reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    OR              reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    RPAREN          reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    TO              reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    COMMA           reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    CTEI            reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    CTEF            reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    CTEC            reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    CTESTRING       reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    LPAREN          reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)
    ID              reduce using rule 62 (llamada -> ID LPAREN exp RPAREN .)


state 183

    (7) main -> MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END .

    $end            reduce using rule 7 (main -> MAIN LPAREN param RPAREN LCURLY vars statement RCURLY END .)


state 184

    (53) asignacion -> ID EQUALS exp .

    SEMICOLON       reduce using rule 53 (asignacion -> ID EQUALS exp .)
    TO              reduce using rule 53 (asignacion -> ID EQUALS exp .)


state 185

    (54) asignacion -> ID arr EQUALS . exp
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)

    exp                            shift and go to state 206
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 186

    (55) asignacion -> ID mat EQUALS . exp
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    TO              reduce using rule 107 (empty -> .)

    exp                            shift and go to state 207
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 187

    (77) lectura -> READ LPAREN var1 . RPAREN

    RPAREN          shift and go to state 208


state 188

    (70) escritura -> PRINT LPAREN escritura1 . RPAREN

    RPAREN          shift and go to state 209


state 189

    (71) escritura1 -> escritura2 . COMMA escritura2
    (72) escritura1 -> escritura2 .

    COMMA           shift and go to state 210
    RPAREN          reduce using rule 72 (escritura1 -> escritura2 .)


state 190

    (73) escritura2 -> COMILLA . CTESTRING COMILLA

    CTESTRING       shift and go to state 211


state 191

    (74) escritura2 -> CTEI . saveCTE
    (101) pexp -> CTEI . saveCTE
    (109) saveCTE -> .

    COMMA           reduce using rule 109 (saveCTE -> .)
    RPAREN          reduce using rule 109 (saveCTE -> .)
    MUL             reduce using rule 109 (saveCTE -> .)
    DIV             reduce using rule 109 (saveCTE -> .)
    PLUS            reduce using rule 109 (saveCTE -> .)
    MINUS           reduce using rule 109 (saveCTE -> .)
    GT              reduce using rule 109 (saveCTE -> .)
    LT              reduce using rule 109 (saveCTE -> .)
    GTE             reduce using rule 109 (saveCTE -> .)
    LTE             reduce using rule 109 (saveCTE -> .)
    NE              reduce using rule 109 (saveCTE -> .)
    COMPARE         reduce using rule 109 (saveCTE -> .)
    AND             reduce using rule 109 (saveCTE -> .)
    OR              reduce using rule 109 (saveCTE -> .)

    saveCTE                        shift and go to state 212

state 192

    (75) escritura2 -> CTEF . saveCTE
    (102) pexp -> CTEF . saveCTE
    (109) saveCTE -> .

    COMMA           reduce using rule 109 (saveCTE -> .)
    RPAREN          reduce using rule 109 (saveCTE -> .)
    MUL             reduce using rule 109 (saveCTE -> .)
    DIV             reduce using rule 109 (saveCTE -> .)
    PLUS            reduce using rule 109 (saveCTE -> .)
    MINUS           reduce using rule 109 (saveCTE -> .)
    GT              reduce using rule 109 (saveCTE -> .)
    LT              reduce using rule 109 (saveCTE -> .)
    GTE             reduce using rule 109 (saveCTE -> .)
    LTE             reduce using rule 109 (saveCTE -> .)
    NE              reduce using rule 109 (saveCTE -> .)
    COMPARE         reduce using rule 109 (saveCTE -> .)
    AND             reduce using rule 109 (saveCTE -> .)
    OR              reduce using rule 109 (saveCTE -> .)

    saveCTE                        shift and go to state 213

state 193

    (76) escritura2 -> exp .

    COMMA           reduce using rule 76 (escritura2 -> exp .)
    RPAREN          reduce using rule 76 (escritura2 -> exp .)


state 194

    (67) for -> FOR LPAREN for1 . RPAREN LCURLY statement RCURLY

    RPAREN          shift and go to state 214


state 195

    (68) for1 -> FROM . asignacion TO exp
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp

    ID              shift and go to state 216

    asignacion                     shift and go to state 215

state 196

    (63) if -> IF LPAREN exp . RPAREN LCURLY statement RCURLY
    (64) if -> IF LPAREN exp . RPAREN LCURLY statement RCURLY else

    RPAREN          shift and go to state 217


state 197

    (69) while -> WHILE LPAREN exp . RPAREN LCURLY statement RCURLY

    RPAREN          shift and go to state 218


state 198

    (42) function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY . vars statement RCURLY
    (12) vars -> . var
    (13) vars -> . empty
    (14) var -> . VAR var2
    (107) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 107 (empty -> .)
    READ            reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    FOR             reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    RCURLY          reduce using rule 107 (empty -> .)

    vars                           shift and go to state 219
    var                            shift and go to state 9
    empty                          shift and go to state 10

state 199

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY . vars statement RETURN exp SEMICOLON RCURLY
    (12) vars -> . var
    (13) vars -> . empty
    (14) var -> . VAR var2
    (107) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 107 (empty -> .)
    READ            reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    FOR             reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    RETURN          reduce using rule 107 (empty -> .)

    vars                           shift and go to state 220
    var                            shift and go to state 9
    empty                          shift and go to state 10

state 200

    (31) mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    TRANSPUESTA     reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    INVERSA         reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    DETERMINANTE    reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTEI            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTEF            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTEC            reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTESTRING       reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    ID              reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 31 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 201

    (34) mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .

    COMMA           reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    TRANSPUESTA     reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    INVERSA         reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    DETERMINANTE    reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    MUL             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    DIV             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    GTE             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LTE             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    TO              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTEI            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTEF            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTEC            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTESTRING       reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LPAREN          reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    ID              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)


state 202

    (32) mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    COMMA           reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TRANSPUESTA     reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    INVERSA         reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DETERMINANTE    reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MUL             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIV             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GTE             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LTE             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TO              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTEI            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTEF            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTEC            reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTESTRING       reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LPAREN          reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    ID              reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 32 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 203

    (33) mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    TRANSPUESTA     reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    INVERSA         reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    DETERMINANTE    reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTEI            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTEF            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTEC            reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTESTRING       reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    ID              reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 33 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)


state 204

    (93) sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .

    GT              reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    LT              reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    GTE             reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    LTE             reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    NE              reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    COMPARE         reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    AND             reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    OR              reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    RBRACKET        reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    RPAREN          reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    SEMICOLON       reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    TO              reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    COMMA           reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    CTEI            reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    CTEF            reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    CTEC            reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    CTESTRING       reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    LPAREN          reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    ID              reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    PLUS            reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    MINUS           reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    MUL             reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)
    DIV             reduce using rule 93 (sumexp -> mulexp PLUS genera_sum_quad saveOperator mulexp .)


state 205

    (94) sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .

    GT              reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    LT              reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    GTE             reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    LTE             reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    NE              reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    COMPARE         reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    AND             reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    OR              reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    RBRACKET        reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    RPAREN          reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    SEMICOLON       reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    TO              reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    COMMA           reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    CTEI            reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    CTEF            reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    CTEC            reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    CTESTRING       reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    LPAREN          reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    ID              reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    PLUS            reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    MINUS           reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    MUL             reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)
    DIV             reduce using rule 94 (sumexp -> mulexp MINUS genera_sum_quad saveOperator mulexp .)


state 206

    (54) asignacion -> ID arr EQUALS exp .

    SEMICOLON       reduce using rule 54 (asignacion -> ID arr EQUALS exp .)
    TO              reduce using rule 54 (asignacion -> ID arr EQUALS exp .)


state 207

    (55) asignacion -> ID mat EQUALS exp .

    SEMICOLON       reduce using rule 55 (asignacion -> ID mat EQUALS exp .)
    TO              reduce using rule 55 (asignacion -> ID mat EQUALS exp .)


state 208

    (77) lectura -> READ LPAREN var1 RPAREN .

    SEMICOLON       reduce using rule 77 (lectura -> READ LPAREN var1 RPAREN .)


state 209

    (70) escritura -> PRINT LPAREN escritura1 RPAREN .

    SEMICOLON       reduce using rule 70 (escritura -> PRINT LPAREN escritura1 RPAREN .)


state 210

    (71) escritura1 -> escritura2 COMMA . escritura2
    (73) escritura2 -> . COMILLA CTESTRING COMILLA
    (74) escritura2 -> . CTEI saveCTE
    (75) escritura2 -> . CTEF saveCTE
    (76) escritura2 -> . exp
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    COMILLA         shift and go to state 190
    CTEI            shift and go to state 191
    CTEF            shift and go to state 192
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)

    escritura2                     shift and go to state 221
    exp                            shift and go to state 193
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 211

    (73) escritura2 -> COMILLA CTESTRING . COMILLA

    COMILLA         shift and go to state 222


state 212

    (74) escritura2 -> CTEI saveCTE .
    (101) pexp -> CTEI saveCTE .

  ! reduce/reduce conflict for COMMA resolved using rule 74 (escritura2 -> CTEI saveCTE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 74 (escritura2 -> CTEI saveCTE .)
    COMMA           reduce using rule 74 (escritura2 -> CTEI saveCTE .)
    RPAREN          reduce using rule 74 (escritura2 -> CTEI saveCTE .)
    MUL             reduce using rule 101 (pexp -> CTEI saveCTE .)
    DIV             reduce using rule 101 (pexp -> CTEI saveCTE .)
    PLUS            reduce using rule 101 (pexp -> CTEI saveCTE .)
    MINUS           reduce using rule 101 (pexp -> CTEI saveCTE .)
    GT              reduce using rule 101 (pexp -> CTEI saveCTE .)
    LT              reduce using rule 101 (pexp -> CTEI saveCTE .)
    GTE             reduce using rule 101 (pexp -> CTEI saveCTE .)
    LTE             reduce using rule 101 (pexp -> CTEI saveCTE .)
    NE              reduce using rule 101 (pexp -> CTEI saveCTE .)
    COMPARE         reduce using rule 101 (pexp -> CTEI saveCTE .)
    AND             reduce using rule 101 (pexp -> CTEI saveCTE .)
    OR              reduce using rule 101 (pexp -> CTEI saveCTE .)

  ! COMMA           [ reduce using rule 101 (pexp -> CTEI saveCTE .) ]
  ! RPAREN          [ reduce using rule 101 (pexp -> CTEI saveCTE .) ]


state 213

    (75) escritura2 -> CTEF saveCTE .
    (102) pexp -> CTEF saveCTE .

  ! reduce/reduce conflict for COMMA resolved using rule 75 (escritura2 -> CTEF saveCTE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 75 (escritura2 -> CTEF saveCTE .)
    COMMA           reduce using rule 75 (escritura2 -> CTEF saveCTE .)
    RPAREN          reduce using rule 75 (escritura2 -> CTEF saveCTE .)
    MUL             reduce using rule 102 (pexp -> CTEF saveCTE .)
    DIV             reduce using rule 102 (pexp -> CTEF saveCTE .)
    PLUS            reduce using rule 102 (pexp -> CTEF saveCTE .)
    MINUS           reduce using rule 102 (pexp -> CTEF saveCTE .)
    GT              reduce using rule 102 (pexp -> CTEF saveCTE .)
    LT              reduce using rule 102 (pexp -> CTEF saveCTE .)
    GTE             reduce using rule 102 (pexp -> CTEF saveCTE .)
    LTE             reduce using rule 102 (pexp -> CTEF saveCTE .)
    NE              reduce using rule 102 (pexp -> CTEF saveCTE .)
    COMPARE         reduce using rule 102 (pexp -> CTEF saveCTE .)
    AND             reduce using rule 102 (pexp -> CTEF saveCTE .)
    OR              reduce using rule 102 (pexp -> CTEF saveCTE .)

  ! COMMA           [ reduce using rule 102 (pexp -> CTEF saveCTE .) ]
  ! RPAREN          [ reduce using rule 102 (pexp -> CTEF saveCTE .) ]


state 214

    (67) for -> FOR LPAREN for1 RPAREN . LCURLY statement RCURLY

    LCURLY          shift and go to state 223


state 215

    (68) for1 -> FROM asignacion . TO exp

    TO              shift and go to state 224


state 216

    (53) asignacion -> ID . EQUALS exp
    (54) asignacion -> ID . arr EQUALS exp
    (55) asignacion -> ID . mat EQUALS exp
    (29) arr -> . LBRACKET CTEI RBRACKET
    (30) arr -> . LBRACKET exp RBRACKET
    (31) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (32) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

    EQUALS          shift and go to state 156
    LBRACKET        shift and go to state 56

    arr                            shift and go to state 157
    mat                            shift and go to state 158

state 217

    (63) if -> IF LPAREN exp RPAREN . LCURLY statement RCURLY
    (64) if -> IF LPAREN exp RPAREN . LCURLY statement RCURLY else

    LCURLY          shift and go to state 225


state 218

    (69) while -> WHILE LPAREN exp RPAREN . LCURLY statement RCURLY

    LCURLY          shift and go to state 226


state 219

    (42) function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars . statement RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (107) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (62) llamada -> . ID LPAREN exp RPAREN
    (77) lectura -> . READ LPAREN var1 RPAREN
    (70) escritura -> . PRINT LPAREN escritura1 RPAREN
    (67) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (64) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (69) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 107 (empty -> .)
    ID              shift and go to state 124
    READ            shift and go to state 125
    PRINT           shift and go to state 126
    FOR             shift and go to state 127
    IF              shift and go to state 128
    WHILE           shift and go to state 129

    statement                      shift and go to state 227
    statement1                     shift and go to state 115
    empty                          shift and go to state 116
    asignacion                     shift and go to state 117
    llamada                        shift and go to state 118
    lectura                        shift and go to state 119
    escritura                      shift and go to state 120
    for                            shift and go to state 121
    if                             shift and go to state 122
    while                          shift and go to state 123

state 220

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars . statement RETURN exp SEMICOLON RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (107) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (62) llamada -> . ID LPAREN exp RPAREN
    (77) lectura -> . READ LPAREN var1 RPAREN
    (70) escritura -> . PRINT LPAREN escritura1 RPAREN
    (67) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (64) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (69) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RETURN          reduce using rule 107 (empty -> .)
    ID              shift and go to state 124
    READ            shift and go to state 125
    PRINT           shift and go to state 126
    FOR             shift and go to state 127
    IF              shift and go to state 128
    WHILE           shift and go to state 129

    statement                      shift and go to state 228
    statement1                     shift and go to state 115
    empty                          shift and go to state 116
    asignacion                     shift and go to state 117
    llamada                        shift and go to state 118
    lectura                        shift and go to state 119
    escritura                      shift and go to state 120
    for                            shift and go to state 121
    if                             shift and go to state 122
    while                          shift and go to state 123

state 221

    (71) escritura1 -> escritura2 COMMA escritura2 .

    RPAREN          reduce using rule 71 (escritura1 -> escritura2 COMMA escritura2 .)


state 222

    (73) escritura2 -> COMILLA CTESTRING COMILLA .

    COMMA           reduce using rule 73 (escritura2 -> COMILLA CTESTRING COMILLA .)
    RPAREN          reduce using rule 73 (escritura2 -> COMILLA CTESTRING COMILLA .)


state 223

    (67) for -> FOR LPAREN for1 RPAREN LCURLY . statement RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (107) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (62) llamada -> . ID LPAREN exp RPAREN
    (77) lectura -> . READ LPAREN var1 RPAREN
    (70) escritura -> . PRINT LPAREN escritura1 RPAREN
    (67) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (64) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (69) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 107 (empty -> .)
    ID              shift and go to state 124
    READ            shift and go to state 125
    PRINT           shift and go to state 126
    FOR             shift and go to state 127
    IF              shift and go to state 128
    WHILE           shift and go to state 129

    statement                      shift and go to state 229
    statement1                     shift and go to state 115
    empty                          shift and go to state 116
    asignacion                     shift and go to state 117
    llamada                        shift and go to state 118
    lectura                        shift and go to state 119
    escritura                      shift and go to state 120
    for                            shift and go to state 121
    if                             shift and go to state 122
    while                          shift and go to state 123

state 224

    (68) for1 -> FROM asignacion TO . exp
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)

    exp                            shift and go to state 230
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 225

    (63) if -> IF LPAREN exp RPAREN LCURLY . statement RCURLY
    (64) if -> IF LPAREN exp RPAREN LCURLY . statement RCURLY else
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (107) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (62) llamada -> . ID LPAREN exp RPAREN
    (77) lectura -> . READ LPAREN var1 RPAREN
    (70) escritura -> . PRINT LPAREN escritura1 RPAREN
    (67) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (64) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (69) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 107 (empty -> .)
    ID              shift and go to state 124
    READ            shift and go to state 125
    PRINT           shift and go to state 126
    FOR             shift and go to state 127
    IF              shift and go to state 128
    WHILE           shift and go to state 129

    statement                      shift and go to state 231
    statement1                     shift and go to state 115
    empty                          shift and go to state 116
    asignacion                     shift and go to state 117
    llamada                        shift and go to state 118
    lectura                        shift and go to state 119
    escritura                      shift and go to state 120
    for                            shift and go to state 121
    if                             shift and go to state 122
    while                          shift and go to state 123

state 226

    (69) while -> WHILE LPAREN exp RPAREN LCURLY . statement RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (107) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (62) llamada -> . ID LPAREN exp RPAREN
    (77) lectura -> . READ LPAREN var1 RPAREN
    (70) escritura -> . PRINT LPAREN escritura1 RPAREN
    (67) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (64) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (69) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 107 (empty -> .)
    ID              shift and go to state 124
    READ            shift and go to state 125
    PRINT           shift and go to state 126
    FOR             shift and go to state 127
    IF              shift and go to state 128
    WHILE           shift and go to state 129

    statement                      shift and go to state 232
    statement1                     shift and go to state 115
    empty                          shift and go to state 116
    asignacion                     shift and go to state 117
    llamada                        shift and go to state 118
    lectura                        shift and go to state 119
    escritura                      shift and go to state 120
    for                            shift and go to state 121
    if                             shift and go to state 122
    while                          shift and go to state 123

state 227

    (42) function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement . RCURLY

    RCURLY          shift and go to state 233


state 228

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement . RETURN exp SEMICOLON RCURLY

    RETURN          shift and go to state 234


state 229

    (67) for -> FOR LPAREN for1 RPAREN LCURLY statement . RCURLY

    RCURLY          shift and go to state 235


state 230

    (68) for1 -> FROM asignacion TO exp .

    RPAREN          reduce using rule 68 (for1 -> FROM asignacion TO exp .)


state 231

    (63) if -> IF LPAREN exp RPAREN LCURLY statement . RCURLY
    (64) if -> IF LPAREN exp RPAREN LCURLY statement . RCURLY else

    RCURLY          shift and go to state 236


state 232

    (69) while -> WHILE LPAREN exp RPAREN LCURLY statement . RCURLY

    RCURLY          shift and go to state 237


state 233

    (42) function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY .

    FUN             reduce using rule 42 (function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY .)
    MAIN            reduce using rule 42 (function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY .)
    $end            reduce using rule 42 (function1 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RCURLY .)


state 234

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN . exp SEMICOLON RCURLY
    (78) exp -> . nexp
    (79) exp -> . nexp OR saveOperator nexp
    (82) nexp -> . compexp
    (83) nexp -> . compexp AND saveOperator compexp
    (84) compexp -> . sumexp
    (85) compexp -> . compexp1 sumexp
    (92) sumexp -> . mulexp
    (93) sumexp -> . mulexp PLUS genera_sum_quad saveOperator mulexp
    (94) sumexp -> . mulexp MINUS genera_sum_quad saveOperator mulexp
    (86) compexp1 -> . sumexp GT saveOperator sumexp
    (87) compexp1 -> . sumexp LT saveOperator sumexp
    (88) compexp1 -> . sumexp GTE saveOperator sumexp
    (89) compexp1 -> . sumexp LTE saveOperator sumexp
    (90) compexp1 -> . sumexp NE saveOperator sumexp
    (91) compexp1 -> . sumexp COMPARE saveOperator sumexp
    (97) mulexp -> . pexp
    (98) mulexp -> . pexp MUL saveOperator pexp
    (99) mulexp -> . pexp DIV saveOperator pexp
    (100) pexp -> . var1 saveId
    (101) pexp -> . CTEI saveCTE
    (102) pexp -> . CTEF saveCTE
    (103) pexp -> . CTEC saveCTE
    (104) pexp -> . CTESTRING saveCTE
    (105) pexp -> . llamada
    (106) pexp -> . LPAREN exp RPAREN
    (15) var1 -> . ID
    (16) var1 -> . ID COMMA var1 addV
    (17) var1 -> . ID arr
    (18) var1 -> . ID arr COMMA var1 addV
    (19) var1 -> . ID mat COMMA var1 addV
    (20) var1 -> . ID mat
    (21) var1 -> . ID mat especial
    (22) var1 -> . empty
    (62) llamada -> . ID LPAREN exp RPAREN
    (107) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    CTESTRING       shift and go to state 80
    LPAREN          shift and go to state 82
    ID              shift and go to state 83
    MUL             reduce using rule 107 (empty -> .)
    DIV             reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    GT              reduce using rule 107 (empty -> .)
    LT              reduce using rule 107 (empty -> .)
    GTE             reduce using rule 107 (empty -> .)
    LTE             reduce using rule 107 (empty -> .)
    NE              reduce using rule 107 (empty -> .)
    COMPARE         reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)

    exp                            shift and go to state 238
    nexp                           shift and go to state 71
    compexp                        shift and go to state 72
    sumexp                         shift and go to state 73
    compexp1                       shift and go to state 74
    mulexp                         shift and go to state 75
    pexp                           shift and go to state 76
    var1                           shift and go to state 77
    llamada                        shift and go to state 81
    empty                          shift and go to state 42

state 235

    (67) for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .

    ID              reduce using rule 67 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    READ            reduce using rule 67 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    PRINT           reduce using rule 67 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    FOR             reduce using rule 67 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    IF              reduce using rule 67 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    WHILE           reduce using rule 67 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    RCURLY          reduce using rule 67 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)
    RETURN          reduce using rule 67 (for -> FOR LPAREN for1 RPAREN LCURLY statement RCURLY .)


state 236

    (63) if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .
    (64) if -> IF LPAREN exp RPAREN LCURLY statement RCURLY . else
    (65) else -> . ELSE LCURLY statement RCURLY
    (66) else -> . empty
    (107) empty -> .

  ! reduce/reduce conflict for ID resolved using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for READ resolved using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for PRINT resolved using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for FOR resolved using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for IF resolved using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for WHILE resolved using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for RCURLY resolved using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
  ! reduce/reduce conflict for RETURN resolved using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    ID              reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    READ            reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    PRINT           reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    FOR             reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    IF              reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    WHILE           reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    RCURLY          reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    RETURN          reduce using rule 63 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY .)
    ELSE            shift and go to state 240

  ! ID              [ reduce using rule 107 (empty -> .) ]
  ! READ            [ reduce using rule 107 (empty -> .) ]
  ! PRINT           [ reduce using rule 107 (empty -> .) ]
  ! FOR             [ reduce using rule 107 (empty -> .) ]
  ! IF              [ reduce using rule 107 (empty -> .) ]
  ! WHILE           [ reduce using rule 107 (empty -> .) ]
  ! RCURLY          [ reduce using rule 107 (empty -> .) ]
  ! RETURN          [ reduce using rule 107 (empty -> .) ]

    else                           shift and go to state 239
    empty                          shift and go to state 241

state 237

    (69) while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .

    ID              reduce using rule 69 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    READ            reduce using rule 69 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    PRINT           reduce using rule 69 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    FOR             reduce using rule 69 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    IF              reduce using rule 69 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    WHILE           reduce using rule 69 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    RCURLY          reduce using rule 69 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)
    RETURN          reduce using rule 69 (while -> WHILE LPAREN exp RPAREN LCURLY statement RCURLY .)


state 238

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp . SEMICOLON RCURLY

    SEMICOLON       shift and go to state 242


state 239

    (64) if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .

    ID              reduce using rule 64 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    READ            reduce using rule 64 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    PRINT           reduce using rule 64 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    FOR             reduce using rule 64 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    IF              reduce using rule 64 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    WHILE           reduce using rule 64 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    RCURLY          reduce using rule 64 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)
    RETURN          reduce using rule 64 (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY else .)


state 240

    (65) else -> ELSE . LCURLY statement RCURLY

    LCURLY          shift and go to state 243


state 241

    (66) else -> empty .

    ID              reduce using rule 66 (else -> empty .)
    READ            reduce using rule 66 (else -> empty .)
    PRINT           reduce using rule 66 (else -> empty .)
    FOR             reduce using rule 66 (else -> empty .)
    IF              reduce using rule 66 (else -> empty .)
    WHILE           reduce using rule 66 (else -> empty .)
    RCURLY          reduce using rule 66 (else -> empty .)
    RETURN          reduce using rule 66 (else -> empty .)


state 242

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON . RCURLY

    RCURLY          shift and go to state 244


state 243

    (65) else -> ELSE LCURLY . statement RCURLY
    (44) statement -> . statement1 statement
    (45) statement -> . empty
    (46) statement1 -> . asignacion SEMICOLON
    (47) statement1 -> . llamada SEMICOLON
    (48) statement1 -> . lectura SEMICOLON
    (49) statement1 -> . escritura SEMICOLON
    (50) statement1 -> . for
    (51) statement1 -> . if
    (52) statement1 -> . while
    (107) empty -> .
    (53) asignacion -> . ID EQUALS exp
    (54) asignacion -> . ID arr EQUALS exp
    (55) asignacion -> . ID mat EQUALS exp
    (62) llamada -> . ID LPAREN exp RPAREN
    (77) lectura -> . READ LPAREN var1 RPAREN
    (70) escritura -> . PRINT LPAREN escritura1 RPAREN
    (67) for -> . FOR LPAREN for1 RPAREN LCURLY statement RCURLY
    (63) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY
    (64) if -> . IF LPAREN exp RPAREN LCURLY statement RCURLY else
    (69) while -> . WHILE LPAREN exp RPAREN LCURLY statement RCURLY

    RCURLY          reduce using rule 107 (empty -> .)
    ID              shift and go to state 124
    READ            shift and go to state 125
    PRINT           shift and go to state 126
    FOR             shift and go to state 127
    IF              shift and go to state 128
    WHILE           shift and go to state 129

    statement                      shift and go to state 245
    statement1                     shift and go to state 115
    empty                          shift and go to state 116
    asignacion                     shift and go to state 117
    llamada                        shift and go to state 118
    lectura                        shift and go to state 119
    escritura                      shift and go to state 120
    for                            shift and go to state 121
    if                             shift and go to state 122
    while                          shift and go to state 123

state 244

    (43) function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY .

    FUN             reduce using rule 43 (function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY .)
    MAIN            reduce using rule 43 (function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY .)
    $end            reduce using rule 43 (function2 -> ID save_fun LPAREN param RPAREN SEMICOLON LCURLY vars statement RETURN exp SEMICOLON RCURLY .)


state 245

    (65) else -> ELSE LCURLY statement . RCURLY

    RCURLY          shift and go to state 246


state 246

    (65) else -> ELSE LCURLY statement RCURLY .

    ID              reduce using rule 65 (else -> ELSE LCURLY statement RCURLY .)
    READ            reduce using rule 65 (else -> ELSE LCURLY statement RCURLY .)
    PRINT           reduce using rule 65 (else -> ELSE LCURLY statement RCURLY .)
    FOR             reduce using rule 65 (else -> ELSE LCURLY statement RCURLY .)
    IF              reduce using rule 65 (else -> ELSE LCURLY statement RCURLY .)
    WHILE           reduce using rule 65 (else -> ELSE LCURLY statement RCURLY .)
    RCURLY          reduce using rule 65 (else -> ELSE LCURLY statement RCURLY .)
    RETURN          reduce using rule 65 (else -> ELSE LCURLY statement RCURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAIN in state 5 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 41 resolved as shift
WARNING: shift/reduce conflict for ID in state 53 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 54 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 55 resolved as shift
WARNING: shift/reduce conflict for ID in state 63 resolved as shift
WARNING: shift/reduce conflict for ID in state 64 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MUL in state 76 resolved as shift
WARNING: shift/reduce conflict for DIV in state 76 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 83 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 83 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 138 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 138 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 138 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 138 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 138 resolved as shift
WARNING: shift/reduce conflict for ID in state 138 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 139 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 139 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 139 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 139 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 139 resolved as shift
WARNING: shift/reduce conflict for ID in state 139 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 140 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 140 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 140 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 140 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 140 resolved as shift
WARNING: shift/reduce conflict for ID in state 140 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 141 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 141 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 141 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 141 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 141 resolved as shift
WARNING: shift/reduce conflict for ID in state 141 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 142 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 142 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 142 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 142 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 142 resolved as shift
WARNING: shift/reduce conflict for ID in state 142 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 143 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 143 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 143 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 143 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 143 resolved as shift
WARNING: shift/reduce conflict for ID in state 143 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 146 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 146 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 146 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 146 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 146 resolved as shift
WARNING: shift/reduce conflict for ID in state 146 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 147 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 147 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 147 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 147 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 147 resolved as shift
WARNING: shift/reduce conflict for ID in state 147 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 166 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 169 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 178 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 178 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 178 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 178 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 178 resolved as shift
WARNING: shift/reduce conflict for ID in state 178 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 179 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 179 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 179 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 179 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 179 resolved as shift
WARNING: shift/reduce conflict for ID in state 179 resolved as shift
WARNING: reduce/reduce conflict in state 212 resolved using rule (escritura2 -> CTEI saveCTE)
WARNING: rejected rule (pexp -> CTEI saveCTE) in state 212
WARNING: reduce/reduce conflict in state 213 resolved using rule (escritura2 -> CTEF saveCTE)
WARNING: rejected rule (pexp -> CTEF saveCTE) in state 213
WARNING: reduce/reduce conflict in state 236 resolved using rule (if -> IF LPAREN exp RPAREN LCURLY statement RCURLY)
WARNING: rejected rule (empty -> <empty>) in state 236
